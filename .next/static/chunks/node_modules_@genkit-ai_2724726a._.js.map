{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/firestoreStateStore.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FlowState,\n  FlowStateQuery,\n  FlowStateQueryResponse,\n  FlowStateSchema,\n  FlowStateStore,\n} from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport { Firestore } from '@google-cloud/firestore';\n\n/** Allow customers to set service account credentials via an environment variable. */\ninterface Credentials {\n  client_email?: string;\n  private_key?: string;\n}\n\n/**\n * Implementation of flow state store that persistes flow state in Firestore.\n */\nexport class FirestoreStateStore implements FlowStateStore {\n  readonly db: Firestore;\n  readonly collection: string;\n  readonly databaseId: string;\n\n  constructor(\n    params: {\n      collection?: string;\n      databaseId?: string;\n      projectId?: string;\n      credentials?: Credentials;\n    } = {}\n  ) {\n    this.collection = params.collection || 'genkit-flows';\n    this.databaseId = params.databaseId || '(default)';\n    this.db = new Firestore({\n      databaseId: this.databaseId,\n      ignoreUndefinedProperties: true,\n      credentials: params.credentials,\n    });\n  }\n\n  async load(id: string): Promise<FlowState | undefined> {\n    const data = (\n      await this.db.collection(this.collection).doc(id).get()\n    ).data();\n    if (!data) {\n      return undefined;\n    }\n    return FlowStateSchema.parse(data);\n  }\n\n  async save(id: string, state: FlowState): Promise<void> {\n    logger.debug(state, 'save state');\n    await this.db.collection(this.collection).doc(id).set(state);\n  }\n\n  async list(query?: FlowStateQuery): Promise<FlowStateQueryResponse> {\n    const limit = query?.limit || 10;\n    let fsQuery = this.db\n      .collection(this.collection)\n      .orderBy('startTime', 'desc');\n    if (query?.continuationToken) {\n      fsQuery = fsQuery.startAfter(parseInt(query.continuationToken));\n    }\n    fsQuery = fsQuery.limit(limit);\n\n    const data = await fsQuery.get();\n    const lastVisible = data.docs[data.docs.length - 1];\n    return {\n      flowStates: data.docs.map((d) => d.data() as FlowState),\n      continuationToken:\n        data.docs.length === limit\n          ? `${lastVisible.data().startTime}`\n          : undefined,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,8BAAA,CAAA;AAAA,SAAA,6BAAA;IAAA,qBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,cAMO;AACP,IAAA,iBAAuB;AACvB,IAAA,mBAA0B;AAWnB,MAAM,oBAA8C;IAKzD,YACE,SAKI,CAAC,CAAA,CACL;QACA,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA,IAAc;QACvC,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA,IAAc;QACvC,IAAA,CAAK,EAAA,GAAK,IAAI,iBAAA,SAAA,CAAU;YACtB,YAAY,IAAA,CAAK,UAAA;YACjB,2BAA2B;YAC3B,aAAa,OAAO,WAAA;QACtB,CAAC;IACH;IAEM,KAAK,EAAA,EAA4C;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACrD,MAAM,OAAA,CACJ,MAAM,IAAA,CAAK,EAAA,CAAG,UAAA,CAAW,IAAA,CAAK,UAAU,EAAE,GAAA,CAAI,EAAE,EAAE,GAAA,CAAI,CAAA,EACtD,IAAA,CAAK;YACP,IAAI,CAAC,MAAM;gBACT,OAAO,KAAA;YACT;YACA,OAAO,YAAA,eAAA,CAAgB,KAAA,CAAM,IAAI;QACnC;IAAA;IAEM,KAAK,EAAA,EAAY,KAAA,EAAiC;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACtD,eAAA,MAAA,CAAO,KAAA,CAAM,OAAO,YAAY;YAChC,MAAM,IAAA,CAAK,EAAA,CAAG,UAAA,CAAW,IAAA,CAAK,UAAU,EAAE,GAAA,CAAI,EAAE,EAAE,GAAA,CAAI,KAAK;QAC7D;IAAA;IAEM,KAAK,KAAA,EAAyD;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YAClE,MAAM,QAAA,CAAQ,SAAA,OAAA,KAAA,IAAA,MAAO,KAAA,KAAS;YAC9B,IAAI,UAAU,IAAA,CAAK,EAAA,CAChB,UAAA,CAAW,IAAA,CAAK,UAAU,EAC1B,OAAA,CAAQ,aAAa,MAAM;YAC9B,IAAI,SAAA,OAAA,KAAA,IAAA,MAAO,iBAAA,EAAmB;gBAC5B,UAAU,QAAQ,UAAA,CAAW,SAAS,MAAM,iBAAiB,CAAC;YAChE;YACA,UAAU,QAAQ,KAAA,CAAM,KAAK;YAE7B,MAAM,OAAO,MAAM,QAAQ,GAAA,CAAI;YAC/B,MAAM,cAAc,KAAK,IAAA,CAAK,KAAK,IAAA,CAAK,MAAA,GAAS,CAAC,CAAA;YAClD,OAAO;gBACL,YAAY,KAAK,IAAA,CAAK,GAAA,CAAI,CAAC,IAAM,EAAE,IAAA,CAAK,CAAc;gBACtD,mBACE,KAAK,IAAA,CAAK,MAAA,KAAW,QACjB,GAAG,YAAY,IAAA,CAAK,EAAE,SAAS,EAAA,GAC/B,KAAA;YACR;QACF;IAAA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/errors.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interrupt error is an internal error thrown by flow states to interrupt execution of the step.\n */\nexport class InterruptError extends Error {}\n\n/**\n * Extracts error message from the given error object, or if input is not an error then just turn the error into a string.\n */\nexport function getErrorMessage(e: any): string {\n  if (e instanceof Error) {\n    return e.message;\n  }\n  return `${e}`;\n}\n\n/**\n * Extracts stack trace from the given error object, or if input is not an error then returns undefined.\n */\nexport function getErrorStack(e: any): string | undefined {\n  if (e instanceof Error) {\n    return e.stack;\n  }\n  return undefined;\n}\n\n/**\n * Exception thrown when flow is not found in the flow state store.\n */\nexport class FlowNotFoundError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\n/**\n * Exception thrown when flow execution is not completed yet.\n */\nexport class FlowStillRunningError extends Error {\n  constructor(readonly flowId: string) {\n    super(\n      `flow ${flowId} is not done execution. Consider using waitForFlowToComplete to wait for ` +\n        'completion before calling getOutput.'\n    );\n  }\n}\n\n/**\n * Exception thrown when flow execution resulted in an error.\n */\nexport class FlowExecutionError extends Error {\n  constructor(\n    readonly flowId: string,\n    readonly originalMessage: string,\n    readonly originalStacktrace?: any\n  ) {\n    super(originalMessage);\n    this.stack = originalStacktrace;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,CAAA;AAAA,SAAA,gBAAA;IAAA,oBAAA,IAAA;IAAA,mBAAA,IAAA;IAAA,uBAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,eAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAmBO,MAAM,uBAAuB,MAAM;AAAC;AAKpC,SAAS,gBAAgB,CAAA,EAAgB;IAC9C,IAAI,aAAa,OAAO;QACtB,OAAO,EAAE,OAAA;IACX;IACA,OAAO,GAAG,CAAC,EAAA;AACb;AAKO,SAAS,cAAc,CAAA,EAA4B;IACxD,IAAI,aAAa,OAAO;QACtB,OAAO,EAAE,KAAA;IACX;IACA,OAAO,KAAA;AACT;AAKO,MAAM,0BAA0B,MAAM;IAC3C,YAAY,GAAA,CAAa;QACvB,KAAA,CAAM,GAAG;IACX;AACF;AAKO,MAAM,8BAA8B,MAAM;IAC/C,YAAqB,MAAA,CAAgB;QACnC,KAAA,CACE,CAAA,KAAA,EAAQ,MAAM,CAAA,6GAAA,CAAA;QAFG,IAAA,CAAA,MAAA,GAAA;IAKrB;AACF;AAKO,MAAM,2BAA2B,MAAM;IAC5C,YACW,MAAA,EACA,eAAA,EACA,kBAAA,CACT;QACA,KAAA,CAAM,eAAe;QAJZ,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,eAAA,GAAA;QACA,IAAA,CAAA,kBAAA,GAAA;QAGT,IAAA,CAAK,KAAA,GAAQ;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/utils.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AsyncLocalStorage } from 'node:async_hooks';\nimport { v4 as uuidv4 } from 'uuid';\nimport z from 'zod';\nimport { Context } from './context.js';\n\n/**\n * Adds flows specific prefix for OpenTelemetry span attributes.\n */\nexport function metadataPrefix(name: string) {\n  return `flow:${name}`;\n}\n\nconst ctxAsyncLocalStorage = new AsyncLocalStorage<\n  Context<z.ZodTypeAny, z.ZodTypeAny, z.ZodTypeAny>\n>();\n\n/**\n * Returns current active context.\n */\nexport function getActiveContext() {\n  return ctxAsyncLocalStorage.getStore();\n}\n\n/**\n * Execute the provided function in the flow context. Call {@link getActiveContext()} anywhere\n * within the async call stack to retrieve the context.\n */\nexport function runWithActiveContext<R>(\n  ctx: Context<z.ZodTypeAny, z.ZodTypeAny, z.ZodTypeAny>,\n  fn: () => R\n) {\n  return ctxAsyncLocalStorage.run(ctx, fn);\n}\n\n/**\n * Generates a flow ID.\n */\nexport function generateFlowId() {\n  return uuidv4();\n}\n\n/**\n * Gets the auth object from the current context.\n */\nexport function getFlowAuth(): any {\n  const ctx = getActiveContext();\n  if (!ctx) {\n    throw new Error('Can only be run from a flow');\n  }\n  return ctx.auth;\n}\n"],"names":["uuidv4"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,gBAAA,IAAA;IAAA,kBAAA,IAAA;IAAA,aAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,sBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,0BAAkC;;;;;AAClC,IAAA,cAA6B;AAOtB,SAAS,eAAe,IAAA,EAAc;IAC3C,OAAO,CAAA,KAAA,EAAQ,IAAI,EAAA;AACrB;AAEA,MAAM,uBAAuB,IAAI,wBAAA,iBAAA,CAE/B;AAKK,SAAS,mBAAmB;IACjC,OAAO,qBAAqB,QAAA,CAAS;AACvC;AAMO,SAAS,qBACd,GAAA,EACA,EAAA,EACA;IACA,OAAO,qBAAqB,GAAA,CAAI,KAAK,EAAE;AACzC;AAKO,SAAS,iBAAiB;IAC/B,OAAA,CAAA,GAAO,YAAAA,EAAAA,EAAO;AAChB;AAKO,SAAS,cAAmB;IACjC,MAAM,MAAM,iBAAiB;IAC7B,IAAI,CAAC,KAAK;QACR,MAAM,IAAI,MAAM,6BAA6B;IAC/C;IACA,OAAO,IAAI,IAAA;AACb","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/context.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FlowState, FlowStateExecution, Operation } from '@genkit-ai/core';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport {\n  SPAN_TYPE_ATTR,\n  runInNewSpan,\n  setCustomMetadataAttribute,\n  setCustomMetadataAttributes,\n} from '@genkit-ai/core/tracing';\nimport { logger } from 'firebase-functions/v1';\nimport { z } from 'zod';\nimport { InterruptError } from './errors.js';\nimport { Flow, RunStepConfig } from './flow.js';\nimport { metadataPrefix } from './utils.js';\n\n/**\n * Context object encapsulates flow execution state at runtime.\n */\nexport class Context<\n  I extends z.ZodTypeAny,\n  O extends z.ZodTypeAny,\n  S extends z.ZodTypeAny,\n> {\n  private seenSteps: Record<string, number> = {};\n\n  constructor(\n    readonly flow: Flow<I, O, S>,\n    readonly flowId: string,\n    readonly state: FlowState,\n    readonly auth?: unknown\n  ) {}\n\n  private isCached(stepName: string): boolean {\n    return this.state.cache.hasOwnProperty(stepName);\n  }\n  private getCached<T>(stepName: string): T {\n    return this.state.cache[stepName].value;\n  }\n  private updateCachedValue(stepName: string, value: any) {\n    this.state.cache[stepName] = value ? { value } : { empty: true };\n  }\n\n  private async memoize<T>(\n    stepName: string,\n    func: () => Promise<T>\n  ): Promise<[T, boolean]> {\n    if (this.isCached(stepName)) {\n      return [this.getCached(stepName), true];\n    }\n    const value = await func();\n    this.updateCachedValue(stepName, value);\n    return [value, false];\n  }\n\n  async saveState() {\n    if (this.flow.stateStore) {\n      await (await this.flow.stateStore()).save(this.flowId, this.state);\n    }\n  }\n\n  // Runs provided function in the current context. The config can specify retry and other behaviors.\n  async run<T>(\n    config: RunStepConfig,\n    input: any | undefined,\n    func: () => Promise<T>\n  ): Promise<T> {\n    return await runInNewSpan(\n      {\n        metadata: {\n          name: config.name,\n        },\n        labels: {\n          [SPAN_TYPE_ATTR]: 'flowStep',\n        },\n      },\n      async (metadata, _, isRoot) => {\n        const stepName = this.resolveStepName(config.name);\n        setCustomMetadataAttributes({\n          [metadataPrefix('stepType')]: 'run',\n          [metadataPrefix('stepName')]: config.name,\n          [metadataPrefix('resolvedStepName')]: stepName,\n        });\n        if (input !== undefined) {\n          metadata.input = input;\n        }\n        const [value, wasCached] = isRoot\n          ? await this.memoize(stepName, func)\n          : [await func(), false];\n        if (wasCached) {\n          setCustomMetadataAttribute(metadataPrefix('state'), 'cached');\n        } else {\n          setCustomMetadataAttribute(metadataPrefix('state'), 'run');\n          if (value !== undefined) {\n            metadata.output = JSON.stringify(value);\n          }\n        }\n        return value;\n      }\n    );\n  }\n\n  private resolveStepName(name: string) {\n    if (this.seenSteps[name] !== undefined) {\n      this.seenSteps[name]++;\n      name += `-${this.seenSteps[name]}`;\n    } else {\n      this.seenSteps[name] = 0;\n    }\n    return name;\n  }\n\n  // Executes interrupt step in the current context.\n  async interrupt<I extends z.ZodTypeAny, O>(\n    stepName: string,\n    func: (payload: I) => Promise<O>,\n    responseSchema: I | null,\n    skipCache?: boolean\n  ): Promise<O> {\n    return await runInNewSpan(\n      {\n        metadata: {\n          name: stepName,\n        },\n        labels: {\n          [SPAN_TYPE_ATTR]: 'flowStep',\n        },\n      },\n      async (metadata) => {\n        const resolvedStepName = this.resolveStepName(stepName);\n        setCustomMetadataAttributes({\n          [metadataPrefix('stepType')]: 'interrupt',\n          [metadataPrefix('stepName')]: stepName,\n          [metadataPrefix('resolvedStepName')]: resolvedStepName,\n        });\n        if (!skipCache && this.isCached(resolvedStepName)) {\n          setCustomMetadataAttribute(metadataPrefix('state'), 'skipped');\n          return this.getCached(resolvedStepName);\n        }\n        // TODO: refactor this.\n        if (this.state.eventsTriggered.hasOwnProperty(resolvedStepName)) {\n          let value;\n          try {\n            value = await func(\n              this.state.eventsTriggered[resolvedStepName] as I\n            );\n          } catch (e) {\n            if (e instanceof InterruptError) {\n              setCustomMetadataAttribute(metadataPrefix('state'), 'interrupt');\n            } else {\n              setCustomMetadataAttribute(metadataPrefix('state'), 'error');\n            }\n            throw e;\n          }\n          this.state.blockedOnStep = null;\n          if (!skipCache) {\n            this.updateCachedValue(resolvedStepName, value);\n          }\n          setCustomMetadataAttribute(metadataPrefix('state'), 'dispatch');\n          if (value !== undefined) {\n            metadata.output = JSON.stringify(value);\n          }\n          return value;\n        }\n        logger.debug('blockedOnStep', resolvedStepName);\n        this.state.blockedOnStep = { name: resolvedStepName };\n        if (responseSchema) {\n          this.state.blockedOnStep.schema = JSON.stringify(\n            toJsonSchema({ schema: responseSchema })\n          );\n        }\n        setCustomMetadataAttribute(metadataPrefix('state'), 'interrupted');\n        throw new InterruptError();\n      }\n    );\n  }\n\n  // Sleep for the specified number of seconds.\n  async sleep<I extends z.ZodTypeAny, O extends z.ZodTypeAny>(\n    stepName: string,\n    seconds: number\n  ): Promise<O> {\n    const resolvedStepName = this.resolveStepName(stepName);\n    if (this.isCached(resolvedStepName)) {\n      setCustomMetadataAttribute(metadataPrefix('state'), 'skipped');\n      return this.getCached(resolvedStepName);\n    }\n\n    await this.flow.scheduler(\n      this.flow,\n      {\n        runScheduled: {\n          flowId: this.flowId,\n        },\n      },\n      seconds\n    );\n    this.updateCachedValue(resolvedStepName, undefined);\n    return this.interrupt(\n      stepName,\n      (input: z.infer<I>): z.infer<O> => input,\n      null\n    );\n  }\n\n  /**\n   * Wait for the provided flow to complete execution. This will do a poll.\n   * Poll will be done with an exponential backoff (configurable).\n   */\n  async waitFor(opts: {\n    flow: Flow<z.ZodTypeAny, z.ZodTypeAny, z.ZodTypeAny>;\n    stepName: string;\n    flowIds: string[];\n    pollingConfig?: PollingConfig;\n  }): Promise<Operation[]> {\n    const resolvedStepName = this.resolveStepName(opts.stepName);\n    if (this.isCached(resolvedStepName)) {\n      return this.getCached(resolvedStepName);\n    }\n    const states = await this.getFlowsOperations(opts.flow, opts.flowIds);\n    if (states.includes(undefined)) {\n      throw new Error(\n        'Unable to resolve flow state for ' +\n          opts.flowIds[states.indexOf(undefined)]\n      );\n    }\n    const ops = states.map((s) => s!.operation);\n    if (ops.map((op) => op.done).reduce((a, b) => a && b)) {\n      // all done.\n      this.updateCachedValue(resolvedStepName, states);\n      return ops;\n    }\n    await this.flow.scheduler(\n      this.flow,\n      {\n        runScheduled: {\n          flowId: this.flowId,\n        },\n      },\n      opts.pollingConfig?.interval || 5\n    );\n    throw new InterruptError();\n  }\n\n  private async getFlowsOperations(\n    flow: Flow<z.ZodTypeAny, z.ZodTypeAny, z.ZodTypeAny>,\n    flowIds: string[]\n  ): Promise<(FlowState | undefined)[]> {\n    return await Promise.all(\n      flowIds.map(async (id) => {\n        if (!flow.stateStore) {\n          throw new Error('Flow state store must be configured');\n        }\n        return (await flow.stateStore()).load(id);\n      })\n    );\n  }\n\n  /**\n   * Returns current active execution state.\n   */\n  getCurrentExecution(): FlowStateExecution {\n    return this.state.executions[this.state.executions.length - 1];\n  }\n}\n\nexport interface PollingConfig {\n  // TODO: add more options\n  interval: number;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,CAAA;AAAA,SAAA,iBAAA;IAAA,SAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAiBA,IAAA,gBAA6B;AAC7B,IAAA,iBAKO;AACP,IAAA,YAAuB;AAEvB,IAAA,gBAA+B;AAE/B,IAAA,eAA+B;AAKxB,MAAM,QAIX;IAGA,YACW,IAAA,EACA,MAAA,EACA,KAAA,EACA,IAAA,CACT;QAJS,IAAA,CAAA,IAAA,GAAA;QACA,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,KAAA,GAAA;QACA,IAAA,CAAA,IAAA,GAAA;QANX,IAAA,CAAQ,SAAA,GAAoC,CAAC;IAO1C;IAEK,SAAS,QAAA,EAA2B;QAC1C,OAAO,IAAA,CAAK,KAAA,CAAM,KAAA,CAAM,cAAA,CAAe,QAAQ;IACjD;IACQ,UAAa,QAAA,EAAqB;QACxC,OAAO,IAAA,CAAK,KAAA,CAAM,KAAA,CAAM,QAAQ,CAAA,CAAE,KAAA;IACpC;IACQ,kBAAkB,QAAA,EAAkB,KAAA,EAAY;QACtD,IAAA,CAAK,KAAA,CAAM,KAAA,CAAM,QAAQ,CAAA,GAAI,QAAQ;YAAE;QAAM,IAAI;YAAE,OAAO;QAAK;IACjE;IAEc,QACZ,QAAA,EACA,IAAA,EACuB;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACvB,IAAI,IAAA,CAAK,QAAA,CAAS,QAAQ,GAAG;gBAC3B,OAAO;oBAAC,IAAA,CAAK,SAAA,CAAU,QAAQ;oBAAG,IAAI;iBAAA;YACxC;YACA,MAAM,QAAQ,MAAM,KAAK;YACzB,IAAA,CAAK,iBAAA,CAAkB,UAAU,KAAK;YACtC,OAAO;gBAAC;gBAAO,KAAK;aAAA;QACtB;IAAA;IAEM,YAAY;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YAChB,IAAI,IAAA,CAAK,IAAA,CAAK,UAAA,EAAY;gBACxB,MAAA,CAAO,MAAM,IAAA,CAAK,IAAA,CAAK,UAAA,CAAW,CAAA,EAAG,IAAA,CAAK,IAAA,CAAK,MAAA,EAAQ,IAAA,CAAK,KAAK;YACnE;QACF;IAAA;IAAA,mGAAA;IAGM,IACJ,MAAA,EACA,KAAA,EACA,IAAA,EACY;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACZ,OAAO,MAAA,CAAA,GAAM,eAAA,YAAA,EACX;gBACE,UAAU;oBACR,MAAM,OAAO,IAAA;gBACf;gBACA,QAAQ;oBACN,CAAC,eAAA,cAAc,CAAA,EAAG;gBACpB;YACF,GACA,CAAO,UAAU,GAAG,SAAW,QAAA,IAAA,EAAA,MAAA;oBAC7B,MAAM,WAAW,IAAA,CAAK,eAAA,CAAgB,OAAO,IAAI;oBACjD,CAAA,GAAA,eAAA,2BAAA,EAA4B;wBAC1B,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,UAAU,CAAC,CAAA,EAAG;wBAC9B,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,UAAU,CAAC,CAAA,EAAG,OAAO,IAAA;wBACrC,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,kBAAkB,CAAC,CAAA,EAAG;oBACxC,CAAC;oBACD,IAAI,UAAU,KAAA,GAAW;wBACvB,SAAS,KAAA,GAAQ;oBACnB;oBACA,MAAM,CAAC,OAAO,SAAS,CAAA,GAAI,SACvB,MAAM,IAAA,CAAK,OAAA,CAAQ,UAAU,IAAI,IACjC;yBAAC,MAAM,MAAK;wBAAG,KAAK;qBAAA;oBACxB,IAAI,WAAW;wBACb,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,QAAQ;oBAC9D,OAAO;wBACL,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,KAAK;wBACzD,IAAI,UAAU,KAAA,GAAW;4BACvB,SAAS,MAAA,GAAS,KAAK,SAAA,CAAU,KAAK;wBACxC;oBACF;oBACA,OAAO;gBACT;QAEJ;IAAA;IAEQ,gBAAgB,IAAA,EAAc;QACpC,IAAI,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA,KAAM,KAAA,GAAW;YACtC,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA;YACnB,QAAQ,CAAA,CAAA,EAAI,IAAA,CAAK,SAAA,CAAU,IAAI,CAAC,EAAA;QAClC,OAAO;YACL,IAAA,CAAK,SAAA,CAAU,IAAI,CAAA,GAAI;QACzB;QACA,OAAO;IACT;IAAA,kDAAA;IAGM,UACJ,QAAA,EACA,IAAA,EACA,cAAA,EACA,SAAA,EACY;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACZ,OAAO,MAAA,CAAA,GAAM,eAAA,YAAA,EACX;gBACE,UAAU;oBACR,MAAM;gBACR;gBACA,QAAQ;oBACN,CAAC,eAAA,cAAc,CAAA,EAAG;gBACpB;YACF,GACA,CAAO,WAAa,QAAA,IAAA,EAAA,MAAA;oBAClB,MAAM,mBAAmB,IAAA,CAAK,eAAA,CAAgB,QAAQ;oBACtD,CAAA,GAAA,eAAA,2BAAA,EAA4B;wBAC1B,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,UAAU,CAAC,CAAA,EAAG;wBAC9B,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,UAAU,CAAC,CAAA,EAAG;wBAC9B,CAAA,CAAA,GAAC,aAAA,cAAA,EAAe,kBAAkB,CAAC,CAAA,EAAG;oBACxC,CAAC;oBACD,IAAI,CAAC,aAAa,IAAA,CAAK,QAAA,CAAS,gBAAgB,GAAG;wBACjD,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,SAAS;wBAC7D,OAAO,IAAA,CAAK,SAAA,CAAU,gBAAgB;oBACxC;oBAEA,IAAI,IAAA,CAAK,KAAA,CAAM,eAAA,CAAgB,cAAA,CAAe,gBAAgB,GAAG;wBAC/D,IAAI;wBACJ,IAAI;4BACF,QAAQ,MAAM,KACZ,IAAA,CAAK,KAAA,CAAM,eAAA,CAAgB,gBAAgB,CAAA;wBAE/C,EAAA,OAAS,GAAG;4BACV,IAAI,aAAa,cAAA,cAAA,EAAgB;gCAC/B,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,WAAW;4BACjE,OAAO;gCACL,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,OAAO;4BAC7D;4BACA,MAAM;wBACR;wBACA,IAAA,CAAK,KAAA,CAAM,aAAA,GAAgB;wBAC3B,IAAI,CAAC,WAAW;4BACd,IAAA,CAAK,iBAAA,CAAkB,kBAAkB,KAAK;wBAChD;wBACA,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,UAAU;wBAC9D,IAAI,UAAU,KAAA,GAAW;4BACvB,SAAS,MAAA,GAAS,KAAK,SAAA,CAAU,KAAK;wBACxC;wBACA,OAAO;oBACT;oBACA,UAAA,MAAA,CAAO,KAAA,CAAM,iBAAiB,gBAAgB;oBAC9C,IAAA,CAAK,KAAA,CAAM,aAAA,GAAgB;wBAAE,MAAM;oBAAiB;oBACpD,IAAI,gBAAgB;wBAClB,IAAA,CAAK,KAAA,CAAM,aAAA,CAAc,MAAA,GAAS,KAAK,SAAA,CAAA,CAAA,GACrC,cAAA,YAAA,EAAa;4BAAE,QAAQ;wBAAe,CAAC;oBAE3C;oBACA,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,aAAa;oBACjE,MAAM,IAAI,cAAA,cAAA,CAAe;gBAC3B;QAEJ;IAAA;IAAA,6CAAA;IAGM,MACJ,QAAA,EACA,OAAA,EACY;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACZ,MAAM,mBAAmB,IAAA,CAAK,eAAA,CAAgB,QAAQ;YACtD,IAAI,IAAA,CAAK,QAAA,CAAS,gBAAgB,GAAG;gBACnC,CAAA,GAAA,eAAA,0BAAA,EAAA,CAAA,GAA2B,aAAA,cAAA,EAAe,OAAO,GAAG,SAAS;gBAC7D,OAAO,IAAA,CAAK,SAAA,CAAU,gBAAgB;YACxC;YAEA,MAAM,IAAA,CAAK,IAAA,CAAK,SAAA,CACd,IAAA,CAAK,IAAA,EACL;gBACE,cAAc;oBACZ,QAAQ,IAAA,CAAK,MAAA;gBACf;YACF,GACA;YAEF,IAAA,CAAK,iBAAA,CAAkB,kBAAkB,KAAA,CAAS;YAClD,OAAO,IAAA,CAAK,SAAA,CACV,UACA,CAAC,QAAkC,OACnC;QAEJ;IAAA;IAAA;;;GAAA,GAMM,QAAQ,IAAA,EAKW;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YApO3B,IAAA;YAqOI,MAAM,mBAAmB,IAAA,CAAK,eAAA,CAAgB,KAAK,QAAQ;YAC3D,IAAI,IAAA,CAAK,QAAA,CAAS,gBAAgB,GAAG;gBACnC,OAAO,IAAA,CAAK,SAAA,CAAU,gBAAgB;YACxC;YACA,MAAM,SAAS,MAAM,IAAA,CAAK,kBAAA,CAAmB,KAAK,IAAA,EAAM,KAAK,OAAO;YACpE,IAAI,OAAO,QAAA,CAAS,KAAA,CAAS,GAAG;gBAC9B,MAAM,IAAI,MACR,sCACE,KAAK,OAAA,CAAQ,OAAO,OAAA,CAAQ,KAAA,CAAS,CAAC,CAAA;YAE5C;YACA,MAAM,MAAM,OAAO,GAAA,CAAI,CAAC,IAAM,EAAG,SAAS;YAC1C,IAAI,IAAI,GAAA,CAAI,CAAC,KAAO,GAAG,IAAI,EAAE,MAAA,CAAO,CAAC,GAAG,IAAM,KAAK,CAAC,GAAG;gBAErD,IAAA,CAAK,iBAAA,CAAkB,kBAAkB,MAAM;gBAC/C,OAAO;YACT;YACA,MAAM,IAAA,CAAK,IAAA,CAAK,SAAA,CACd,IAAA,CAAK,IAAA,EACL;gBACE,cAAc;oBACZ,QAAQ,IAAA,CAAK,MAAA;gBACf;YACF,GAAA,CAAA,CACA,KAAA,KAAK,aAAA,KAAL,OAAA,KAAA,IAAA,GAAoB,QAAA,KAAY;YAElC,MAAM,IAAI,cAAA,cAAA,CAAe;QAC3B;IAAA;IAEc,mBACZ,IAAA,EACA,OAAA,EACoC;QAAA,OAAA,QAAA,IAAA,EAAA,MAAA;YACpC,OAAO,MAAM,QAAQ,GAAA,CACnB,QAAQ,GAAA,CAAI,CAAO,KAAO,QAAA,IAAA,EAAA,MAAA;oBACxB,IAAI,CAAC,KAAK,UAAA,EAAY;wBACpB,MAAM,IAAI,MAAM,qCAAqC;oBACvD;oBACA,OAAA,CAAQ,MAAM,KAAK,UAAA,CAAW,CAAA,EAAG,IAAA,CAAK,EAAE;gBAC1C,EAAC;QAEL;IAAA;IAAA;;GAAA,GAKA,sBAA0C;QACxC,OAAO,IAAA,CAAK,KAAA,CAAM,UAAA,CAAW,IAAA,CAAK,KAAA,CAAM,UAAA,CAAW,MAAA,GAAS,CAAC,CAAA;IAC/D;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/types.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, StreamingCallback } from '@genkit-ai/core';\nimport { z } from 'zod';\nimport { Flow } from './flow.js';\n\nexport type Invoker<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> = (\n  flow: Flow<I, O, S>,\n  msg: FlowInvokeEnvelopeMessage,\n  streamingCallback?: StreamingCallback<any>\n) => Promise<Operation>;\n\nexport type Scheduler<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> = (\n  flow: Flow<I, O, S>,\n  msg: FlowInvokeEnvelopeMessage,\n  delaySeconds?: number\n) => Promise<void>;\n\n/**\n * The message format used by the flow task queue and control interface.\n */\nexport const FlowInvokeEnvelopeMessageSchema = z.object({\n  // Start new flow.\n  start: z\n    .object({\n      input: z.unknown().optional(),\n      labels: z.record(z.string(), z.string()).optional(),\n    })\n    .optional(),\n  // Schedule new flow.\n  schedule: z\n    .object({\n      input: z.unknown().optional(),\n      delay: z.number().optional(),\n    })\n    .optional(),\n  // Run previously scheduled flow.\n  runScheduled: z\n    .object({\n      flowId: z.string(),\n    })\n    .optional(),\n  // Retry failed step (only if step is setup for retry)\n  retry: z\n    .object({\n      flowId: z.string(),\n    })\n    .optional(),\n  // Resume an interrupted flow.\n  resume: z\n    .object({\n      flowId: z.string(),\n      payload: z.unknown().optional(),\n    })\n    .optional(),\n  // State check for a given flow ID. No side effects, can be used to check flow state.\n  state: z\n    .object({\n      flowId: z.string(),\n    })\n    .optional(),\n});\nexport type FlowInvokeEnvelopeMessage = z.infer<\n  typeof FlowInvokeEnvelopeMessageSchema\n>;\n\nexport const FlowActionInputSchema = FlowInvokeEnvelopeMessageSchema.extend({\n  auth: z.unknown().optional(),\n});\n\n/**\n * Retry options for flows and steps.\n */\nexport interface RetryConfig {\n  /**\n   * Maximum number of times a request should be attempted.\n   * If left unspecified, will default to 3.\n   */\n  maxAttempts?: number;\n  /**\n   * Maximum amount of time for retrying failed task.\n   * If left unspecified will retry indefinitely.\n   */\n  maxRetrySeconds?: number;\n  /**\n   * The maximum amount of time to wait between attempts.\n   * If left unspecified will default to 1hr.\n   */\n  maxBackoffSeconds?: number;\n  /**\n   * The maximum number of times to double the backoff between\n   * retries. If left unspecified will default to 16.\n   */\n  maxDoublings?: number;\n  /**\n   * The minimum time to wait between attempts. If left unspecified\n   * will default to 100ms.\n   */\n  minBackoffSeconds?: number;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,uBAAA,IAAA;IAAA,iCAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAiBA,IAAA,aAAkB;AA0BX,MAAM,kCAAkC,WAAA,CAAA,CAAE,MAAA,CAAO;IAAA,kBAAA;IAEtD,OAAO,WAAA,CAAA,CACJ,MAAA,CAAO;QACN,OAAO,WAAA,CAAA,CAAE,OAAA,CAAQ,EAAE,QAAA,CAAS;QAC5B,QAAQ,WAAA,CAAA,CAAE,MAAA,CAAO,WAAA,CAAA,CAAE,MAAA,CAAO,GAAG,WAAA,CAAA,CAAE,MAAA,CAAO,CAAC,EAAE,QAAA,CAAS;IACpD,CAAC,EACA,QAAA,CAAS;IAAA,qBAAA;IAEZ,UAAU,WAAA,CAAA,CACP,MAAA,CAAO;QACN,OAAO,WAAA,CAAA,CAAE,OAAA,CAAQ,EAAE,QAAA,CAAS;QAC5B,OAAO,WAAA,CAAA,CAAE,MAAA,CAAO,EAAE,QAAA,CAAS;IAC7B,CAAC,EACA,QAAA,CAAS;IAAA,iCAAA;IAEZ,cAAc,WAAA,CAAA,CACX,MAAA,CAAO;QACN,QAAQ,WAAA,CAAA,CAAE,MAAA,CAAO;IACnB,CAAC,EACA,QAAA,CAAS;IAAA,sDAAA;IAEZ,OAAO,WAAA,CAAA,CACJ,MAAA,CAAO;QACN,QAAQ,WAAA,CAAA,CAAE,MAAA,CAAO;IACnB,CAAC,EACA,QAAA,CAAS;IAAA,8BAAA;IAEZ,QAAQ,WAAA,CAAA,CACL,MAAA,CAAO;QACN,QAAQ,WAAA,CAAA,CAAE,MAAA,CAAO;QACjB,SAAS,WAAA,CAAA,CAAE,OAAA,CAAQ,EAAE,QAAA,CAAS;IAChC,CAAC,EACA,QAAA,CAAS;IAAA,qFAAA;IAEZ,OAAO,WAAA,CAAA,CACJ,MAAA,CAAO;QACN,QAAQ,WAAA,CAAA,CAAE,MAAA,CAAO;IACnB,CAAC,EACA,QAAA,CAAS;AACd,CAAC;AAKM,MAAM,wBAAwB,gCAAgC,MAAA,CAAO;IAC1E,MAAM,WAAA,CAAA,CAAE,OAAA,CAAQ,EAAE,QAAA,CAAS;AAC7B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/flow.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Action,\n  FlowError,\n  FlowState,\n  FlowStateSchema,\n  FlowStateStore,\n  Operation,\n  StreamingCallback,\n  defineAction,\n  getStreamingCallback,\n  config as globalConfig,\n  isDevEnv,\n} from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport {\n  SPAN_TYPE_ATTR,\n  newTrace,\n  setCustomMetadataAttribute,\n  setCustomMetadataAttributes,\n} from '@genkit-ai/core/tracing';\nimport { SpanStatusCode } from '@opentelemetry/api';\nimport * as bodyParser from 'body-parser';\nimport { CorsOptions, default as cors } from 'cors';\nimport express from 'express';\nimport { performance } from 'node:perf_hooks';\nimport * as z from 'zod';\nimport { Context } from './context.js';\nimport {\n  FlowExecutionError,\n  FlowStillRunningError,\n  InterruptError,\n  getErrorMessage,\n  getErrorStack,\n} from './errors.js';\nimport {\n  FlowActionInputSchema,\n  FlowInvokeEnvelopeMessage,\n  FlowInvokeEnvelopeMessageSchema,\n  Invoker,\n  RetryConfig,\n  Scheduler,\n} from './types.js';\nimport {\n  generateFlowId,\n  metadataPrefix,\n  runWithActiveContext,\n} from './utils.js';\n\nconst streamDelimiter = '\\n';\n\nconst CREATED_FLOWS = 'genkit__CREATED_FLOWS';\n\nfunction createdFlows(): Flow<any, any, any>[] {\n  if (global[CREATED_FLOWS] === undefined) {\n    global[CREATED_FLOWS] = [];\n  }\n  return global[CREATED_FLOWS];\n}\n\n/**\n * Step configuration for retries, etc.\n */\nexport interface RunStepConfig {\n  name: string;\n  retryConfig?: RetryConfig;\n}\n\n/**\n * Flow Auth policy. Consumes the authorization context of the flow and\n * performs checks before the flow runs. If this throws, the flow will not\n * be executed.\n */\nexport interface FlowAuthPolicy<I extends z.ZodTypeAny = z.ZodTypeAny> {\n  (auth: any | undefined, input: z.infer<I>): void | Promise<void>;\n}\n\n/**\n * For express-based flows, req.auth should contain the value to bepassed into\n * the flow context.\n */\nexport interface __RequestWithAuth extends express.Request {\n  auth?: unknown;\n}\n\n/**\n * Defines the flow.\n */\nexport function defineFlow<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  config: {\n    name: string;\n    inputSchema?: I;\n    outputSchema?: O;\n    streamSchema?: S;\n    authPolicy?: FlowAuthPolicy<I>;\n    middleware?: express.RequestHandler[];\n    invoker?: Invoker<I, O, S>;\n    experimentalDurable?: boolean;\n    experimentalScheduler?: Scheduler<I, O, S>;\n  },\n  steps: StepsFunction<I, O, S>\n): Flow<I, O, S> {\n  const f = new Flow(\n    {\n      name: config.name,\n      inputSchema: config.inputSchema,\n      outputSchema: config.outputSchema,\n      streamSchema: config.streamSchema,\n      experimentalDurable: !!config.experimentalDurable,\n      stateStore: globalConfig\n        ? () => globalConfig.getFlowStateStore()\n        : undefined,\n      authPolicy: config.authPolicy,\n      middleware: config.middleware,\n      // We always use local dispatcher in dev mode or when one is not provided.\n      invoker: async (flow, msg, streamingCallback) => {\n        if (!isDevEnv() && config.invoker) {\n          return config.invoker(flow, msg, streamingCallback);\n        }\n        const state = await flow.runEnvelope(msg, streamingCallback);\n        return state.operation;\n      },\n      scheduler: async (flow, msg, delay = 0) => {\n        if (!config.experimentalDurable) {\n          throw new Error(\n            'This flow is not durable, cannot use scheduling features.'\n          );\n        }\n        if (!isDevEnv() && config.experimentalScheduler) {\n          return config.experimentalScheduler(flow, msg, delay);\n        }\n        setTimeout(() => flow.runEnvelope(msg), delay * 1000);\n      },\n    },\n    steps\n  );\n  createdFlows().push(f);\n  wrapAsAction(f);\n  return f;\n}\n\nexport interface FlowWrapper<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  flow: Flow<I, O, S>;\n}\n\nexport class Flow<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  readonly name: string;\n  readonly inputSchema?: I;\n  readonly outputSchema?: O;\n  readonly streamSchema?: S;\n  readonly stateStore?: () => Promise<FlowStateStore>;\n  readonly invoker: Invoker<I, O, S>;\n  readonly scheduler: Scheduler<I, O, S>;\n  readonly experimentalDurable: boolean;\n  readonly authPolicy?: FlowAuthPolicy<I>;\n  readonly middleware?: express.RequestHandler[];\n\n  constructor(\n    config: {\n      name: string;\n      inputSchema?: I;\n      outputSchema?: O;\n      streamSchema?: S;\n      stateStore?: () => Promise<FlowStateStore>;\n      invoker: Invoker<I, O, S>;\n      scheduler: Scheduler<I, O, S>;\n      experimentalDurable: boolean;\n      authPolicy?: FlowAuthPolicy<I>;\n      middleware?: express.RequestHandler[];\n    },\n    private steps: StepsFunction<I, O, S>\n  ) {\n    this.name = config.name;\n    this.inputSchema = config.inputSchema;\n    this.outputSchema = config.outputSchema;\n    this.streamSchema = config.streamSchema;\n    this.stateStore = config.stateStore;\n    this.invoker = config.invoker;\n    this.scheduler = config.scheduler;\n    this.experimentalDurable = config.experimentalDurable;\n    this.authPolicy = config.authPolicy;\n    this.middleware = config.middleware;\n\n    // Durable flows can't use an auth policy; instead they should be invoked\n    // from a privileged context after ACL checks are performed.\n    if (this.authPolicy && this.experimentalDurable) {\n      throw new Error('Durable flows can not define auth policies.');\n    }\n  }\n\n  /**\n   * Executes the flow with the input directly.\n   *\n   * This will either be called by runEnvelope when starting durable flows,\n   * or it will be called directly when starting non-durable flows.\n   */\n  async runDirectly(\n    input: unknown,\n    opts: {\n      streamingCallback?: StreamingCallback<unknown>;\n      labels?: Record<string, string>;\n      auth?: unknown;\n    }\n  ): Promise<FlowState> {\n    const flowId = generateFlowId();\n    const state = createNewState(flowId, this.name, input);\n    const ctx = new Context(this, flowId, state, opts.auth);\n    try {\n      await this.executeSteps(\n        ctx,\n        this.steps,\n        'start',\n        opts.streamingCallback,\n        opts.labels\n      );\n    } finally {\n      if (isDevEnv() || this.experimentalDurable) {\n        await ctx.saveState();\n      }\n    }\n    return state;\n  }\n\n  /**\n   * Executes the flow with the input in the envelope format.\n   */\n  async runEnvelope(\n    req: FlowInvokeEnvelopeMessage,\n    streamingCallback?: StreamingCallback<any>,\n    auth?: unknown\n  ): Promise<FlowState> {\n    logger.debug(req, 'runEnvelope');\n    if (req.start) {\n      // First time, create new state.\n      return this.runDirectly(req.start.input, {\n        streamingCallback,\n        auth,\n        labels: req.start.labels,\n      });\n    }\n    if (req.schedule) {\n      if (!this.experimentalDurable) {\n        throw new Error('Cannot schedule a non-durable flow');\n      }\n      if (!this.stateStore) {\n        throw new Error(\n          'Flow state store for durable flows must be configured'\n        );\n      }\n      // First time, create new state.\n      const flowId = generateFlowId();\n      const state = createNewState(flowId, this.name, req.schedule.input);\n      try {\n        await (await this.stateStore()).save(flowId, state);\n        await this.scheduler(\n          this,\n          { runScheduled: { flowId } } as FlowInvokeEnvelopeMessage,\n          req.schedule.delay\n        );\n      } catch (e) {\n        state.operation.done = true;\n        state.operation.result = {\n          error: getErrorMessage(e),\n          stacktrace: getErrorStack(e),\n        };\n        await (await this.stateStore()).save(flowId, state);\n      }\n      return state;\n    }\n    if (req.state) {\n      if (!this.experimentalDurable) {\n        throw new Error('Cannot state check a non-durable flow');\n      }\n      if (!this.stateStore) {\n        throw new Error(\n          'Flow state store for durable flows must be configured'\n        );\n      }\n      const flowId = req.state.flowId;\n      const state = await (await this.stateStore()).load(flowId);\n      if (state === undefined) {\n        throw new Error(`Unable to find flow state for ${flowId}`);\n      }\n      return state;\n    }\n    if (req.runScheduled) {\n      if (!this.experimentalDurable) {\n        throw new Error('Cannot run scheduled non-durable flow');\n      }\n      if (!this.stateStore) {\n        throw new Error(\n          'Flow state store for durable flows must be configured'\n        );\n      }\n      const flowId = req.runScheduled.flowId;\n      const state = await (await this.stateStore()).load(flowId);\n      if (state === undefined) {\n        throw new Error(`Unable to find flow state for ${flowId}`);\n      }\n      const ctx = new Context(this, flowId, state);\n      try {\n        await this.executeSteps(\n          ctx,\n          this.steps,\n          'runScheduled',\n          undefined,\n          undefined\n        );\n      } finally {\n        await ctx.saveState();\n      }\n      return state;\n    }\n    if (req.resume) {\n      if (!this.experimentalDurable) {\n        throw new Error('Cannot resume a non-durable flow');\n      }\n      if (!this.stateStore) {\n        throw new Error(\n          'Flow state store for durable flows must be configured'\n        );\n      }\n      const flowId = req.resume.flowId;\n      const state = await (await this.stateStore()).load(flowId);\n      if (state === undefined) {\n        throw new Error(`Unable to find flow state for ${flowId}`);\n      }\n      if (!state.blockedOnStep) {\n        throw new Error(\n          \"Unable to resume flow that's currently not interrupted\"\n        );\n      }\n      state.eventsTriggered[state.blockedOnStep.name] = req.resume.payload;\n      const ctx = new Context(this, flowId, state);\n      try {\n        await this.executeSteps(\n          ctx,\n          this.steps,\n          'resume',\n          undefined,\n          undefined\n        );\n      } finally {\n        await ctx.saveState();\n      }\n      return state;\n    }\n    // TODO: add retry\n\n    throw new Error(\n      'Unexpected envelope message case, must set one of: ' +\n        'start, schedule, runScheduled, resume, retry, state'\n    );\n  }\n\n  // TODO: refactor me... this is a mess!\n  private async executeSteps(\n    ctx: Context<I, O, S>,\n    handler: StepsFunction<I, O, S>,\n    dispatchType: string,\n    streamingCallback: StreamingCallback<any> | undefined,\n    labels: Record<string, string> | undefined\n  ) {\n    const startTimeMs = performance.now();\n    await runWithActiveContext(ctx, async () => {\n      let traceContext;\n      if (ctx.state.traceContext) {\n        traceContext = JSON.parse(ctx.state.traceContext);\n      }\n      let ctxLinks = traceContext ? [{ context: traceContext }] : [];\n      let errored = false;\n      const output = await newTrace(\n        {\n          name: ctx.flow.name,\n          labels: {\n            [SPAN_TYPE_ATTR]: 'flow',\n          },\n          links: ctxLinks,\n        },\n        async (metadata, rootSpan) => {\n          ctx.state.executions.push({\n            startTime: Date.now(),\n            traceIds: [],\n          });\n          setCustomMetadataAttribute(\n            metadataPrefix(`execution`),\n            (ctx.state.executions.length - 1).toString()\n          );\n          if (labels) {\n            Object.keys(labels).forEach((label) => {\n              setCustomMetadataAttribute(\n                metadataPrefix(`label:${label}`),\n                labels[label]\n              );\n            });\n          }\n\n          setCustomMetadataAttributes({\n            [metadataPrefix('name')]: this.name,\n            [metadataPrefix('id')]: ctx.flowId,\n          });\n          ctx\n            .getCurrentExecution()\n            .traceIds.push(rootSpan.spanContext().traceId);\n          // Save the trace in the state so that we can tie subsequent invocation together.\n          if (!traceContext) {\n            ctx.state.traceContext = JSON.stringify(rootSpan.spanContext());\n          }\n          setCustomMetadataAttribute(\n            metadataPrefix('dispatchType'),\n            dispatchType\n          );\n          try {\n            const input = this.inputSchema\n              ? this.inputSchema.parse(ctx.state.input)\n              : ctx.state.input;\n            metadata.input = input;\n            const output = await handler(input, streamingCallback);\n            metadata.output = JSON.stringify(output);\n            setCustomMetadataAttribute(metadataPrefix('state'), 'done');\n            return output;\n          } catch (e) {\n            if (e instanceof InterruptError) {\n              setCustomMetadataAttribute(\n                metadataPrefix('state'),\n                'interrupted'\n              );\n              // Log interrupted\n            } else {\n              metadata.state = 'error';\n              rootSpan.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: getErrorMessage(e),\n              });\n              if (e instanceof Error) {\n                rootSpan.recordException(e);\n              }\n\n              setCustomMetadataAttribute(metadataPrefix('state'), 'error');\n              ctx.state.operation.done = true;\n              ctx.state.operation.result = {\n                error: getErrorMessage(e),\n                stacktrace: getErrorStack(e),\n              } as FlowError;\n            }\n            errored = true;\n          }\n        }\n      );\n      if (!errored) {\n        // flow done, set response.\n        ctx.state.operation.done = true;\n        ctx.state.operation.result = { response: output };\n      }\n    });\n  }\n\n  private async durableExpressHandler(\n    req: express.Request,\n    res: express.Response\n  ): Promise<void> {\n    if (req.query.stream === 'true') {\n      const respBody = {\n        error: {\n          status: 'INVALID_ARGUMENT',\n          message: 'Output from durable flows cannot be streamed',\n        },\n      };\n      res.status(400).send(respBody).end();\n      return;\n    }\n\n    let data = req.body;\n    // Task queue will wrap body in a \"data\" object, unwrap it.\n    if (req.body.data) {\n      data = req.body.data;\n    }\n    const envMsg = FlowInvokeEnvelopeMessageSchema.parse(data);\n    try {\n      const state = await this.runEnvelope(envMsg);\n      res.status(200).send(state.operation).end();\n    } catch (e) {\n      // Pass errors as operations instead of a standard API error\n      // (https://cloud.google.com/apis/design/errors#http_mapping)\n      const respBody = {\n        done: true,\n        result: {\n          error: getErrorMessage(e),\n          stacktrace: getErrorStack(e),\n        },\n      };\n      res\n        .status(500)\n        .send(respBody as Operation)\n        .end();\n    }\n  }\n\n  private async nonDurableExpressHandler(\n    req: __RequestWithAuth,\n    res: express.Response\n  ): Promise<void> {\n    const { stream } = req.query;\n    const auth = req.auth;\n\n    let input = req.body.data;\n\n    try {\n      await this.authPolicy?.(auth, input);\n    } catch (e: any) {\n      const respBody = {\n        error: {\n          status: 'PERMISSION_DENIED',\n          message: e.message || 'Permission denied to resource',\n        },\n      };\n      res.status(403).send(respBody).end();\n      return;\n    }\n\n    if (stream === 'true') {\n      res.writeHead(200, {\n        'Content-Type': 'text/plain',\n        'Transfer-Encoding': 'chunked',\n      });\n      try {\n        const state = await this.runDirectly(input, {\n          streamingCallback: (chunk) => {\n            res.write(JSON.stringify(chunk) + streamDelimiter);\n          },\n          auth,\n        });\n        res.write(JSON.stringify(state.operation));\n        res.end();\n      } catch (e) {\n        // Errors while streaming are also passed back as operations\n        const respBody = {\n          done: true,\n          result: {\n            error: getErrorMessage(e),\n            stacktrace: getErrorStack(e),\n          },\n        };\n        res.write(JSON.stringify(respBody as Operation));\n        res.end();\n      }\n    } else {\n      try {\n        const state = await this.runDirectly(input, { auth });\n        if (state.operation.result?.error) {\n          throw new Error(state.operation.result?.error);\n        }\n        // Responses for non-streaming, non-durable flows are passed back\n        // with the flow result stored in a field called \"result.\"\n        res\n          .status(200)\n          .send({\n            result: state.operation.result?.response,\n          })\n          .end();\n      } catch (e) {\n        // Errors for non-durable, non-streaming flows are passed back as\n        // standard API errors.\n        res\n          .status(500)\n          .send({\n            error: {\n              status: 'INTERNAL',\n              message: getErrorMessage(e),\n              details: getErrorStack(e),\n            },\n          })\n          .end();\n      }\n    }\n  }\n\n  get expressHandler(): (\n    req: __RequestWithAuth,\n    res: express.Response\n  ) => Promise<void> {\n    return this.experimentalDurable\n      ? this.durableExpressHandler.bind(this)\n      : this.nonDurableExpressHandler.bind(this);\n  }\n}\n\n/**\n * Runs the flow. If the flow does not get interrupted may return a completed (done=true) operation.\n */\nexport async function runFlow<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  flow: Flow<I, O, S> | FlowWrapper<I, O, S>,\n  payload?: z.infer<I>,\n  opts?: { withLocalAuthContext?: unknown }\n): Promise<z.infer<O>> {\n  if (!(flow instanceof Flow)) {\n    flow = flow.flow;\n  }\n\n  const input = flow.inputSchema ? flow.inputSchema.parse(payload) : payload;\n  await flow.authPolicy?.(opts?.withLocalAuthContext, payload);\n\n  if (flow.middleware) {\n    logger.warn(\n      `Flow (${flow.name}) middleware won't run when invoked with runFlow.`\n    );\n  }\n\n  const state = await flow.runEnvelope(\n    {\n      start: {\n        input,\n      },\n    },\n    undefined,\n    opts?.withLocalAuthContext\n  );\n  if (!state.operation.done) {\n    throw new FlowStillRunningError(\n      `flow ${state.name} did not finish execution`\n    );\n  }\n  if (state.operation.result?.error) {\n    throw new FlowExecutionError(\n      state.operation.name,\n      state.operation.result?.error,\n      state.operation.result?.stacktrace\n    );\n  }\n  return state.operation.result?.response;\n}\n\ninterface StreamingResponse<\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  stream(): AsyncGenerator<unknown, Operation, z.infer<S> | undefined>;\n  output(): Promise<z.infer<O>>;\n}\n\n/**\n * Runs the flow and streams results. If the flow does not get interrupted may return a completed (done=true) operation.\n */\nexport function streamFlow<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  flowOrFlowWrapper: Flow<I, O, S> | FlowWrapper<I, O, S>,\n  payload?: z.infer<I>,\n  opts?: { withLocalAuthContext?: unknown }\n): StreamingResponse<O, S> {\n  const flow = !(flowOrFlowWrapper instanceof Flow)\n    ? flowOrFlowWrapper.flow\n    : flowOrFlowWrapper;\n\n  let chunkStreamController: ReadableStreamController<z.infer<S>>;\n  const chunkStream = new ReadableStream<z.infer<S>>({\n    start(controller) {\n      chunkStreamController = controller;\n    },\n    pull() {},\n    cancel() {},\n  });\n\n  const authPromise =\n    flow.authPolicy?.(opts?.withLocalAuthContext, payload) ?? Promise.resolve();\n\n  const operationPromise = authPromise\n    .then(() =>\n      flow.runEnvelope(\n        {\n          start: {\n            input: flow.inputSchema ? flow.inputSchema.parse(payload) : payload,\n          },\n        },\n        (c) => {\n          chunkStreamController.enqueue(c);\n        },\n        opts?.withLocalAuthContext\n      )\n    )\n    .then((s) => s.operation)\n    .finally(() => {\n      chunkStreamController.close();\n    });\n\n  return {\n    output() {\n      return operationPromise.then((op) => {\n        if (!op.done) {\n          throw new FlowStillRunningError(\n            `flow ${op.name} did not finish execution`\n          );\n        }\n        if (op.result?.error) {\n          throw new FlowExecutionError(\n            op.name,\n            op.result?.error,\n            op.result?.stacktrace\n          );\n        }\n        return op.result?.response;\n      });\n    },\n    async *stream() {\n      const reader = chunkStream.getReader();\n      while (true) {\n        const chunk = await reader.read();\n        if (chunk.value) {\n          yield chunk.value;\n        }\n        if (chunk.done) {\n          break;\n        }\n      }\n      return await operationPromise;\n    },\n  };\n}\n\nfunction createNewState(\n  flowId: string,\n  name: string,\n  input: unknown\n): FlowState {\n  return {\n    flowId: flowId,\n    name: name,\n    startTime: Date.now(),\n    input: input,\n    cache: {},\n    eventsTriggered: {},\n    blockedOnStep: null,\n    executions: [],\n    operation: {\n      name: flowId,\n      done: false,\n    },\n  };\n}\n\nexport type StepsFunction<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n> = (\n  input: z.infer<I>,\n  streamingCallback: StreamingCallback<z.infer<S>> | undefined\n) => Promise<z.infer<O>>;\n\nfunction wrapAsAction<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  S extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  flow: Flow<I, O, S>\n): Action<typeof FlowActionInputSchema, typeof FlowStateSchema> {\n  return defineAction(\n    {\n      actionType: 'flow',\n      name: flow.name,\n      inputSchema: FlowActionInputSchema,\n      outputSchema: FlowStateSchema,\n      metadata: {\n        inputSchema: toJsonSchema({ schema: flow.inputSchema }),\n        outputSchema: toJsonSchema({ schema: flow.outputSchema }),\n        experimentalDurable: !!flow.experimentalDurable,\n        requiresAuth: !!flow.authPolicy,\n      },\n    },\n    async (envelope) => {\n      // Only non-durable flows have an authPolicy, so envelope.start should always\n      // be defined here.\n      await flow.authPolicy?.(\n        envelope.auth,\n        envelope.start?.input as I | undefined\n      );\n      setCustomMetadataAttribute(metadataPrefix('wrapperAction'), 'true');\n      return await flow.runEnvelope(\n        envelope,\n        getStreamingCallback(),\n        envelope.auth\n      );\n    }\n  );\n}\n\nexport function startFlowsServer(params?: {\n  flows?: Flow<any, any, any>[];\n  port?: number;\n  cors?: CorsOptions;\n  pathPrefix?: string;\n  jsonParserOptions?: bodyParser.OptionsJson;\n}) {\n  const port =\n    params?.port || (process.env.PORT ? parseInt(process.env.PORT) : 0) || 3400;\n  const pathPrefix = params?.pathPrefix ?? '';\n  const app = express();\n  app.use(bodyParser.json(params?.jsonParserOptions));\n  app.use(cors(params?.cors));\n\n  const flows = params?.flows || createdFlows();\n  logger.info(`Starting flows server on port ${port}`);\n  flows.forEach((f) => {\n    const flowPath = `/${pathPrefix}${f.name}`;\n    logger.info(` - ${flowPath}`);\n    // Add middlware\n    f.middleware?.forEach((m) => {\n      app.post(flowPath, m);\n    });\n    app.post(flowPath, f.expressHandler);\n  });\n\n  app.listen(port, () => {\n    console.log(`Flows server listening on port ${port}`);\n  });\n}\n"],"names":["globalConfig","output","_a","_b","_c","express","cors"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/steps.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Action } from '@genkit-ai/core';\nimport * as z from 'zod';\nimport { getActiveContext } from './utils.js';\n\n/**\n * A flow steap that executes an action with provided input and memoizes the output.\n */\nexport function runAction<I extends z.ZodTypeAny, O extends z.ZodTypeAny>(\n  action: Action<I, O>,\n  input: z.infer<I>\n): Promise<z.infer<O>> {\n  return run(action.__action.name, input, () => action(input));\n}\n\nexport function run<T>(name: string, func: () => Promise<T>): Promise<T>;\nexport function run<T>(\n  name: string,\n  input: any,\n  func: () => Promise<T>\n): Promise<T>;\n\n/**\n * A flow steap that executes the provided function and memoizes the output.\n */\nexport function run<T>(\n  name: string,\n  funcOrInput: () => Promise<T>,\n  fn?: () => Promise<T>\n): Promise<T> {\n  const func = arguments.length === 3 ? fn : funcOrInput;\n  const input = arguments.length === 3 ? funcOrInput : undefined;\n  if (!func) {\n    throw new Error('unable to resolve run function');\n  }\n  const ctx = getActiveContext();\n  if (!ctx) throw new Error('can only be run from a flow');\n  return ctx.run({ name }, input, func);\n}\n\n/**\n * A helper that takes an array of inputs and maps each input to a run step.\n */\nexport function runMap<I, O>(\n  stepName: string,\n  input: I[],\n  fn: (i: I) => Promise<O>\n): Promise<O[]> {\n  return Promise.all(input.map((f) => run(stepName, () => fn(f))));\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,KAAA,IAAA;IAAA,WAAA,IAAA;IAAA,QAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAkBA,IAAA,eAAiC;AAK1B,SAAS,UACd,MAAA,EACA,KAAA,EACqB;IACrB,OAAO,IAAI,OAAO,QAAA,CAAS,IAAA,EAAM,OAAO,IAAM,OAAO,KAAK,CAAC;AAC7D;AAYO,SAAS,IACd,IAAA,EACA,WAAA,EACA,EAAA,EACY;IACZ,MAAM,OAAO,UAAU,MAAA,KAAW,IAAI,KAAK;IAC3C,MAAM,QAAQ,UAAU,MAAA,KAAW,IAAI,cAAc,KAAA;IACrD,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,MAAM,gCAAgC;IAClD;IACA,MAAM,MAAA,CAAA,GAAM,aAAA,gBAAA,EAAiB;IAC7B,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM,6BAA6B;IACvD,OAAO,IAAI,GAAA,CAAI;QAAE;IAAK,GAAG,OAAO,IAAI;AACtC;AAKO,SAAS,OACd,QAAA,EACA,KAAA,EACA,EAAA,EACc;IACd,OAAO,QAAQ,GAAA,CAAI,MAAM,GAAA,CAAI,CAAC,IAAM,IAAI,UAAU,IAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACjE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/flow/src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  FlowStateExecutionSchema,\n  OperationSchema,\n  type FlowState,\n  type FlowStateStore,\n  type Operation,\n} from '@genkit-ai/core';\nexport { FirestoreStateStore } from './firestoreStateStore.js';\nexport {\n  Flow,\n  defineFlow,\n  runFlow,\n  startFlowsServer,\n  streamFlow,\n  type FlowAuthPolicy,\n  type FlowWrapper,\n  type StepsFunction,\n  type __RequestWithAuth,\n} from './flow.js';\nexport { run, runAction, runMap } from './steps.js';\nexport {\n  FlowInvokeEnvelopeMessageSchema,\n  type FlowInvokeEnvelopeMessage,\n} from './types.js';\nexport { getFlowAuth } from './utils.js';\n"],"names":[],"mappings":";;AAgBA;AAOA,SAAS,2BAA2B;AACpC;AAWA,SAAS,KAAK,WAAW,cAAc;AACvC;AAIA,SAAS,mBAAmB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/common.ts"],"sourcesContent":["/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport process from 'process';\n\nexport function getApiKeyFromEnvVar(): string | undefined {\n  return (\n    process.env.GEMINI_API_KEY ||\n    process.env.GOOGLE_API_KEY ||\n    process.env.GOOGLE_GENAI_API_KEY\n  );\n}\n"],"names":["process"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,CAAA;AAAA,SAAA,gBAAA;IAAA,qBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,iBAAoB;AAEb,SAAS,sBAA0C;IACxD,OACE,eAAAA,OAAAA,CAAQ,GAAA,CAAI,cAAA,IACZ,eAAAA,OAAAA,CAAQ,GAAA,CAAI,cAAA,IACZ,eAAAA,OAAAA,CAAQ,GAAA,CAAI,oBAAA;AAEhB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/embedder.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GoogleGenerativeAI,\n  type EmbedContentRequest,\n} from '@google/generative-ai';\nimport {\n  GenkitError,\n  z,\n  type EmbedderAction,\n  type EmbedderReference,\n  type Genkit,\n} from 'genkit';\nimport { embedderRef } from 'genkit/embedder';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport type { PluginOptions } from './index.js';\n\nexport const TaskTypeSchema = z.enum([\n  'RETRIEVAL_DOCUMENT',\n  'RETRIEVAL_QUERY',\n  'SEMANTIC_SIMILARITY',\n  'CLASSIFICATION',\n  'CLUSTERING',\n]);\nexport type TaskType = z.infer<typeof TaskTypeSchema>;\n\nexport const GeminiEmbeddingConfigSchema = z.object({\n  /** Override the API key provided at plugin initialization. */\n  apiKey: z.string().optional(),\n  /**\n   * The `task_type` parameter is defined as the intended downstream application to help the model\n   * produce better quality embeddings.\n   **/\n  taskType: TaskTypeSchema.optional(),\n  title: z.string().optional(),\n  version: z.string().optional(),\n  /**\n   * The `outputDimensionality` parameter allows you to specify the dimensionality of the embedding output.\n   * By default, the model generates embeddings with 768 dimensions. Models such as\n   * `text-embedding-004`, `text-embedding-005`, and `text-multilingual-embedding-002`\n   * allow the output dimensionality to be adjusted between 1 and 768.\n   * By selecting a smaller output dimensionality, users can save memory and storage space, leading to more efficient computations.\n   **/\n  outputDimensionality: z.number().min(1).max(768).optional(),\n});\n\nexport type GeminiEmbeddingConfig = z.infer<typeof GeminiEmbeddingConfigSchema>;\n\nexport const textEmbeddingGecko001 = embedderRef({\n  name: 'googleai/embedding-001',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding Gecko (Legacy)',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const textEmbedding004 = embedderRef({\n  name: 'googleai/text-embedding-004',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding 001',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const SUPPORTED_MODELS = {\n  'embedding-001': textEmbeddingGecko001,\n  'text-embedding-004': textEmbedding004,\n};\n\nexport function defineGoogleAIEmbedder(\n  ai: Genkit,\n  name: string,\n  pluginOptions: PluginOptions\n): EmbedderAction<any> {\n  let apiKey: string | undefined;\n  // DO NOT throw if {apiKey: false} was supplied to options.\n  if (pluginOptions.apiKey !== false) {\n    apiKey = pluginOptions?.apiKey || getApiKeyFromEnvVar();\n    if (!apiKey)\n      throw new Error(\n        'Please pass in the API key or set either GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai'\n      );\n  }\n  const embedder: EmbedderReference =\n    SUPPORTED_MODELS[name] ??\n    embedderRef({\n      name: name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: {\n        dimensions: 768,\n        label: `Google AI - ${name}`,\n        supports: {\n          input: ['text', 'image', 'video'],\n        },\n      },\n    });\n  const apiModelName = embedder.name.startsWith('googleai/')\n    ? embedder.name.substring('googleai/'.length)\n    : embedder.name;\n  return ai.defineEmbedder(\n    {\n      name: embedder.name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: embedder.info!,\n    },\n    async (input, options) => {\n      if (pluginOptions.apiKey === false && !options?.apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(\n        options?.apiKey || apiKey!\n      ).getGenerativeModel({\n        model:\n          options?.version ||\n          embedder.config?.version ||\n          embedder.version ||\n          apiModelName,\n      });\n      const embeddings = await Promise.all(\n        input.map(async (doc) => {\n          const response = await client.embedContent({\n            taskType: options?.taskType,\n            title: options?.title,\n            content: {\n              role: '',\n              parts: [{ text: doc.text }],\n            },\n            outputDimensionality: options?.outputDimensionality,\n          } as EmbedContentRequest);\n          const values = response.embedding.values;\n          return { embedding: values };\n        })\n      );\n      return { embeddings };\n    }\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1607, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/constants.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CONTEXT_CACHE_SUPPORTED_MODELS = [\n  'gemini-1.5-flash-001',\n  'gemini-1.5-pro-001',\n];\n\nexport const INVALID_ARGUMENT_MESSAGES = {\n  modelVersion: `Model version is required for context caching, supported only in ${CONTEXT_CACHE_SUPPORTED_MODELS.join(',')} models.`,\n  tools: 'Context caching cannot be used simultaneously with tools.',\n  codeExecution:\n    'Context caching cannot be used simultaneously with code execution.',\n};\n\nexport const DEFAULT_TTL = 300;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,oBAAA,CAAA;AAAA,SAAA,mBAAA;IAAA,gCAAA,IAAA;IAAA,aAAA,IAAA;IAAA,2BAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBO,MAAM,iCAAiC;IAC5C;IACA;CACF;AAEO,MAAM,4BAA4B;IACvC,cAAc,CAAA,iEAAA,EAAoE,+BAA+B,IAAA,CAAK,GAAG,CAAC,CAAA,QAAA,CAAA;IAC1H,OAAO;IACP,eACE;AACJ;AAEO,MAAM,cAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1658, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/types.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'genkit';\n\nexport const cacheConfigSchema = z.union([\n  z.boolean(),\n  z.object({ ttlSeconds: z.number().optional() }).passthrough(),\n]);\n\nexport type CacheConfig = z.infer<typeof cacheConfigSchema>;\n\nexport const cacheConfigDetailsSchema = z.object({\n  cacheConfig: cacheConfigSchema,\n  endOfCachedContents: z.number(),\n});\n\nexport type CacheConfigDetails = z.infer<typeof cacheConfigDetailsSchema>;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,0BAAA,IAAA;IAAA,mBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,gBAAkB;AAEX,MAAM,oBAAoB,cAAA,CAAA,CAAE,KAAA,CAAM;IACvC,cAAA,CAAA,CAAE,OAAA,CAAQ;IACV,cAAA,CAAA,CAAE,MAAA,CAAO;QAAE,YAAY,cAAA,CAAA,CAAE,MAAA,CAAO,EAAE,QAAA,CAAS;IAAE,CAAC,EAAE,WAAA,CAAY;CAC7D;AAIM,MAAM,2BAA2B,cAAA,CAAA,CAAE,MAAA,CAAO;IAC/C,aAAa;IACb,qBAAqB,cAAA,CAAA,CAAE,MAAA,CAAO;AAChC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/utils.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport type { GoogleAICacheManager } from '@google/generative-ai/server';\nimport crypto from 'crypto';\nimport { GenkitError, type MessageData, type z } from 'genkit';\nimport type { GenerateRequest } from 'genkit/model';\nimport {\n  CONTEXT_CACHE_SUPPORTED_MODELS,\n  DEFAULT_TTL,\n  INVALID_ARGUMENT_MESSAGES,\n} from './constants';\nimport {\n  cacheConfigSchema,\n  type CacheConfig,\n  type CacheConfigDetails,\n} from './types';\n\n/**\n * Generates a SHA-256 hash to use as a cache key.\n * @param request CachedContent - request object to hash\n * @returns string - the generated cache key\n */\nexport function generateCacheKey(request: CachedContent): string {\n  return crypto\n    .createHash('sha256')\n    .update(JSON.stringify(request))\n    .digest('hex');\n}\n\n/**\n * Retrieves the content needed for the cache based on the chat history and config details.\n */\nexport function getContentForCache(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): {\n  cachedContent: CachedContent;\n  chatRequest: StartChatParams;\n  cacheConfig?: CacheConfig;\n} {\n  // Ensure modelVersion is provided\n  if (!modelVersion) {\n    throw new Error('No model version provided for context caching');\n  }\n\n  // Ensure chatRequest has a history\n  if (!chatRequest.history?.length) {\n    throw new Error('No history provided for context caching');\n  }\n\n  // Validate the history length between request and chatRequest\n  validateHistoryLength(request, chatRequest);\n\n  // Extract relevant cached content based on cacheConfigDetails\n  const { endOfCachedContents, cacheConfig } = cacheConfigDetails;\n  const cachedContent: CachedContent = {\n    model: modelVersion,\n    contents: chatRequest.history.slice(0, endOfCachedContents + 1),\n  };\n\n  // Update the chatRequest history to only include non-cached parts\n  chatRequest.history = chatRequest.history.slice(endOfCachedContents + 1);\n\n  return { cachedContent, chatRequest, cacheConfig };\n}\n\n/**\n * Validates that the request and chat request history lengths align.\n * @throws GenkitError if lengths are mismatched\n */\nfunction validateHistoryLength(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams\n) {\n  if (chatRequest.history?.length !== request.messages.length - 1) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message:\n        'Genkit request history and Gemini chat request history length do not match',\n    });\n  }\n}\n\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\nexport async function lookupContextCache(\n  cacheManager: GoogleAICacheManager,\n  cacheKey: string,\n  maxPages = 100,\n  pageSize = 100\n): Promise<CachedContent | null> {\n  let currentPage = 0;\n  let pageToken: string | undefined;\n\n  try {\n    while (currentPage < maxPages) {\n      const { cachedContents, nextPageToken } = await cacheManager.list({\n        pageSize,\n        pageToken,\n      });\n\n      // Check for the cached content by key\n      const found = cachedContents?.find(\n        (content) => content.displayName === cacheKey\n      );\n\n      if (found) return found; // Return found content\n\n      // Stop if there's no next page\n      if (!nextPageToken) break;\n\n      pageToken = nextPageToken;\n      currentPage++;\n    }\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Unknown Network Error';\n\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: `Error looking up context cache: ${message}`,\n    });\n  }\n\n  return null; // Return null if not found or on error\n}\n\n/**\n * Extracts the cache configuration from the request if available.\n */\nexport const extractCacheConfig = (\n  request: GenerateRequest<z.ZodTypeAny>\n): {\n  cacheConfig: { ttlSeconds?: number } | boolean;\n  endOfCachedContents: number;\n} | null => {\n  const endOfCachedContents = findLastIndex<MessageData>(\n    request.messages,\n    (message) => !!message.metadata?.cache\n  );\n\n  return endOfCachedContents === -1\n    ? null\n    : {\n        endOfCachedContents,\n        cacheConfig: cacheConfigSchema.parse(\n          request.messages[endOfCachedContents].metadata?.cache\n        ),\n      };\n};\n\n/**\n * Validates context caching request for compatibility with model and request configurations.\n */\nexport function validateContextCacheRequest(\n  request: GenerateRequest<z.ZodTypeAny>,\n  modelVersion: string\n): boolean {\n  if (!modelVersion || !CONTEXT_CACHE_SUPPORTED_MODELS.includes(modelVersion)) {\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.modelVersion,\n    });\n  }\n  if (request.tools?.length)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.tools,\n    });\n  if (request.config?.codeExecution)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.codeExecution,\n    });\n\n  return true;\n}\n\n/**\n * Polyfill function for Array.prototype.findLastIndex for ES2015 compatibility.\n */\nexport function findLastIndex<T>(\n  array: T[],\n  callback: (element: T, index: number, array: T[]) => boolean\n): number {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (callback(array[i], i, array)) return i;\n  }\n  return -1;\n}\n\n/**\n * Calculates the TTL (Time-To-Live) for the cache based on cacheConfigDetails.\n * @param cacheConfig - The caching configuration details.\n * @returns The TTL in seconds.\n */\nexport function calculateTTL(cacheConfig: CacheConfigDetails): number {\n  if (cacheConfig.cacheConfig === true) {\n    return DEFAULT_TTL;\n  }\n  if (cacheConfig.cacheConfig === false) {\n    return 0;\n  }\n  return cacheConfig.cacheConfig.ttlSeconds || DEFAULT_TTL;\n}\n"],"names":["crypto"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,cAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,eAAA,IAAA;IAAA,kBAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,6BAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAkBA,IAAA,gBAAmB;AACnB,IAAA,gBAAsD;AAEtD,IAAA,mBAIO;AACP,IAAA,eAIO;AAOA,SAAS,iBAAiB,OAAA,EAAgC;IAC/D,OAAO,cAAAA,OAAAA,CACJ,UAAA,CAAW,QAAQ,EACnB,MAAA,CAAO,KAAK,SAAA,CAAU,OAAO,CAAC,EAC9B,MAAA,CAAO,KAAK;AACjB;AAKO,SAAS,mBACd,OAAA,EACA,WAAA,EACA,YAAA,EACA,kBAAA,EAKA;IAEA,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM,+CAA+C;IACjE;IAGA,IAAI,CAAC,YAAY,OAAA,EAAS,QAAQ;QAChC,MAAM,IAAI,MAAM,yCAAyC;IAC3D;IAGA,sBAAsB,SAAS,WAAW;IAG1C,MAAM,EAAE,mBAAA,EAAqB,WAAA,CAAY,CAAA,GAAI;IAC7C,MAAM,gBAA+B;QACnC,OAAO;QACP,UAAU,YAAY,OAAA,CAAQ,KAAA,CAAM,GAAG,sBAAsB,CAAC;IAChE;IAGA,YAAY,OAAA,GAAU,YAAY,OAAA,CAAQ,KAAA,CAAM,sBAAsB,CAAC;IAEvE,OAAO;QAAE;QAAe;QAAa;IAAY;AACnD;AAMA,SAAS,sBACP,OAAA,EACA,WAAA,EACA;IACA,IAAI,YAAY,OAAA,EAAS,WAAW,QAAQ,QAAA,CAAS,MAAA,GAAS,GAAG;QAC/D,MAAM,IAAI,cAAA,WAAA,CAAY;YACpB,QAAQ;YACR,SACE;QACJ,CAAC;IACH;AACF;AAQA,eAAsB,mBACpB,YAAA,EACA,QAAA,EACA,WAAW,GAAA,EACX,WAAW,GAAA,EACoB;IAC/B,IAAI,cAAc;IAClB,IAAI;IAEJ,IAAI;QACF,MAAO,cAAc,SAAU;YAC7B,MAAM,EAAE,cAAA,EAAgB,aAAA,CAAc,CAAA,GAAI,MAAM,aAAa,IAAA,CAAK;gBAChE;gBACA;YACF,CAAC;YAGD,MAAM,QAAQ,gBAAgB,KAC5B,CAAC,UAAY,QAAQ,WAAA,KAAgB;YAGvC,IAAI,MAAO,CAAA,OAAO;YAGlB,IAAI,CAAC,cAAe,CAAA;YAEpB,YAAY;YACZ;QACF;IACF,EAAA,OAAS,OAAO;QACd,MAAM,UACJ,iBAAiB,QAAQ,MAAM,OAAA,GAAU;QAE3C,MAAM,IAAI,cAAA,WAAA,CAAY;YACpB,QAAQ;YACR,SAAS,CAAA,gCAAA,EAAmC,OAAO,EAAA;QACrD,CAAC;IACH;IAEA,OAAO;AACT;AAKO,MAAM,qBAAqB,CAChC,YAIU;IACV,MAAM,sBAAsB,cAC1B,QAAQ,QAAA,EACR,CAAC,UAAY,CAAC,CAAC,QAAQ,QAAA,EAAU;IAGnC,OAAO,wBAAwB,CAAA,IAC3B,OACA;QACE;QACA,aAAa,aAAA,iBAAA,CAAkB,KAAA,CAC7B,QAAQ,QAAA,CAAS,mBAAmB,CAAA,CAAE,QAAA,EAAU;IAEpD;AACN;AAKO,SAAS,4BACd,OAAA,EACA,YAAA,EACS;IACT,IAAI,CAAC,gBAAgB,CAAC,iBAAA,8BAAA,CAA+B,QAAA,CAAS,YAAY,GAAG;QAC3E,MAAM,IAAI,cAAA,WAAA,CAAY;YACpB,QAAQ;YACR,SAAS,iBAAA,yBAAA,CAA0B,YAAA;QACrC,CAAC;IACH;IACA,IAAI,QAAQ,KAAA,EAAO,QACjB,MAAM,IAAI,cAAA,WAAA,CAAY;QACpB,QAAQ;QACR,SAAS,iBAAA,yBAAA,CAA0B,KAAA;IACrC,CAAC;IACH,IAAI,QAAQ,MAAA,EAAQ,eAClB,MAAM,IAAI,cAAA,WAAA,CAAY;QACpB,QAAQ;QACR,SAAS,iBAAA,yBAAA,CAA0B,aAAA;IACrC,CAAC;IAEH,OAAO;AACT;AAKO,SAAS,cACd,KAAA,EACA,QAAA,EACQ;IACR,IAAA,IAAS,IAAI,MAAM,MAAA,GAAS,GAAG,KAAK,GAAG,IAAK;QAC1C,IAAI,SAAS,KAAA,CAAM,CAAC,CAAA,EAAG,GAAG,KAAK,EAAG,CAAA,OAAO;IAC3C;IACA,OAAO,CAAA;AACT;AAOO,SAAS,aAAa,WAAA,EAAyC;IACpE,IAAI,YAAY,WAAA,KAAgB,MAAM;QACpC,OAAO,iBAAA,WAAA;IACT;IACA,IAAI,YAAY,WAAA,KAAgB,OAAO;QACrC,OAAO;IACT;IACA,OAAO,YAAY,WAAA,CAAY,UAAA,IAAc,iBAAA,WAAA;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1865, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport {\n  GoogleAICacheManager,\n  type CachedContentCreateParams,\n} from '@google/generative-ai/server';\nimport { GenkitError, type GenerateRequest, type z } from 'genkit';\nimport { logger } from 'genkit/logging';\nimport type { CacheConfigDetails } from './types.js';\nimport {\n  calculateTTL,\n  generateCacheKey,\n  getContentForCache,\n  lookupContextCache,\n  validateContextCacheRequest,\n} from './utils.js';\n\n/**\n * Handles context caching and transforms the chatRequest\n * @param apiKey\n * @param request\n * @param chatRequest\n * @param modelVersion\n * @returns\n */\nexport async function handleContextCache(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): Promise<{ cache: CachedContent; newChatRequest: StartChatParams }> {\n  const cacheManager = new GoogleAICacheManager(apiKey);\n\n  const { cachedContent, chatRequest: newChatRequest } = getContentForCache(\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  cachedContent.model = modelVersion;\n  const cacheKey = generateCacheKey(cachedContent);\n\n  cachedContent.displayName = cacheKey;\n\n  let cache = await lookupContextCache(cacheManager, cacheKey);\n  logger.debug(`Cache hit: ${cache ? 'true' : 'false'}`);\n\n  if (!cache) {\n    try {\n      logger.debug('No cache found, creating one.');\n      const createParams: CachedContentCreateParams = {\n        ...cachedContent,\n        ttlSeconds: calculateTTL(cacheConfigDetails),\n      };\n      cache = await cacheManager.create(createParams);\n      logger.debug(`Created new cache entry with key: ${cacheKey}`);\n    } catch (cacheError) {\n      logger.error(\n        `Failed to create cache with key ${cacheKey}: ${cacheError}`\n      );\n      throw new GenkitError({\n        status: 'INTERNAL',\n        message: `Failed to create cache: ${cacheError}`,\n      });\n    }\n  }\n\n  if (!cache) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: 'Failed to use context cache feature',\n    });\n  }\n\n  return { cache, newChatRequest };\n}\n\n/**\n * Handles cache validation, creation, and usage, transforming the chatRequest if necessary.\n * @param apiKey The API key for accessing Google AI Gemini.\n * @param request The generate request passed to the model.\n * @param chatRequest The current chat request configuration.\n * @param modelVersion The version of the model being used.\n * @param cacheConfigDetails Configuration details for caching.\n * @returns A transformed chat request and cache data (if applicable).\n */\nexport async function handleCacheIfNeeded(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails | null\n): Promise<{ chatRequest: StartChatParams; cache: CachedContent | null }> {\n  // Skip caching if no configuration or if validation fails\n  if (\n    !cacheConfigDetails ||\n    !validateContextCacheRequest(request, modelVersion)\n  ) {\n    return { chatRequest, cache: null };\n  }\n\n  const { cache, newChatRequest } = await handleContextCache(\n    apiKey,\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  return { chatRequest: newChatRequest, cache };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,0BAAA,CAAA;AAAA,SAAA,yBAAA;IAAA,qBAAA,IAAA;IAAA,oBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAiBA,IAAA,gBAGO;AACP,IAAA,gBAA0D;AAC1D,IAAA,iBAAuB;AAEvB,IAAA,eAMO;AAUP,eAAsB,mBACpB,MAAA,EACA,OAAA,EACA,WAAA,EACA,YAAA,EACA,kBAAA,EACoE;IACpE,MAAM,eAAe,IAAI,cAAA,oBAAA,CAAqB,MAAM;IAEpD,MAAM,EAAE,aAAA,EAAe,aAAa,cAAA,CAAe,CAAA,GAAA,CAAA,GAAI,aAAA,kBAAA,EACrD,SACA,aACA,cACA;IAEF,cAAc,KAAA,GAAQ;IACtB,MAAM,WAAA,CAAA,GAAW,aAAA,gBAAA,EAAiB,aAAa;IAE/C,cAAc,WAAA,GAAc;IAE5B,IAAI,QAAQ,MAAA,CAAA,GAAM,aAAA,kBAAA,EAAmB,cAAc,QAAQ;IAC3D,eAAA,MAAA,CAAO,KAAA,CAAM,CAAA,WAAA,EAAc,QAAQ,SAAS,OAAO,EAAE;IAErD,IAAI,CAAC,OAAO;QACV,IAAI;YACF,eAAA,MAAA,CAAO,KAAA,CAAM,+BAA+B;YAC5C,MAAM,eAA0C;gBAC9C,GAAG,aAAA;gBACH,YAAA,CAAA,GAAY,aAAA,YAAA,EAAa,kBAAkB;YAC7C;YACA,QAAQ,MAAM,aAAa,MAAA,CAAO,YAAY;YAC9C,eAAA,MAAA,CAAO,KAAA,CAAM,CAAA,kCAAA,EAAqC,QAAQ,EAAE;QAC9D,EAAA,OAAS,YAAY;YACnB,eAAA,MAAA,CAAO,KAAA,CACL,CAAA,gCAAA,EAAmC,QAAQ,CAAA,EAAA,EAAK,UAAU,EAAA;YAE5D,MAAM,IAAI,cAAA,WAAA,CAAY;gBACpB,QAAQ;gBACR,SAAS,CAAA,wBAAA,EAA2B,UAAU,EAAA;YAChD,CAAC;QACH;IACF;IAEA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,cAAA,WAAA,CAAY;YACpB,QAAQ;YACR,SAAS;QACX,CAAC;IACH;IAEA,OAAO;QAAE;QAAO;IAAe;AACjC;AAWA,eAAsB,oBACpB,MAAA,EACA,OAAA,EACA,WAAA,EACA,YAAA,EACA,kBAAA,EACwE;IAExE,IACE,CAAC,sBACD,CAAA,CAAA,GAAC,aAAA,2BAAA,EAA4B,SAAS,YAAY,GAClD;QACA,OAAO;YAAE;YAAa,OAAO;QAAK;IACpC;IAEA,MAAM,EAAE,KAAA,EAAO,cAAA,CAAe,CAAA,GAAI,MAAM,mBACtC,QACA,SACA,aACA,cACA;IAEF,OAAO;QAAE,aAAa;QAAgB;IAAM;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1957, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/gemini.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FunctionCallingMode,\n  GenerateContentCandidate,\n  GoogleGenerativeAI,\n  SchemaType,\n  type FileDataPart,\n  type FunctionCallPart,\n  type FunctionDeclaration,\n  type FunctionResponsePart,\n  type GenerateContentCandidate as GeminiCandidate,\n  type Content as GeminiMessage,\n  type Part as GeminiPart,\n  type GenerateContentResponse,\n  type GenerationConfig,\n  type GenerativeModel,\n  type GoogleSearchRetrievalTool,\n  type InlineDataPart,\n  type RequestOptions,\n  type Schema,\n  type StartChatParams,\n  type Tool,\n  type ToolConfig,\n} from '@google/generative-ai';\nimport {\n  GENKIT_CLIENT_HEADER,\n  GenkitError,\n  z,\n  type Genkit,\n  type JSONSchema,\n} from 'genkit';\nimport {\n  GenerationCommonConfigDescriptions,\n  GenerationCommonConfigSchema,\n  getBasicUsageStats,\n  modelRef,\n  type CandidateData,\n  type MediaPart,\n  type MessageData,\n  type ModelAction,\n  type ModelInfo,\n  type ModelMiddleware,\n  type ModelReference,\n  type Part,\n  type ToolDefinitionSchema,\n  type ToolRequestPart,\n  type ToolResponsePart,\n} from 'genkit/model';\nimport { downloadRequestMedia } from 'genkit/model/middleware';\nimport { runInNewSpan } from 'genkit/tracing';\nimport { getApiKeyFromEnvVar } from './common';\nimport { handleCacheIfNeeded } from './context-caching';\nimport { extractCacheConfig } from './context-caching/utils';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/safety-settings#safety-filters.\n */\nconst SafetySettingsSchema = z.object({\n  category: z.enum([\n    'HARM_CATEGORY_UNSPECIFIED',\n    'HARM_CATEGORY_HATE_SPEECH',\n    'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n    'HARM_CATEGORY_HARASSMENT',\n    'HARM_CATEGORY_DANGEROUS_CONTENT',\n    'HARM_CATEGORY_CIVIC_INTEGRITY',\n  ]),\n  threshold: z.enum([\n    'BLOCK_LOW_AND_ABOVE',\n    'BLOCK_MEDIUM_AND_ABOVE',\n    'BLOCK_ONLY_HIGH',\n    'BLOCK_NONE',\n  ]),\n});\n\nconst VoiceConfigSchema = z\n  .object({\n    prebuiltVoiceConfig: z\n      .object({\n        // TODO: Make this an array of objects so we can also specify the description\n        // for each voiceName.\n        voiceName: z\n          .union([\n            z.enum([\n              'Zephyr',\n              'Puck',\n              'Charon',\n              'Kore',\n              'Fenrir',\n              'Leda',\n              'Orus',\n              'Aoede',\n              'Callirrhoe',\n              'Autonoe',\n              'Enceladus',\n              'Iapetus',\n              'Umbriel',\n              'Algieba',\n              'Despina',\n              'Erinome',\n              'Algenib',\n              'Rasalgethi',\n              'Laomedeia',\n              'Achernar',\n              'Alnilam',\n              'Schedar',\n              'Gacrux',\n              'Pulcherrima',\n              'Achird',\n              'Zubenelgenubi',\n              'Vindemiatrix',\n              'Sadachbia',\n              'Sadaltager',\n              'Sulafat',\n            ]),\n            // To allow any new string values\n            z.string(),\n          ])\n          .describe('Name of the preset voice to use')\n          .optional(),\n      })\n      .describe('Configuration for the prebuilt speaker to use')\n      .passthrough()\n      .optional(),\n  })\n  .describe('Configuration for the voice to use')\n  .passthrough();\n\nexport const GeminiConfigSchema = GenerationCommonConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0)\n    .max(2)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n  topP: z\n    .number()\n    .min(0)\n    .max(1)\n    .describe(\n      GenerationCommonConfigDescriptions.topP + ' The default value is 0.95.'\n    )\n    .optional(),\n  apiKey: z\n    .string()\n    .describe('Overrides the plugin-configured API key, if specified.')\n    .optional(),\n  safetySettings: z\n    .array(SafetySettingsSchema)\n    .describe(\n      'Adjust how likely you are to see responses that could be harmful. ' +\n        'Content is blocked based on the probability that it is harmful.'\n    )\n    .optional(),\n  codeExecution: z\n    .union([z.boolean(), z.object({}).strict()])\n    .describe('Enables the model to generate and run code.')\n    .optional(),\n  contextCache: z\n    .boolean()\n    .describe(\n      'Context caching allows you to save and reuse precomputed input ' +\n        'tokens that you wish to use repeatedly.'\n    )\n    .optional(),\n  functionCallingConfig: z\n    .object({\n      mode: z.enum(['MODE_UNSPECIFIED', 'AUTO', 'ANY', 'NONE']).optional(),\n      allowedFunctionNames: z.array(z.string()).optional(),\n    })\n    .describe(\n      'Controls how the model uses the provided tools (function declarations). ' +\n        'With AUTO (Default) mode, the model decides whether to generate a ' +\n        'natural language response or suggest a function call based on the ' +\n        'prompt and context. With ANY, the model is constrained to always ' +\n        'predict a function call and guarantee function schema adherence. ' +\n        'With NONE, the model is prohibited from making function calls.'\n    )\n    .optional(),\n  responseModalities: z\n    .array(z.enum(['TEXT', 'IMAGE', 'AUDIO']))\n    .describe(\n      'The modalities to be used in response. Only supported for ' +\n        \"'gemini-2.0-flash-exp' model at present.\"\n    )\n    .optional(),\n  googleSearchRetrieval: z\n    .union([z.boolean(), z.object({}).passthrough()])\n    .describe(\n      'Retrieve public web data for grounding, powered by Google Search.'\n    )\n    .optional(),\n}).passthrough();\nexport type GeminiConfig = z.infer<typeof GeminiConfigSchema>;\n\nexport const GeminiGemmaConfigSchema = GeminiConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0.0)\n    .max(1.0)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n}).passthrough();\n\nexport const GeminiTtsConfigSchema = GeminiConfigSchema.extend({\n  speechConfig: z\n    .object({\n      voiceConfig: VoiceConfigSchema.optional(),\n      multiSpeakerVoiceConfig: z\n        .object({\n          speakerVoiceConfigs: z\n            .array(\n              z\n                .object({\n                  speaker: z.string().describe('Name of the speaker to use'),\n                  voiceConfig: VoiceConfigSchema,\n                })\n                .describe(\n                  'Configuration for a single speaker in a multi speaker setup'\n                )\n                .passthrough()\n            )\n            .describe('Configuration for all the enabled speaker voices'),\n        })\n        .describe('Configuration for multi-speaker setup')\n        .passthrough()\n        .optional(),\n    })\n    .describe('Speech generation config')\n    .passthrough()\n    .optional(),\n}).passthrough();\n\nexport const gemini10Pro = modelRef({\n  name: 'googleai/gemini-1.0-pro',\n  info: {\n    label: 'Google AI - Gemini Pro',\n    versions: ['gemini-pro', 'gemini-1.0-pro-latest', 'gemini-1.0-pro-001'],\n    supports: {\n      multiturn: true,\n      media: false,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Pro = modelRef({\n  name: 'googleai/gemini-1.5-pro',\n  info: {\n    label: 'Google AI - Gemini 1.5 Pro',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: [\n      'gemini-1.5-pro-latest',\n      'gemini-1.5-pro-001',\n      'gemini-1.5-pro-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash = modelRef({\n  name: 'googleai/gemini-1.5-flash',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n      // @ts-ignore\n      contextCache: true,\n    },\n    versions: [\n      'gemini-1.5-flash-latest',\n      'gemini-1.5-flash-001',\n      'gemini-1.5-flash-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash8b = modelRef({\n  name: 'googleai/gemini-1.5-flash-8b',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: ['gemini-1.5-flash-8b-latest', 'gemini-1.5-flash-8b-001'],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20Flash = modelRef({\n  name: 'googleai/gemini-2.0-flash',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashExp = modelRef({\n  name: 'googleai/gemini-2.0-flash-exp',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash (Experimental)',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashLite = modelRef({\n  name: 'googleai/gemini-2.0-flash-lite',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash Lite',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20ProExp0205 = modelRef({\n  name: 'googleai/gemini-2.0-pro-exp-02-05',\n  info: {\n    label: 'Google AI - Gemini 2.0 Pro Exp 02-05',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreview0417 = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-04-17',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview 04-17',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25ProExp0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-exp-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Exp 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreview0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25Pro = modelRef({\n  name: 'googleai/gemini-2.5-pro',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25Flash = modelRef({\n  name: 'googleai/gemini-2.5-flash',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemma312bit = modelRef({\n  name: 'googleai/gemma-3-12b-it',\n  info: {\n    label: 'Google AI - Gemma 3 12B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma31bit = modelRef({\n  name: 'googleai/gemma-3-1b-it',\n  info: {\n    label: 'Google AI - Gemma 3 1B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma327bit = modelRef({\n  name: 'googleai/gemma-3-27b-it',\n  info: {\n    label: 'Google AI - Gemma 3 27B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma34bit = modelRef({\n  name: 'googleai/gemma-3-4b-it',\n  info: {\n    label: 'Google AI - Gemma 3 4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma3ne4bit = modelRef({\n  name: 'googleai/gemma-3n-e4b-it',\n  info: {\n    label: 'Google AI - Gemma 3n E4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const SUPPORTED_GEMINI_MODELS = {\n  'gemini-1.5-pro': gemini15Pro,\n  'gemini-1.5-flash': gemini15Flash,\n  'gemini-1.5-flash-8b': gemini15Flash8b,\n  'gemini-2.0-pro-exp-02-05': gemini20ProExp0205,\n  'gemini-2.0-flash': gemini20Flash,\n  'gemini-2.0-flash-lite': gemini20FlashLite,\n  'gemini-2.0-flash-exp': gemini20FlashExp,\n  'gemini-2.5-pro-exp-03-25': gemini25ProExp0325,\n  'gemini-2.5-pro-preview-03-25': gemini25ProPreview0325,\n  'gemini-2.5-pro-preview-tts': gemini25ProPreviewTts,\n  'gemini-2.5-flash-preview-04-17': gemini25FlashPreview0417,\n  'gemini-2.5-flash-preview-tts': gemini25FlashPreviewTts,\n  'gemini-2.5-flash': gemini25Flash,\n  'gemini-2.5-pro': gemini25Pro,\n  'gemma-3-12b-it': gemma312bit,\n  'gemma-3-1b-it': gemma31bit,\n  'gemma-3-27b-it': gemma327bit,\n  'gemma-3-4b-it': gemma34bit,\n  'gemma-3n-e4b-it': gemma3ne4bit,\n};\n\nexport const GENERIC_GEMINI_MODEL = modelRef({\n  name: 'googleai/gemini',\n  configSchema: GeminiConfigSchema,\n  info: {\n    label: 'Google Gemini',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n});\n\nfunction longestMatchingPrefix(version: string, potentialMatches: string[]) {\n  return potentialMatches\n    .filter((p) => version.startsWith(p))\n    .reduce(\n      (longest, current) =>\n        current.length > longest.length ? current : longest,\n      ''\n    );\n}\n\n/**\n * Known model names, to allow code completion for convenience. Allows other model names.\n */\nexport type GeminiVersionString =\n  | keyof typeof SUPPORTED_GEMINI_MODELS\n  | (string & {});\n\n/**\n * Returns a reference to a model that can be used in generate calls.\n *\n * ```js\n * await ai.generate({\n *   prompt: 'hi',\n *   model: gemini('gemini-1.5-flash')\n * });\n * ```\n */\nexport function gemini(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const nearestModel = nearestGeminiModelRef(version);\n  return modelRef({\n    name: `googleai/${version}`,\n    config: options,\n    configSchema: GeminiConfigSchema,\n    info: {\n      ...nearestModel.info,\n      // If exact suffix match for a known model, use its label, otherwise create a new label\n      label: nearestModel.name.endsWith(version)\n        ? nearestModel.info?.label\n        : `Google AI - ${version}`,\n    },\n  });\n}\n\nfunction nearestGeminiModelRef(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const matchingKey = longestMatchingPrefix(\n    version,\n    Object.keys(SUPPORTED_GEMINI_MODELS)\n  );\n  if (matchingKey) {\n    return SUPPORTED_GEMINI_MODELS[matchingKey].withConfig({\n      ...options,\n      version,\n    });\n  }\n\n  return GENERIC_GEMINI_MODEL.withConfig({ ...options, version });\n}\n\nfunction toGeminiRole(\n  role: MessageData['role'],\n  model?: ModelReference<z.ZodTypeAny>\n): string {\n  switch (role) {\n    case 'user':\n      return 'user';\n    case 'model':\n      return 'model';\n    case 'system':\n      if (model?.info?.supports?.systemRole) {\n        // We should have already pulled out the supported system messages,\n        // anything remaining is unsupported; throw an error.\n        throw new Error(\n          'system role is only supported for a single message in the first position'\n        );\n      } else {\n        throw new Error('system role is not supported');\n      }\n    case 'tool':\n      return 'function';\n    default:\n      return 'user';\n  }\n}\n\nfunction convertSchemaProperty(property) {\n  if (!property || !property.type) {\n    return undefined;\n  }\n  const baseSchema = {} as Schema;\n  if (property.description) {\n    baseSchema.description = property.description;\n  }\n  if (property.enum) {\n    baseSchema.type = SchemaType.STRING;\n    // supported in API but not in SDK\n    (baseSchema as any).enum = property.enum;\n  }\n  if (property.nullable) {\n    baseSchema.nullable = property.nullable;\n  }\n  let propertyType;\n  // nullable schema can ALSO be defined as, for example, type=['string','null']\n  if (Array.isArray(property.type)) {\n    const types = property.type as string[];\n    if (types.includes('null')) {\n      baseSchema.nullable = true;\n    }\n    // grab the type that's not `null`\n    propertyType = types.find((t) => t !== 'null');\n  } else {\n    propertyType = property.type;\n  }\n  if (propertyType === 'object') {\n    const nestedProperties = {};\n    Object.keys(property.properties ?? {}).forEach((key) => {\n      nestedProperties[key] = convertSchemaProperty(property.properties[key]);\n    });\n    return {\n      ...baseSchema,\n      type: SchemaType.OBJECT,\n      properties: nestedProperties,\n      required: property.required,\n    };\n  } else if (propertyType === 'array') {\n    return {\n      ...baseSchema,\n      type: SchemaType.ARRAY,\n      items: convertSchemaProperty(property.items),\n    };\n  } else {\n    const schemaType = SchemaType[propertyType.toUpperCase()] as SchemaType;\n    if (!schemaType) {\n      throw new GenkitError({\n        status: 'INVALID_ARGUMENT',\n        message: `Unsupported property type ${propertyType.toUpperCase()}`,\n      });\n    }\n    return {\n      ...baseSchema,\n      type: schemaType,\n    };\n  }\n}\n\n/** @hidden */\nexport function toGeminiTool(\n  tool: z.infer<typeof ToolDefinitionSchema>\n): FunctionDeclaration {\n  const declaration: FunctionDeclaration = {\n    name: tool.name.replace(/\\//g, '__'), // Gemini throws on '/' in tool name\n    description: tool.description,\n    parameters: convertSchemaProperty(tool.inputSchema),\n  };\n  return declaration;\n}\n\nfunction toInlineData(part: MediaPart): InlineDataPart {\n  const dataUrl = part.media.url;\n  const b64Data = dataUrl.substring(dataUrl.indexOf(',')! + 1);\n  const contentType =\n    part.media.contentType ||\n    dataUrl.substring(dataUrl.indexOf(':')! + 1, dataUrl.indexOf(';'));\n  return { inlineData: { mimeType: contentType, data: b64Data } };\n}\n\nfunction toFileData(part: MediaPart): FileDataPart {\n  if (!part.media.contentType)\n    throw new Error(\n      'Must supply a `contentType` when sending File URIs to Gemini.'\n    );\n  return {\n    fileData: { mimeType: part.media.contentType, fileUri: part.media.url },\n  };\n}\n\nfunction fromInlineData(inlinePart: InlineDataPart): MediaPart {\n  // Check if the required properties exist\n  if (\n    !inlinePart.inlineData ||\n    !inlinePart.inlineData.hasOwnProperty('mimeType') ||\n    !inlinePart.inlineData.hasOwnProperty('data')\n  ) {\n    throw new Error('Invalid InlineDataPart: missing required properties');\n  }\n  const { mimeType, data } = inlinePart.inlineData;\n  // Combine data and mimeType into a data URL\n  const dataUrl = `data:${mimeType};base64,${data}`;\n  return {\n    media: {\n      url: dataUrl,\n      contentType: mimeType,\n    },\n  };\n}\n\nfunction toFunctionCall(part: ToolRequestPart): FunctionCallPart {\n  if (!part?.toolRequest?.input) {\n    throw Error('Invalid ToolRequestPart: input was missing.');\n  }\n  return {\n    functionCall: {\n      name: part.toolRequest.name,\n      args: part.toolRequest.input,\n    },\n  };\n}\n\nfunction fromFunctionCall(\n  part: FunctionCallPart,\n  ref: string\n): ToolRequestPart {\n  if (!part.functionCall) {\n    throw Error('Invalid FunctionCallPart');\n  }\n  return {\n    toolRequest: {\n      name: part.functionCall.name,\n      input: part.functionCall.args,\n      ref,\n    },\n  };\n}\n\nfunction toFunctionResponse(part: ToolResponsePart): FunctionResponsePart {\n  if (!part?.toolResponse?.output) {\n    throw Error('Invalid ToolResponsePart: output was missing.');\n  }\n  return {\n    functionResponse: {\n      name: part.toolResponse.name,\n      response: {\n        name: part.toolResponse.name,\n        content: part.toolResponse.output,\n      },\n    },\n  };\n}\n\nfunction fromFunctionResponse(part: FunctionResponsePart): ToolResponsePart {\n  if (!part.functionResponse) {\n    throw new Error('Invalid FunctionResponsePart.');\n  }\n  return {\n    toolResponse: {\n      name: part.functionResponse.name.replace(/__/g, '/'), // restore slashes\n      output: part.functionResponse.response,\n    },\n  };\n}\n\nfunction fromExecutableCode(part: GeminiPart): Part {\n  if (!part.executableCode) {\n    throw new Error('Invalid GeminiPart: missing executableCode');\n  }\n  return {\n    custom: {\n      executableCode: {\n        language: part.executableCode.language,\n        code: part.executableCode.code,\n      },\n    },\n  };\n}\n\nfunction fromCodeExecutionResult(part: GeminiPart): Part {\n  if (!part.codeExecutionResult) {\n    throw new Error('Invalid GeminiPart: missing codeExecutionResult');\n  }\n  return {\n    custom: {\n      codeExecutionResult: {\n        outcome: part.codeExecutionResult.outcome,\n        output: part.codeExecutionResult.output,\n      },\n    },\n  };\n}\n\nfunction fromThought(part: {\n  thought: boolean;\n  text?: string;\n  thoughtSignature?: string;\n}): Part {\n  return {\n    reasoning: part.text || '',\n    metadata: { thoughtSignature: (part as any).thoughtSignature },\n  };\n}\n\nfunction toCustomPart(part: Part): GeminiPart {\n  if (!part.custom) {\n    throw new Error('Invalid GeminiPart: missing custom');\n  }\n  if (part.custom.codeExecutionResult) {\n    return { codeExecutionResult: part.custom.codeExecutionResult };\n  }\n  if (part.custom.executableCode) {\n    return { executableCode: part.custom.executableCode };\n  }\n  throw new Error('Unsupported Custom Part type');\n}\n\nfunction toThought(part: Part) {\n  const outPart: any = { thought: true };\n  if (part.metadata?.thoughtSignature)\n    outPart.thoughtSignature = part.metadata.thoughtSignature;\n  if (part.reasoning?.length) outPart.text = part.reasoning;\n  return outPart;\n}\n\nfunction toGeminiPart(part: Part): GeminiPart {\n  if (part.text !== undefined) return { text: part.text || ' ' };\n  if (part.media) {\n    if (part.media.url.startsWith('data:')) return toInlineData(part);\n    return toFileData(part);\n  }\n  if (part.toolRequest) return toFunctionCall(part);\n  if (part.toolResponse) return toFunctionResponse(part);\n  if (part.custom) return toCustomPart(part);\n  if (typeof part.reasoning === 'string') return toThought(part);\n  throw new Error('Unsupported Part type' + JSON.stringify(part));\n}\n\nfunction fromGeminiPart(\n  part: GeminiPart,\n  jsonMode: boolean,\n  ref: string\n): Part {\n  if ('thought' in part) return fromThought(part as any);\n  if (typeof part.text === 'string') return { text: part.text };\n  if (part.inlineData) return fromInlineData(part);\n  if (part.functionCall) return fromFunctionCall(part, ref);\n  if (part.functionResponse) return fromFunctionResponse(part);\n  if (part.executableCode) return fromExecutableCode(part);\n  if (part.codeExecutionResult) return fromCodeExecutionResult(part);\n  throw new Error('Unsupported GeminiPart type: ' + JSON.stringify(part));\n}\n\nexport function toGeminiMessage(\n  message: MessageData,\n  model?: ModelReference<z.ZodTypeAny>\n): GeminiMessage {\n  let sortedParts = message.content;\n  if (message.role === 'tool') {\n    sortedParts = [...message.content].sort((a, b) => {\n      const aRef = a.toolResponse?.ref;\n      const bRef = b.toolResponse?.ref;\n      if (!aRef && !bRef) return 0;\n      if (!aRef) return 1;\n      if (!bRef) return -1;\n      return Number.parseInt(aRef, 10) - Number.parseInt(bRef, 10);\n    });\n  }\n  return {\n    role: toGeminiRole(message.role, model),\n    parts: sortedParts.map(toGeminiPart),\n  };\n}\n\nexport function toGeminiSystemInstruction(message: MessageData): GeminiMessage {\n  return {\n    role: 'user',\n    parts: message.content.map(toGeminiPart),\n  };\n}\n\nfunction fromGeminiFinishReason(\n  reason: GeminiCandidate['finishReason']\n): CandidateData['finishReason'] {\n  if (!reason) return 'unknown';\n  switch (reason) {\n    case 'STOP':\n      return 'stop';\n    case 'MAX_TOKENS':\n      return 'length';\n    case 'SAFETY': // blocked for safety\n    case 'RECITATION': // blocked for reciting training data\n      return 'blocked';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function fromGeminiCandidate(\n  candidate: GeminiCandidate,\n  jsonMode = false\n): CandidateData {\n  const parts = candidate.content?.parts || [];\n  const genkitCandidate: CandidateData = {\n    index: candidate.index || 0,\n    message: {\n      role: 'model',\n      content: parts.map((part, index) =>\n        fromGeminiPart(part, jsonMode, index.toString())\n      ),\n    },\n    finishReason: fromGeminiFinishReason(candidate.finishReason),\n    finishMessage: candidate.finishMessage,\n    custom: {\n      safetyRatings: candidate.safetyRatings,\n      citationMetadata: candidate.citationMetadata,\n    },\n  };\n\n  return genkitCandidate;\n}\nexport function cleanSchema(schema: JSONSchema): JSONSchema {\n  const out = structuredClone(schema);\n  for (const key in out) {\n    if (key === '$schema' || key === 'additionalProperties') {\n      delete out[key];\n      continue;\n    }\n    if (typeof out[key] === 'object') {\n      out[key] = cleanSchema(out[key]);\n    }\n    // Zod nullish() and picoschema optional fields will produce type `[\"string\", \"null\"]`\n    // which is not supported by the model API. Convert them to just `\"string\"`.\n    if (key === 'type' && Array.isArray(out[key])) {\n      // find the first that's not `null`.\n      out[key] = out[key].find((t) => t !== 'null');\n    }\n  }\n  return out;\n}\n\n/**\n * Defines a new GoogleAI model.\n */\nexport function defineGoogleAIModel({\n  ai,\n  name,\n  apiKey: apiKeyOption,\n  apiVersion,\n  baseUrl,\n  info,\n  defaultConfig,\n  debugTraces,\n}: {\n  ai: Genkit;\n  name: string;\n  apiKey?: string | false;\n  apiVersion?: string;\n  baseUrl?: string;\n  info?: ModelInfo;\n  defaultConfig?: GeminiConfig;\n  debugTraces?: boolean;\n}): ModelAction {\n  let apiKey: string | undefined;\n  // DO NOT infer API key from environment variable if plugin was configured with `{apiKey: false}`.\n  if (apiKeyOption !== false) {\n    apiKey = apiKeyOption || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n\n  const apiModelName = name.startsWith('googleai/')\n    ? name.substring('googleai/'.length)\n    : name;\n\n  const model: ModelReference<z.ZodTypeAny> =\n    SUPPORTED_GEMINI_MODELS[apiModelName] ??\n    modelRef({\n      name: `googleai/${apiModelName}`,\n      info: {\n        label: `Google AI - ${apiModelName}`,\n        supports: {\n          multiturn: true,\n          media: true,\n          tools: true,\n          systemRole: true,\n          output: ['text', 'json'],\n        },\n        ...info,\n      },\n      configSchema: GeminiConfigSchema,\n    });\n\n  const middleware: ModelMiddleware[] = [];\n  if (model.info?.supports?.media) {\n    // the gemini api doesn't support downloading media from http(s)\n    middleware.push(\n      downloadRequestMedia({\n        maxBytes: 1024 * 1024 * 10,\n        // don't downlaod files that have been uploaded using the Files API\n        filter: (part) => {\n          try {\n            const url = new URL(part.media.url);\n            if (\n              // Gemini can handle these URLs\n              [\n                'generativelanguage.googleapis.com',\n                'www.youtube.com',\n                'youtube.com',\n                'youtu.be',\n              ].includes(url.hostname)\n            )\n              return false;\n          } catch {}\n          return true;\n        },\n      })\n    );\n  }\n\n  return ai.defineModel(\n    {\n      apiVersion: 'v2',\n      name: model.name,\n      ...model.info,\n      configSchema: model.configSchema,\n      use: middleware,\n    },\n    async (request, { streamingRequested, sendChunk, abortSignal }) => {\n      const options: RequestOptions = { apiClient: GENKIT_CLIENT_HEADER };\n      if (apiVersion) {\n        options.apiVersion = apiVersion;\n      }\n      if (apiVersion) {\n        options.baseUrl = baseUrl;\n      }\n      const requestConfig: z.infer<typeof GeminiConfigSchema> = {\n        ...defaultConfig,\n        ...request.config,\n      };\n\n      // Make a copy so that modifying the request will not produce side-effects\n      const messages = [...request.messages];\n      if (messages.length === 0) throw new Error('No messages provided.');\n\n      // Gemini does not support messages with role system and instead expects\n      // systemInstructions to be provided as a separate input. The first\n      // message detected with role=system will be used for systemInstructions.\n      let systemInstruction: GeminiMessage | undefined = undefined;\n      if (model.info?.supports?.systemRole) {\n        const systemMessage = messages.find((m) => m.role === 'system');\n        if (systemMessage) {\n          messages.splice(messages.indexOf(systemMessage), 1);\n          systemInstruction = toGeminiSystemInstruction(systemMessage);\n        }\n      }\n\n      const tools: Tool[] = [];\n      if (request.tools?.length) {\n        tools.push({\n          functionDeclarations: request.tools.map(toGeminiTool),\n        });\n      }\n\n      const {\n        apiKey: apiKeyFromConfig,\n        safetySettings: safetySettingsFromConfig,\n        codeExecution: codeExecutionFromConfig,\n        version: versionFromConfig,\n        functionCallingConfig,\n        googleSearchRetrieval,\n        tools: toolsFromConfig,\n        ...restOfConfigOptions\n      } = requestConfig;\n\n      if (codeExecutionFromConfig) {\n        tools.push({\n          codeExecution:\n            request.config.codeExecution === true\n              ? {}\n              : request.config.codeExecution,\n        });\n      }\n\n      if (toolsFromConfig) {\n        tools.push(...(toolsFromConfig as any[]));\n      }\n\n      if (googleSearchRetrieval) {\n        tools.push({\n          googleSearch:\n            googleSearchRetrieval === true ? {} : googleSearchRetrieval,\n        } as GoogleSearchRetrievalTool);\n      }\n\n      let toolConfig: ToolConfig | undefined;\n      if (functionCallingConfig) {\n        toolConfig = {\n          functionCallingConfig: {\n            allowedFunctionNames: functionCallingConfig.allowedFunctionNames,\n            mode: toFunctionModeEnum(functionCallingConfig.mode),\n          },\n        };\n      } else if (request.toolChoice) {\n        toolConfig = {\n          functionCallingConfig: {\n            mode: toGeminiFunctionModeEnum(request.toolChoice),\n          },\n        };\n      }\n\n      // Cannot use tools with JSON mode\n      const jsonMode =\n        request.output?.format === 'json' ||\n        (request.output?.contentType === 'application/json' &&\n          tools.length === 0);\n\n      const generationConfig: GenerationConfig = {\n        ...restOfConfigOptions,\n        candidateCount: request.candidates || undefined,\n        responseMimeType: jsonMode ? 'application/json' : undefined,\n      };\n\n      if (request.output?.constrained && jsonMode) {\n        generationConfig.responseSchema = cleanSchema(request.output.schema);\n      }\n\n      const msg = toGeminiMessage(messages[messages.length - 1], model);\n\n      const fromJSONModeScopedGeminiCandidate = (\n        candidate: GeminiCandidate\n      ) => {\n        return fromGeminiCandidate(candidate, jsonMode);\n      };\n\n      const chatRequest: StartChatParams = {\n        systemInstruction,\n        generationConfig,\n        tools: tools.length ? tools : undefined,\n        toolConfig,\n        history: messages\n          .slice(0, -1)\n          .map((message) => toGeminiMessage(message, model)),\n        safetySettings: safetySettingsFromConfig,\n      } as StartChatParams;\n      const modelVersion = (versionFromConfig ||\n        model.version ||\n        apiModelName) as string;\n      const cacheConfigDetails = extractCacheConfig(request);\n\n      const { chatRequest: updatedChatRequest, cache } =\n        await handleCacheIfNeeded(\n          apiKey!,\n          request,\n          chatRequest,\n          modelVersion,\n          cacheConfigDetails\n        );\n\n      if (!apiKeyFromConfig && !apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(apiKeyFromConfig || apiKey!);\n      let genModel: GenerativeModel;\n\n      if (cache) {\n        genModel = client.getGenerativeModelFromCachedContent(\n          cache,\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      } else {\n        genModel = client.getGenerativeModel(\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      }\n\n      const callGemini = async () => {\n        let response: GenerateContentResponse;\n\n        if (streamingRequested) {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessageStream(msg.parts, { ...options, signal: abortSignal });\n\n          const chunks = [] as GenerateContentResponse[];\n          for await (const item of result.stream) {\n            chunks.push(item as GenerateContentResponse);\n            (item as GenerateContentResponse).candidates?.forEach(\n              (candidate) => {\n                const c = fromJSONModeScopedGeminiCandidate(candidate);\n                sendChunk({\n                  index: c.index,\n                  content: c.message.content,\n                });\n              }\n            );\n          }\n\n          response = aggregateResponses(chunks);\n        } else {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessage(msg.parts, { ...options, signal: abortSignal });\n\n          response = result.response;\n        }\n\n        const candidates = response.candidates || [];\n        if (response.candidates?.['undefined']) {\n          candidates.push(response.candidates['undefined']);\n        }\n        if (!candidates.length) {\n          throw new GenkitError({\n            status: 'FAILED_PRECONDITION',\n            message: 'No valid candidates returned.',\n          });\n        }\n\n        const candidateData =\n          candidates.map(fromJSONModeScopedGeminiCandidate) || [];\n\n        return {\n          candidates: candidateData,\n          custom: response,\n          usage: {\n            ...getBasicUsageStats(request.messages, candidateData),\n            inputTokens: response.usageMetadata?.promptTokenCount,\n            outputTokens: response.usageMetadata?.candidatesTokenCount,\n            totalTokens: response.usageMetadata?.totalTokenCount,\n            cachedContentTokens:\n              response.usageMetadata?.cachedContentTokenCount,\n          },\n        };\n      };\n\n      // If debugTraces is enable, we wrap the actual model call with a span, add raw\n      // API params as for input.\n      return debugTraces\n        ? await runInNewSpan(\n            ai.registry,\n            {\n              metadata: {\n                name: streamingRequested ? 'sendMessageStream' : 'sendMessage',\n              },\n            },\n            async (metadata) => {\n              metadata.input = {\n                sdk: '@google/generative-ai',\n                cache: cache,\n                model: genModel.model,\n                chatOptions: updatedChatRequest,\n                parts: msg.parts,\n                options,\n              };\n              const response = await callGemini();\n              metadata.output = response.custom;\n              return response;\n            }\n          )\n        : await callGemini();\n    }\n  );\n}\n\n/** Converts mode from the config, which follows Gemini naming convention. */\nfunction toFunctionModeEnum(\n  configEnum: string | undefined\n): FunctionCallingMode | undefined {\n  if (configEnum === undefined) {\n    return undefined;\n  }\n  switch (configEnum) {\n    case 'MODE_UNSPECIFIED': {\n      return FunctionCallingMode.MODE_UNSPECIFIED;\n    }\n    case 'ANY': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'AUTO': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'NONE': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${configEnum}`);\n  }\n}\n\n/** Converts mode from genkit tool choice. */\nfunction toGeminiFunctionModeEnum(\n  genkitMode: 'auto' | 'required' | 'none'\n): FunctionCallingMode | undefined {\n  if (genkitMode === undefined) {\n    return undefined;\n  }\n  switch (genkitMode) {\n    case 'required': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'auto': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'none': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${genkitMode}`);\n  }\n}\n\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single GenerateContentResponse.\n *\n * This code is copy-pasted from https://github.com/google-gemini/deprecated-generative-ai-js/blob/8b14949a5e8f1f3dfc35c394ebf5b19e68f92a22/src/requests/stream-reader.ts#L153\n * with a small (but critical) bug fix.\n */\nexport function aggregateResponses(\n  responses: GenerateContentResponse[]\n): GenerateContentResponse {\n  const lastResponse = responses[responses.length - 1];\n  const aggregatedResponse: GenerateContentResponse = {\n    promptFeedback: lastResponse?.promptFeedback,\n  };\n  for (const response of responses) {\n    if (response.candidates) {\n      let candidateIndex = 0;\n      for (const candidate of response.candidates) {\n        if (!aggregatedResponse.candidates) {\n          aggregatedResponse.candidates = [];\n        }\n        if (!aggregatedResponse.candidates[candidateIndex]) {\n          aggregatedResponse.candidates[candidateIndex] = {\n            index: candidateIndex,\n          } as GenerateContentCandidate;\n        }\n        // Keep overwriting, the last one will be final\n        aggregatedResponse.candidates[candidateIndex].citationMetadata =\n          candidate.citationMetadata;\n        aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n          candidate.groundingMetadata;\n        aggregatedResponse.candidates[candidateIndex].finishReason =\n          candidate.finishReason;\n        aggregatedResponse.candidates[candidateIndex].finishMessage =\n          candidate.finishMessage;\n        aggregatedResponse.candidates[candidateIndex].safetyRatings =\n          candidate.safetyRatings;\n\n        /**\n         * Candidates should always have content and parts, but this handles\n         * possible malformed responses.\n         */\n        if (candidate.content && candidate.content.parts) {\n          if (!aggregatedResponse.candidates[candidateIndex].content) {\n            aggregatedResponse.candidates[candidateIndex].content = {\n              role: candidate.content.role || 'user',\n              parts: [],\n            };\n          }\n          for (const part of candidate.content.parts) {\n            const newPart: Partial<GeminiPart> = {};\n            if (part.text) {\n              newPart.text = part.text;\n            }\n            if (part.functionCall) {\n              newPart.functionCall = part.functionCall;\n            }\n            if (part.executableCode) {\n              newPart.executableCode = part.executableCode;\n            }\n            if (part.codeExecutionResult) {\n              newPart.codeExecutionResult = part.codeExecutionResult;\n            }\n            if (Object.keys(newPart).length === 0) {\n              newPart.text = '';\n            }\n            aggregatedResponse.candidates[candidateIndex].content.parts.push(\n              newPart as GeminiPart\n            );\n          }\n        }\n      }\n      candidateIndex++;\n    }\n    if (response.usageMetadata) {\n      aggregatedResponse.usageMetadata = response.usageMetadata;\n    }\n  }\n  return aggregatedResponse;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/predict.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GENKIT_CLIENT_HEADER } from 'genkit';\n\nexport type PredictMethod = 'predict' | 'predictLongRunning';\n\nexport interface Operation {\n  name: string;\n  done?: boolean;\n  error?: {\n    message: string;\n  };\n  response?: {\n    generateVideoResponse: {\n      generatedSamples: { video: { uri: string } }[];\n    };\n  };\n}\n\nfunction predictEndpoint(options: {\n  apiVersion: string;\n  model: string;\n  apiKey: string;\n  method: PredictMethod;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/models/${options.model}:${options.method}?key=${options.apiKey}`;\n}\n\nfunction opCheckEndpoint(options: {\n  apiVersion: string;\n  operation: string;\n  apiKey: string;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/${options.operation}?key=${options.apiKey}`;\n}\n\nexport type PredictClient<I = unknown, R = unknown, P = unknown> = (\n  instances: I[],\n  parameters: P\n) => Promise<R>;\n\nexport function predictModel<I = unknown, R = unknown, P = unknown>(\n  model: string,\n  apiKey: string,\n  method: PredictMethod\n): PredictClient<I, R, P> {\n  return async (instances: I[], parameters: P): Promise<R> => {\n    const fetch = (await import('node-fetch')).default;\n\n    const req = {\n      instances,\n      parameters,\n    };\n\n    const response = await fetch(\n      predictEndpoint({\n        model,\n        apiVersion: 'v1beta',\n        apiKey,\n        method,\n      }),\n      {\n        method: 'POST',\n        body: JSON.stringify(req),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Client': GENKIT_CLIENT_HEADER,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Error from Gemini AI predict: HTTP ${\n          response.status\n        }: ${await response.text()}`\n      );\n    }\n\n    return (await response.json()) as R;\n  };\n}\n\nexport async function checkOp(\n  operation: string,\n  apiKey: string\n): Promise<Operation> {\n  const fetch = (await import('node-fetch')).default;\n\n  const response = await fetch(\n    opCheckEndpoint({\n      apiVersion: 'v1beta',\n      operation,\n      apiKey,\n    }),\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Client': GENKIT_CLIENT_HEADER,\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      `Error from operation API: HTTP ${\n        response.status\n      }: ${await response.text()}`\n    );\n  }\n\n  return (await response.json()) as Operation;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,CAAA;AAAA,SAAA,iBAAA;IAAA,SAAA,IAAA;IAAA,cAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,gBAAqC;AAiBrC,SAAS,gBAAgB,OAAA,EAKtB;IACD,OAAO,CAAA,0CAAA,EAA6C,QAAQ,UAAU,CAAA,QAAA,EAAW,QAAQ,KAAK,CAAA,CAAA,EAAI,QAAQ,MAAM,CAAA,KAAA,EAAQ,QAAQ,MAAM,EAAA;AACxI;AAEA,SAAS,gBAAgB,OAAA,EAItB;IACD,OAAO,CAAA,0CAAA,EAA6C,QAAQ,UAAU,CAAA,CAAA,EAAI,QAAQ,SAAS,CAAA,KAAA,EAAQ,QAAQ,MAAM,EAAA;AACnH;AAOO,SAAS,aACd,KAAA,EACA,MAAA,EACA,MAAA,EACwB;IACxB,OAAO,OAAO,WAAgB,eAA8B;QAC1D,MAAM,QAAA,CAAS,MAAM,OAAO,YAAY,uHAAA,EAAG,OAAA;QAE3C,MAAM,MAAM;YACV;YACA;QACF;QAEA,MAAM,WAAW,MAAM,MACrB,gBAAgB;YACd;YACA,YAAY;YACZ;YACA;QACF,CAAC,GACD;YACE,QAAQ;YACR,MAAM,KAAK,SAAA,CAAU,GAAG;YACxB,SAAS;gBACP,gBAAgB;gBAChB,qBAAqB,cAAA,oBAAA;YACvB;QACF;QAGF,IAAI,CAAC,SAAS,EAAA,EAAI;YAChB,MAAM,IAAI,MACR,CAAA,mCAAA,EACE,SAAS,MACX,CAAA,EAAA,EAAK,MAAM,SAAS,IAAA,CAAK,CAAC,EAAA;QAE9B;QAEA,OAAQ,MAAM,SAAS,IAAA,CAAK;IAC9B;AACF;AAEA,eAAsB,QACpB,SAAA,EACA,MAAA,EACoB;IACpB,MAAM,QAAA,CAAS,MAAM,OAAO,YAAY,uHAAA,EAAG,OAAA;IAE3C,MAAM,WAAW,MAAM,MACrB,gBAAgB;QACd,YAAY;QACZ;QACA;IACF,CAAC,GACD;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,qBAAqB,cAAA,oBAAA;QACvB;IACF;IAGF,IAAI,CAAC,SAAS,EAAA,EAAI;QAChB,MAAM,IAAI,MACR,CAAA,+BAAA,EACE,SAAS,MACX,CAAA,EAAA,EAAK,MAAM,SAAS,IAAA,CAAK,CAAC,EAAA;IAE9B;IAEA,OAAQ,MAAM,SAAS,IAAA,CAAK;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/imagen.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenkitError, MessageData, z, type Genkit } from 'genkit';\nimport {\n  getBasicUsageStats,\n  modelRef,\n  type GenerateRequest,\n  type ModelAction,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { predictModel } from './predict.js';\n\nexport type KNOWN_IMAGEN_MODELS = 'imagen-3.0-generate-002';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/image-generation#imagen-model\n */\nexport const ImagenConfigSchema = z\n  .object({\n    numberOfImages: z\n      .number()\n      .describe(\n        'The number of images to generate, from 1 to 4 (inclusive). The default is 1.'\n      )\n      .optional(),\n    aspectRatio: z\n      .enum(['1:1', '9:16', '16:9', '3:4', '4:3'])\n      .describe('Desired aspect ratio of the output image.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n  })\n  .passthrough();\n\ninterface ImagenParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof ImagenConfigSchema>\n): ImagenParameters {\n  const out = {\n    sampleCount: request.config?.numberOfImages ?? 1,\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\nfunction extractBaseImage(request: GenerateRequest): string | undefined {\n  return request.messages\n    .at(-1)\n    ?.content.find((p) => !!p.media)\n    ?.media?.url.split(',')[1];\n}\n\ninterface ImagenPrediction {\n  predictions: { bytesBase64Encoded: string; mimeType: string }[];\n}\n\ninterface ImagenInstance {\n  prompt: string;\n  image?: { bytesBase64Encoded: string };\n  mask?: { image?: { bytesBase64Encoded: string } };\n}\n\nexport const GENERIC_IMAGEN_INFO = {\n  label: `Google AI - Generic Imagen`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n  },\n} as ModelInfo;\n\nexport function defineImagenModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): ModelAction {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_IMAGEN_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: ImagenConfigSchema,\n  });\n\n  return ai.defineModel(\n    {\n      name: modelName,\n      ...model.info,\n      configSchema: ImagenConfigSchema,\n    },\n    async (request) => {\n      const instance: ImagenInstance = {\n        prompt: extractText(request),\n      };\n      const baseImage = extractBaseImage(request);\n      if (baseImage) {\n        instance.image = { bytesBase64Encoded: baseImage };\n      }\n\n      const predictClient = predictModel<\n        ImagenInstance,\n        ImagenPrediction,\n        ImagenParameters\n      >(model.version || name, apiKey as string, 'predict');\n      const response = await predictClient([instance], toParameters(request));\n\n      if (!response.predictions || response.predictions.length == 0) {\n        throw new Error(\n          'Model returned no predictions. Possibly due to content filters.'\n        );\n      }\n\n      const message = {\n        role: 'model',\n        content: [],\n      } as MessageData;\n\n      response.predictions.forEach((p, i) => {\n        const b64data = p.bytesBase64Encoded;\n        const mimeType = p.mimeType;\n        message.content.push({\n          media: {\n            url: `data:${mimeType};base64,${b64data}`,\n            contentType: mimeType,\n          },\n        });\n      });\n      return {\n        finishReason: 'stop',\n        message,\n        usage: getBasicUsageStats(request.messages, message),\n        custom: response,\n      };\n    }\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3471, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/list-models.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Gemini  model definition\nexport interface Model {\n  name: string;\n  baseModelId: string;\n  version: string;\n  displayName: string;\n  description: string;\n  inputTokenLimit: number;\n  outputTokenLimit: number;\n  supportedGenerationMethods: string[];\n  temperature: number;\n  maxTemperature: number;\n  topP: number;\n  topK: number;\n}\n\n// Gemini list models response\ninterface ListModelsResponse {\n  models: Model[];\n  nextPageToken?: string;\n}\n\n/**\n * List Gemini models by making an RPC call to the API.\n *\n * https://ai.google.dev/api/models#method:-models.list\n */\nexport async function listModels(\n  baseUrl: string,\n  apiKey: string\n): Promise<Model[]> {\n  // We call the gemini list local models api:\n  const res = await fetch(\n    `${baseUrl}/v1beta/models?pageSize=1000&key=${apiKey}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const modelResponse = JSON.parse(await res.text()) as ListModelsResponse;\n  return modelResponse.models;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,sBAAA,CAAA;AAAA,SAAA,qBAAA;IAAA,YAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AA2CA,eAAsB,WACpB,OAAA,EACA,MAAA,EACkB;IAElB,MAAM,MAAM,MAAM,MAChB,GAAG,OAAO,CAAA,iCAAA,EAAoC,MAAM,EAAA,EACpD;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;IAEF,MAAM,gBAAgB,KAAK,KAAA,CAAM,MAAM,IAAI,IAAA,CAAK,CAAC;IACjD,OAAO,cAAc,MAAA;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3518, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/veo.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GenerateResponseData,\n  GenkitError,\n  Operation,\n  z,\n  type Genkit,\n} from 'genkit';\nimport {\n  BackgroundModelAction,\n  modelRef,\n  type GenerateRequest,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { Operation as ApiOperation, checkOp, predictModel } from './predict.js';\n\nexport type KNOWN_VEO_MODELS = 'veo-2.0-generate-001';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/video\n */\nexport const VeoConfigSchema = z\n  .object({\n    // NOTE: Documentation notes numberOfVideos parameter to pick the number of\n    // output videos, but this setting does not seem to work\n    negativePrompt: z.string().optional(),\n    aspectRatio: z\n      .enum(['9:16', '16:9'])\n      .describe('Desired aspect ratio of the output video.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n    durationSeconds: z\n      .number()\n      .step(1)\n      .min(5)\n      .max(8)\n      .describe('Length of each output video in seconds, between 5 and 8.')\n      .optional(),\n    enhance_prompt: z\n      .boolean()\n      .describe('Enable or disable the prompt rewriter. Enabled by default.')\n      .optional(),\n  })\n  .passthrough();\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\ninterface VeoParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof VeoConfigSchema>\n): VeoParameters {\n  const out = {\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractImage(request: GenerateRequest): VeoImage | undefined {\n  const media = request.messages.at(-1)?.content.find((p) => !!p.media)?.media;\n  if (media) {\n    const img = media?.url.split(',')[1];\n    return {\n      bytesBase64Encoded: img,\n      mimeType: media.contentType!,\n    };\n  }\n  return undefined;\n}\n\ninterface VeoImage {\n  bytesBase64Encoded: string;\n  mimeType: string;\n}\n\ninterface VeoInstance {\n  prompt: string;\n  image?: VeoImage;\n}\n\nexport const GENERIC_VEO_INFO = {\n  label: `Google AI - Generic Veo`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n    longRunning: true,\n  },\n} as ModelInfo;\n\nexport function defineVeoModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): BackgroundModelAction<typeof VeoConfigSchema> {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_VEO_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: VeoConfigSchema,\n  });\n\n  return ai.defineBackgroundModel({\n    name: modelName,\n    ...model.info,\n    configSchema: VeoConfigSchema,\n    async start(request) {\n      const instance: VeoInstance = {\n        prompt: extractText(request),\n      };\n      const image = extractImage(request);\n      if (image) {\n        instance.image = image;\n      }\n\n      const predictClient = predictModel<\n        VeoInstance,\n        ApiOperation,\n        VeoParameters\n      >(model.version || name, apiKey as string, 'predictLongRunning');\n      const response = await predictClient([instance], toParameters(request));\n\n      return toGenkitOp(response);\n    },\n    async check(operation) {\n      const newOp = await checkOp(operation.id, apiKey as string);\n      return toGenkitOp(newOp);\n    },\n  });\n}\n\nfunction toGenkitOp(apiOp: ApiOperation): Operation<GenerateResponseData> {\n  const res = { id: apiOp.name } as Operation<GenerateResponseData>;\n  if (apiOp.done !== undefined) {\n    res.done = apiOp.done;\n  }\n\n  if (apiOp.error) {\n    res.error = { message: apiOp.error.message };\n  }\n\n  if (\n    apiOp.response &&\n    apiOp.response.generateVideoResponse &&\n    apiOp.response.generateVideoResponse.generatedSamples\n  ) {\n    res.output = {\n      finishReason: 'stop',\n      raw: apiOp.response,\n      message: {\n        role: 'model',\n        content: apiOp.response.generateVideoResponse.generatedSamples.map(\n          (s) => {\n            return {\n              media: {\n                url: s.video.uri,\n              },\n            };\n          }\n        ),\n      },\n    };\n  }\n\n  return res;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3689, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  embedderActionMetadata,\n  embedderRef,\n  modelActionMetadata,\n  type ActionMetadata,\n  type EmbedderReference,\n  type Genkit,\n  type ModelReference,\n  type z,\n} from 'genkit';\nimport { logger } from 'genkit/logging';\nimport { modelRef } from 'genkit/model';\nimport { genkitPlugin, type GenkitPlugin } from 'genkit/plugin';\nimport type { ActionType } from 'genkit/registry';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport {\n  SUPPORTED_MODELS as EMBEDDER_MODELS,\n  GeminiEmbeddingConfigSchema,\n  defineGoogleAIEmbedder,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiEmbeddingConfig,\n} from './embedder.js';\nimport {\n  GeminiConfigSchema,\n  SUPPORTED_GEMINI_MODELS,\n  defineGoogleAIModel,\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  type GeminiConfig,\n  type GeminiVersionString,\n} from './gemini.js';\nimport {\n  GENERIC_IMAGEN_INFO,\n  ImagenConfigSchema,\n  defineImagenModel,\n  type KNOWN_IMAGEN_MODELS,\n} from './imagen.js';\nimport { listModels } from './list-models.js';\nimport {\n  GENERIC_VEO_INFO,\n  KNOWN_VEO_MODELS,\n  VeoConfigSchema,\n  defineVeoModel,\n} from './veo.js';\nexport {\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiConfig,\n  type GeminiVersionString,\n};\n\nexport interface PluginOptions {\n  /**\n   * Provide the API key to use to authenticate with the Gemini API. By\n   * default, an API key must be provided explicitly here or through the\n   * `GEMINI_API_KEY` or `GOOGLE_API_KEY` environment variables.\n   *\n   * If `false` is explicitly passed, the plugin will be configured to\n   * expect an `apiKey` option to be provided to the model config at\n   * call time.\n   **/\n  apiKey?: string | false;\n  apiVersion?: string | string[];\n  baseUrl?: string;\n  models?: (\n    | ModelReference</** @ignore */ typeof GeminiConfigSchema>\n    | string\n  )[];\n  experimental_debugTraces?: boolean;\n}\n\nasync function initializer(ai: Genkit, options?: PluginOptions) {\n  let apiVersions = ['v1'];\n\n  if (options?.apiVersion) {\n    if (Array.isArray(options?.apiVersion)) {\n      apiVersions = options?.apiVersion;\n    } else {\n      apiVersions = [options?.apiVersion];\n    }\n  }\n\n  if (apiVersions.includes('v1beta')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: 'v1beta',\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n  }\n  if (apiVersions.includes('v1')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: undefined,\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n    Object.keys(EMBEDDER_MODELS).forEach((name) =>\n      defineGoogleAIEmbedder(ai, name, { apiKey: options?.apiKey })\n    );\n  }\n\n  if (options?.models) {\n    for (const modelOrRef of options?.models) {\n      const modelName =\n        typeof modelOrRef === 'string'\n          ? modelOrRef\n          : // strip out the `googleai/` prefix\n            modelOrRef.name.split('/')[1];\n      const modelRef =\n        typeof modelOrRef === 'string' ? gemini(modelOrRef) : modelOrRef;\n      defineGoogleAIModel({\n        ai,\n        name: modelName,\n        apiKey: options?.apiKey,\n        baseUrl: options?.baseUrl,\n        info: {\n          ...modelRef.info,\n          label: `Google AI - ${modelName}`,\n        },\n        debugTraces: options?.experimental_debugTraces,\n      });\n    }\n  }\n}\n\nasync function resolver(\n  ai: Genkit,\n  actionType: ActionType,\n  actionName: string,\n  options?: PluginOptions\n) {\n  if (actionType === 'embedder') {\n    resolveEmbedder(ai, actionName, options);\n  } else if (actionName.startsWith('veo')) {\n    // we do it this way because the request may come in for\n    // action type 'model' and action name 'veo-...'. That case should\n    // be a noop. It's just the order or model lookup.\n    if (actionType === 'background-model') {\n      defineVeoModel(ai, actionName, options?.apiKey);\n    }\n  } else if (actionType === 'model') {\n    resolveModel(ai, actionName, options);\n  }\n}\n\nfunction resolveModel(ai: Genkit, actionName: string, options?: PluginOptions) {\n  if (actionName.startsWith('imagen')) {\n    defineImagenModel(ai, actionName, options?.apiKey);\n    return;\n  }\n\n  const modelRef = gemini(actionName);\n  defineGoogleAIModel({\n    ai,\n    name: modelRef.name,\n    apiKey: options?.apiKey,\n    baseUrl: options?.baseUrl,\n    info: {\n      ...modelRef.info,\n      label: `Google AI - ${actionName}`,\n    },\n    debugTraces: options?.experimental_debugTraces,\n  });\n}\n\nfunction resolveEmbedder(\n  ai: Genkit,\n  actionName: string,\n  options?: PluginOptions\n) {\n  defineGoogleAIEmbedder(ai, `googleai/${actionName}`, {\n    apiKey: options?.apiKey,\n  });\n}\n\nasync function listActions(options?: PluginOptions): Promise<ActionMetadata[]> {\n  const apiKey = options?.apiKey || getApiKeyFromEnvVar();\n  if (!apiKey) {\n    // If API key is not configured we don't want to error, just return empty.\n    // In practice it will never actually reach this point without the API key,\n    // plugin initializer will fail before that.\n    logger.error(\n      'Pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.'\n    );\n    return [];\n  }\n\n  const models = await listModels(\n    options?.baseUrl || 'https://generativelanguage.googleapis.com',\n    apiKey\n  );\n\n  return [\n    // Imagen\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predict') &&\n          m.name.includes('imagen')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_IMAGEN_INFO },\n          configSchema: ImagenConfigSchema,\n        });\n      }),\n    // Veo\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predictLongRunning') &&\n          m.name.includes('veo')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_VEO_INFO },\n          configSchema: VeoConfigSchema,\n          background: true,\n        });\n      }),\n    // Models\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('generateContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const ref = gemini(\n          m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name\n        );\n\n        return modelActionMetadata({\n          name: ref.name,\n          info: ref.info,\n          configSchema: GeminiConfigSchema,\n        });\n      }),\n    // Embedders\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('embedContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name =\n          'googleai/' +\n          (m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name);\n\n        return embedderActionMetadata({\n          name,\n          configSchema: GeminiEmbeddingConfigSchema,\n          info: {\n            dimensions: 768,\n            label: `Google Gen AI - ${name}`,\n            supports: {\n              input: ['text'],\n            },\n          },\n        });\n      }),\n  ];\n}\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport function googleAIPlugin(options?: PluginOptions): GenkitPlugin {\n  let listActionsCache;\n  return genkitPlugin(\n    'googleai',\n    async (ai: Genkit) => await initializer(ai, options),\n    async (ai: Genkit, actionType: ActionType, actionName: string) =>\n      await resolver(ai, actionType, actionName, options),\n    async () => {\n      if (listActionsCache) return listActionsCache;\n      listActionsCache = await listActions(options);\n      return listActionsCache;\n    }\n  );\n}\n\nexport type GoogleAIPlugin = {\n  (params?: PluginOptions): GenkitPlugin;\n  model(\n    name: keyof typeof SUPPORTED_GEMINI_MODELS | (`gemini-${string}` & {}),\n    config?: z.infer<typeof GeminiConfigSchema>\n  ): ModelReference<typeof GeminiConfigSchema>;\n  model(\n    name: KNOWN_IMAGEN_MODELS | (`imagen${string}` & {}),\n    config?: z.infer<typeof ImagenConfigSchema>\n  ): ModelReference<typeof ImagenConfigSchema>;\n  model(\n    name: KNOWN_VEO_MODELS | (`veo${string}` & {}),\n    config?: z.infer<typeof VeoConfigSchema>\n  ): ModelReference<typeof VeoConfigSchema>;\n  model(name: string, config?: any): ModelReference<z.ZodTypeAny>;\n  embedder(\n    name: string,\n    config?: GeminiEmbeddingConfig\n  ): EmbedderReference<typeof GeminiEmbeddingConfigSchema>;\n};\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport const googleAI = googleAIPlugin as GoogleAIPlugin;\n// provide generic implementation for the model function overloads.\n(googleAI as any).model = (\n  name: string,\n  config?: any\n): ModelReference<z.ZodTypeAny> => {\n  if (name.startsWith('imagen')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: ImagenConfigSchema,\n    });\n  }\n  if (name.startsWith('veo')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: VeoConfigSchema,\n    });\n  }\n  return modelRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiConfigSchema,\n  });\n};\ngoogleAI.embedder = (\n  name: string,\n  config?: GeminiEmbeddingConfig\n): EmbedderReference<typeof GeminiEmbeddingConfigSchema> => {\n  return embedderRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiEmbeddingConfigSchema,\n  });\n};\n\nexport default googleAI;\n"],"names":["modelRef"],"mappings":"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","ignoreList":[0],"debugId":null}}]
}