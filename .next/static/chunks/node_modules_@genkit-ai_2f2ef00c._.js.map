{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/common.ts"],"sourcesContent":["/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport process from 'process';\n\nexport function getApiKeyFromEnvVar(): string | undefined {\n  return (\n    process.env.GEMINI_API_KEY ||\n    process.env.GOOGLE_API_KEY ||\n    process.env.GOOGLE_GENAI_API_KEY\n  );\n}\n"],"names":["process"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,CAAA;AAAA,SAAA,gBAAA;IAAA,qBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,iBAAoB;AAEb,SAAS,sBAA0C;IACxD,OACE,eAAAA,OAAAA,CAAQ,GAAA,CAAI,cAAA,IACZ,eAAAA,OAAAA,CAAQ,GAAA,CAAI,cAAA,IACZ,eAAAA,OAAAA,CAAQ,GAAA,CAAI,oBAAA;AAEhB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/embedder.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GoogleGenerativeAI,\n  type EmbedContentRequest,\n} from '@google/generative-ai';\nimport {\n  GenkitError,\n  z,\n  type EmbedderAction,\n  type EmbedderReference,\n  type Genkit,\n} from 'genkit';\nimport { embedderRef } from 'genkit/embedder';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport type { PluginOptions } from './index.js';\n\nexport const TaskTypeSchema = z.enum([\n  'RETRIEVAL_DOCUMENT',\n  'RETRIEVAL_QUERY',\n  'SEMANTIC_SIMILARITY',\n  'CLASSIFICATION',\n  'CLUSTERING',\n]);\nexport type TaskType = z.infer<typeof TaskTypeSchema>;\n\nexport const GeminiEmbeddingConfigSchema = z.object({\n  /** Override the API key provided at plugin initialization. */\n  apiKey: z.string().optional(),\n  /**\n   * The `task_type` parameter is defined as the intended downstream application to help the model\n   * produce better quality embeddings.\n   **/\n  taskType: TaskTypeSchema.optional(),\n  title: z.string().optional(),\n  version: z.string().optional(),\n  /**\n   * The `outputDimensionality` parameter allows you to specify the dimensionality of the embedding output.\n   * By default, the model generates embeddings with 768 dimensions. Models such as\n   * `text-embedding-004`, `text-embedding-005`, and `text-multilingual-embedding-002`\n   * allow the output dimensionality to be adjusted between 1 and 768.\n   * By selecting a smaller output dimensionality, users can save memory and storage space, leading to more efficient computations.\n   **/\n  outputDimensionality: z.number().min(1).max(768).optional(),\n});\n\nexport type GeminiEmbeddingConfig = z.infer<typeof GeminiEmbeddingConfigSchema>;\n\nexport const textEmbeddingGecko001 = embedderRef({\n  name: 'googleai/embedding-001',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding Gecko (Legacy)',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const textEmbedding004 = embedderRef({\n  name: 'googleai/text-embedding-004',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding 001',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const SUPPORTED_MODELS = {\n  'embedding-001': textEmbeddingGecko001,\n  'text-embedding-004': textEmbedding004,\n};\n\nexport function defineGoogleAIEmbedder(\n  ai: Genkit,\n  name: string,\n  pluginOptions: PluginOptions\n): EmbedderAction<any> {\n  let apiKey: string | undefined;\n  // DO NOT throw if {apiKey: false} was supplied to options.\n  if (pluginOptions.apiKey !== false) {\n    apiKey = pluginOptions?.apiKey || getApiKeyFromEnvVar();\n    if (!apiKey)\n      throw new Error(\n        'Please pass in the API key or set either GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai'\n      );\n  }\n  const embedder: EmbedderReference =\n    SUPPORTED_MODELS[name] ??\n    embedderRef({\n      name: name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: {\n        dimensions: 768,\n        label: `Google AI - ${name}`,\n        supports: {\n          input: ['text', 'image', 'video'],\n        },\n      },\n    });\n  const apiModelName = embedder.name.startsWith('googleai/')\n    ? embedder.name.substring('googleai/'.length)\n    : embedder.name;\n  return ai.defineEmbedder(\n    {\n      name: embedder.name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: embedder.info!,\n    },\n    async (input, options) => {\n      if (pluginOptions.apiKey === false && !options?.apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(\n        options?.apiKey || apiKey!\n      ).getGenerativeModel({\n        model:\n          options?.version ||\n          embedder.config?.version ||\n          embedder.version ||\n          apiModelName,\n      });\n      const embeddings = await Promise.all(\n        input.map(async (doc) => {\n          const response = await client.embedContent({\n            taskType: options?.taskType,\n            title: options?.title,\n            content: {\n              role: '',\n              parts: [{ text: doc.text }],\n            },\n            outputDimensionality: options?.outputDimensionality,\n          } as EmbedContentRequest);\n          const values = response.embedding.values;\n          return { embedding: values };\n        })\n      );\n      return { embeddings };\n    }\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/constants.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CONTEXT_CACHE_SUPPORTED_MODELS = [\n  'gemini-1.5-flash-001',\n  'gemini-1.5-pro-001',\n];\n\nexport const INVALID_ARGUMENT_MESSAGES = {\n  modelVersion: `Model version is required for context caching, supported only in ${CONTEXT_CACHE_SUPPORTED_MODELS.join(',')} models.`,\n  tools: 'Context caching cannot be used simultaneously with tools.',\n  codeExecution:\n    'Context caching cannot be used simultaneously with code execution.',\n};\n\nexport const DEFAULT_TTL = 300;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,oBAAA,CAAA;AAAA,SAAA,mBAAA;IAAA,gCAAA,IAAA;IAAA,aAAA,IAAA;IAAA,2BAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBO,MAAM,iCAAiC;IAC5C;IACA;CACF;AAEO,MAAM,4BAA4B;IACvC,cAAc,CAAA,iEAAA,EAAoE,+BAA+B,IAAA,CAAK,GAAG,CAAC,CAAA,QAAA,CAAA;IAC1H,OAAO;IACP,eACE;AACJ;AAEO,MAAM,cAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/types.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'genkit';\n\nexport const cacheConfigSchema = z.union([\n  z.boolean(),\n  z.object({ ttlSeconds: z.number().optional() }).passthrough(),\n]);\n\nexport type CacheConfig = z.infer<typeof cacheConfigSchema>;\n\nexport const cacheConfigDetailsSchema = z.object({\n  cacheConfig: cacheConfigSchema,\n  endOfCachedContents: z.number(),\n});\n\nexport type CacheConfigDetails = z.infer<typeof cacheConfigDetailsSchema>;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,0BAAA,IAAA;IAAA,mBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,gBAAkB;AAEX,MAAM,oBAAoB,cAAA,CAAA,CAAE,KAAA,CAAM;IACvC,cAAA,CAAA,CAAE,OAAA,CAAQ;IACV,cAAA,CAAA,CAAE,MAAA,CAAO;QAAE,YAAY,cAAA,CAAA,CAAE,MAAA,CAAO,EAAE,QAAA,CAAS;IAAE,CAAC,EAAE,WAAA,CAAY;CAC7D;AAIM,MAAM,2BAA2B,cAAA,CAAA,CAAE,MAAA,CAAO;IAC/C,aAAa;IACb,qBAAqB,cAAA,CAAA,CAAE,MAAA,CAAO;AAChC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/utils.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport type { GoogleAICacheManager } from '@google/generative-ai/server';\nimport crypto from 'crypto';\nimport { GenkitError, type MessageData, type z } from 'genkit';\nimport type { GenerateRequest } from 'genkit/model';\nimport {\n  CONTEXT_CACHE_SUPPORTED_MODELS,\n  DEFAULT_TTL,\n  INVALID_ARGUMENT_MESSAGES,\n} from './constants';\nimport {\n  cacheConfigSchema,\n  type CacheConfig,\n  type CacheConfigDetails,\n} from './types';\n\n/**\n * Generates a SHA-256 hash to use as a cache key.\n * @param request CachedContent - request object to hash\n * @returns string - the generated cache key\n */\nexport function generateCacheKey(request: CachedContent): string {\n  return crypto\n    .createHash('sha256')\n    .update(JSON.stringify(request))\n    .digest('hex');\n}\n\n/**\n * Retrieves the content needed for the cache based on the chat history and config details.\n */\nexport function getContentForCache(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): {\n  cachedContent: CachedContent;\n  chatRequest: StartChatParams;\n  cacheConfig?: CacheConfig;\n} {\n  // Ensure modelVersion is provided\n  if (!modelVersion) {\n    throw new Error('No model version provided for context caching');\n  }\n\n  // Ensure chatRequest has a history\n  if (!chatRequest.history?.length) {\n    throw new Error('No history provided for context caching');\n  }\n\n  // Validate the history length between request and chatRequest\n  validateHistoryLength(request, chatRequest);\n\n  // Extract relevant cached content based on cacheConfigDetails\n  const { endOfCachedContents, cacheConfig } = cacheConfigDetails;\n  const cachedContent: CachedContent = {\n    model: modelVersion,\n    contents: chatRequest.history.slice(0, endOfCachedContents + 1),\n  };\n\n  // Update the chatRequest history to only include non-cached parts\n  chatRequest.history = chatRequest.history.slice(endOfCachedContents + 1);\n\n  return { cachedContent, chatRequest, cacheConfig };\n}\n\n/**\n * Validates that the request and chat request history lengths align.\n * @throws GenkitError if lengths are mismatched\n */\nfunction validateHistoryLength(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams\n) {\n  if (chatRequest.history?.length !== request.messages.length - 1) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message:\n        'Genkit request history and Gemini chat request history length do not match',\n    });\n  }\n}\n\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\nexport async function lookupContextCache(\n  cacheManager: GoogleAICacheManager,\n  cacheKey: string,\n  maxPages = 100,\n  pageSize = 100\n): Promise<CachedContent | null> {\n  let currentPage = 0;\n  let pageToken: string | undefined;\n\n  try {\n    while (currentPage < maxPages) {\n      const { cachedContents, nextPageToken } = await cacheManager.list({\n        pageSize,\n        pageToken,\n      });\n\n      // Check for the cached content by key\n      const found = cachedContents?.find(\n        (content) => content.displayName === cacheKey\n      );\n\n      if (found) return found; // Return found content\n\n      // Stop if there's no next page\n      if (!nextPageToken) break;\n\n      pageToken = nextPageToken;\n      currentPage++;\n    }\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Unknown Network Error';\n\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: `Error looking up context cache: ${message}`,\n    });\n  }\n\n  return null; // Return null if not found or on error\n}\n\n/**\n * Extracts the cache configuration from the request if available.\n */\nexport const extractCacheConfig = (\n  request: GenerateRequest<z.ZodTypeAny>\n): {\n  cacheConfig: { ttlSeconds?: number } | boolean;\n  endOfCachedContents: number;\n} | null => {\n  const endOfCachedContents = findLastIndex<MessageData>(\n    request.messages,\n    (message) => !!message.metadata?.cache\n  );\n\n  return endOfCachedContents === -1\n    ? null\n    : {\n        endOfCachedContents,\n        cacheConfig: cacheConfigSchema.parse(\n          request.messages[endOfCachedContents].metadata?.cache\n        ),\n      };\n};\n\n/**\n * Validates context caching request for compatibility with model and request configurations.\n */\nexport function validateContextCacheRequest(\n  request: GenerateRequest<z.ZodTypeAny>,\n  modelVersion: string\n): boolean {\n  if (!modelVersion || !CONTEXT_CACHE_SUPPORTED_MODELS.includes(modelVersion)) {\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.modelVersion,\n    });\n  }\n  if (request.tools?.length)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.tools,\n    });\n  if (request.config?.codeExecution)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.codeExecution,\n    });\n\n  return true;\n}\n\n/**\n * Polyfill function for Array.prototype.findLastIndex for ES2015 compatibility.\n */\nexport function findLastIndex<T>(\n  array: T[],\n  callback: (element: T, index: number, array: T[]) => boolean\n): number {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (callback(array[i], i, array)) return i;\n  }\n  return -1;\n}\n\n/**\n * Calculates the TTL (Time-To-Live) for the cache based on cacheConfigDetails.\n * @param cacheConfig - The caching configuration details.\n * @returns The TTL in seconds.\n */\nexport function calculateTTL(cacheConfig: CacheConfigDetails): number {\n  if (cacheConfig.cacheConfig === true) {\n    return DEFAULT_TTL;\n  }\n  if (cacheConfig.cacheConfig === false) {\n    return 0;\n  }\n  return cacheConfig.cacheConfig.ttlSeconds || DEFAULT_TTL;\n}\n"],"names":["crypto"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/context-caching/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport {\n  GoogleAICacheManager,\n  type CachedContentCreateParams,\n} from '@google/generative-ai/server';\nimport { GenkitError, type GenerateRequest, type z } from 'genkit';\nimport { logger } from 'genkit/logging';\nimport type { CacheConfigDetails } from './types.js';\nimport {\n  calculateTTL,\n  generateCacheKey,\n  getContentForCache,\n  lookupContextCache,\n  validateContextCacheRequest,\n} from './utils.js';\n\n/**\n * Handles context caching and transforms the chatRequest\n * @param apiKey\n * @param request\n * @param chatRequest\n * @param modelVersion\n * @returns\n */\nexport async function handleContextCache(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): Promise<{ cache: CachedContent; newChatRequest: StartChatParams }> {\n  const cacheManager = new GoogleAICacheManager(apiKey);\n\n  const { cachedContent, chatRequest: newChatRequest } = getContentForCache(\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  cachedContent.model = modelVersion;\n  const cacheKey = generateCacheKey(cachedContent);\n\n  cachedContent.displayName = cacheKey;\n\n  let cache = await lookupContextCache(cacheManager, cacheKey);\n  logger.debug(`Cache hit: ${cache ? 'true' : 'false'}`);\n\n  if (!cache) {\n    try {\n      logger.debug('No cache found, creating one.');\n      const createParams: CachedContentCreateParams = {\n        ...cachedContent,\n        ttlSeconds: calculateTTL(cacheConfigDetails),\n      };\n      cache = await cacheManager.create(createParams);\n      logger.debug(`Created new cache entry with key: ${cacheKey}`);\n    } catch (cacheError) {\n      logger.error(\n        `Failed to create cache with key ${cacheKey}: ${cacheError}`\n      );\n      throw new GenkitError({\n        status: 'INTERNAL',\n        message: `Failed to create cache: ${cacheError}`,\n      });\n    }\n  }\n\n  if (!cache) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: 'Failed to use context cache feature',\n    });\n  }\n\n  return { cache, newChatRequest };\n}\n\n/**\n * Handles cache validation, creation, and usage, transforming the chatRequest if necessary.\n * @param apiKey The API key for accessing Google AI Gemini.\n * @param request The generate request passed to the model.\n * @param chatRequest The current chat request configuration.\n * @param modelVersion The version of the model being used.\n * @param cacheConfigDetails Configuration details for caching.\n * @returns A transformed chat request and cache data (if applicable).\n */\nexport async function handleCacheIfNeeded(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails | null\n): Promise<{ chatRequest: StartChatParams; cache: CachedContent | null }> {\n  // Skip caching if no configuration or if validation fails\n  if (\n    !cacheConfigDetails ||\n    !validateContextCacheRequest(request, modelVersion)\n  ) {\n    return { chatRequest, cache: null };\n  }\n\n  const { cache, newChatRequest } = await handleContextCache(\n    apiKey,\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  return { chatRequest: newChatRequest, cache };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,0BAAA,CAAA;AAAA,SAAA,yBAAA;IAAA,qBAAA,IAAA;IAAA,oBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAiBA,IAAA,gBAGO;AACP,IAAA,gBAA0D;AAC1D,IAAA,iBAAuB;AAEvB,IAAA,eAMO;AAUP,eAAsB,mBACpB,MAAA,EACA,OAAA,EACA,WAAA,EACA,YAAA,EACA,kBAAA,EACoE;IACpE,MAAM,eAAe,IAAI,cAAA,oBAAA,CAAqB,MAAM;IAEpD,MAAM,EAAE,aAAA,EAAe,aAAa,cAAA,CAAe,CAAA,GAAA,CAAA,GAAI,aAAA,kBAAA,EACrD,SACA,aACA,cACA;IAEF,cAAc,KAAA,GAAQ;IACtB,MAAM,WAAA,CAAA,GAAW,aAAA,gBAAA,EAAiB,aAAa;IAE/C,cAAc,WAAA,GAAc;IAE5B,IAAI,QAAQ,MAAA,CAAA,GAAM,aAAA,kBAAA,EAAmB,cAAc,QAAQ;IAC3D,eAAA,MAAA,CAAO,KAAA,CAAM,CAAA,WAAA,EAAc,QAAQ,SAAS,OAAO,EAAE;IAErD,IAAI,CAAC,OAAO;QACV,IAAI;YACF,eAAA,MAAA,CAAO,KAAA,CAAM,+BAA+B;YAC5C,MAAM,eAA0C;gBAC9C,GAAG,aAAA;gBACH,YAAA,CAAA,GAAY,aAAA,YAAA,EAAa,kBAAkB;YAC7C;YACA,QAAQ,MAAM,aAAa,MAAA,CAAO,YAAY;YAC9C,eAAA,MAAA,CAAO,KAAA,CAAM,CAAA,kCAAA,EAAqC,QAAQ,EAAE;QAC9D,EAAA,OAAS,YAAY;YACnB,eAAA,MAAA,CAAO,KAAA,CACL,CAAA,gCAAA,EAAmC,QAAQ,CAAA,EAAA,EAAK,UAAU,EAAA;YAE5D,MAAM,IAAI,cAAA,WAAA,CAAY;gBACpB,QAAQ;gBACR,SAAS,CAAA,wBAAA,EAA2B,UAAU,EAAA;YAChD,CAAC;QACH;IACF;IAEA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,cAAA,WAAA,CAAY;YACpB,QAAQ;YACR,SAAS;QACX,CAAC;IACH;IAEA,OAAO;QAAE;QAAO;IAAe;AACjC;AAWA,eAAsB,oBACpB,MAAA,EACA,OAAA,EACA,WAAA,EACA,YAAA,EACA,kBAAA,EACwE;IAExE,IACE,CAAC,sBACD,CAAA,CAAA,GAAC,aAAA,2BAAA,EAA4B,SAAS,YAAY,GAClD;QACA,OAAO;YAAE;YAAa,OAAO;QAAK;IACpC;IAEA,MAAM,EAAE,KAAA,EAAO,cAAA,CAAe,CAAA,GAAI,MAAM,mBACtC,QACA,SACA,aACA,cACA;IAEF,OAAO;QAAE,aAAa;QAAgB;IAAM;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/gemini.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FunctionCallingMode,\n  GenerateContentCandidate,\n  GoogleGenerativeAI,\n  SchemaType,\n  type FileDataPart,\n  type FunctionCallPart,\n  type FunctionDeclaration,\n  type FunctionResponsePart,\n  type GenerateContentCandidate as GeminiCandidate,\n  type Content as GeminiMessage,\n  type Part as GeminiPart,\n  type GenerateContentResponse,\n  type GenerationConfig,\n  type GenerativeModel,\n  type GoogleSearchRetrievalTool,\n  type InlineDataPart,\n  type RequestOptions,\n  type Schema,\n  type StartChatParams,\n  type Tool,\n  type ToolConfig,\n} from '@google/generative-ai';\nimport {\n  GENKIT_CLIENT_HEADER,\n  GenkitError,\n  z,\n  type Genkit,\n  type JSONSchema,\n} from 'genkit';\nimport {\n  GenerationCommonConfigDescriptions,\n  GenerationCommonConfigSchema,\n  getBasicUsageStats,\n  modelRef,\n  type CandidateData,\n  type MediaPart,\n  type MessageData,\n  type ModelAction,\n  type ModelInfo,\n  type ModelMiddleware,\n  type ModelReference,\n  type Part,\n  type ToolDefinitionSchema,\n  type ToolRequestPart,\n  type ToolResponsePart,\n} from 'genkit/model';\nimport { downloadRequestMedia } from 'genkit/model/middleware';\nimport { runInNewSpan } from 'genkit/tracing';\nimport { getApiKeyFromEnvVar } from './common';\nimport { handleCacheIfNeeded } from './context-caching';\nimport { extractCacheConfig } from './context-caching/utils';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/safety-settings#safety-filters.\n */\nconst SafetySettingsSchema = z.object({\n  category: z.enum([\n    'HARM_CATEGORY_UNSPECIFIED',\n    'HARM_CATEGORY_HATE_SPEECH',\n    'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n    'HARM_CATEGORY_HARASSMENT',\n    'HARM_CATEGORY_DANGEROUS_CONTENT',\n    'HARM_CATEGORY_CIVIC_INTEGRITY',\n  ]),\n  threshold: z.enum([\n    'BLOCK_LOW_AND_ABOVE',\n    'BLOCK_MEDIUM_AND_ABOVE',\n    'BLOCK_ONLY_HIGH',\n    'BLOCK_NONE',\n  ]),\n});\n\nconst VoiceConfigSchema = z\n  .object({\n    prebuiltVoiceConfig: z\n      .object({\n        // TODO: Make this an array of objects so we can also specify the description\n        // for each voiceName.\n        voiceName: z\n          .union([\n            z.enum([\n              'Zephyr',\n              'Puck',\n              'Charon',\n              'Kore',\n              'Fenrir',\n              'Leda',\n              'Orus',\n              'Aoede',\n              'Callirrhoe',\n              'Autonoe',\n              'Enceladus',\n              'Iapetus',\n              'Umbriel',\n              'Algieba',\n              'Despina',\n              'Erinome',\n              'Algenib',\n              'Rasalgethi',\n              'Laomedeia',\n              'Achernar',\n              'Alnilam',\n              'Schedar',\n              'Gacrux',\n              'Pulcherrima',\n              'Achird',\n              'Zubenelgenubi',\n              'Vindemiatrix',\n              'Sadachbia',\n              'Sadaltager',\n              'Sulafat',\n            ]),\n            // To allow any new string values\n            z.string(),\n          ])\n          .describe('Name of the preset voice to use')\n          .optional(),\n      })\n      .describe('Configuration for the prebuilt speaker to use')\n      .passthrough()\n      .optional(),\n  })\n  .describe('Configuration for the voice to use')\n  .passthrough();\n\nexport const GeminiConfigSchema = GenerationCommonConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0)\n    .max(2)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n  topP: z\n    .number()\n    .min(0)\n    .max(1)\n    .describe(\n      GenerationCommonConfigDescriptions.topP + ' The default value is 0.95.'\n    )\n    .optional(),\n  apiKey: z\n    .string()\n    .describe('Overrides the plugin-configured API key, if specified.')\n    .optional(),\n  safetySettings: z\n    .array(SafetySettingsSchema)\n    .describe(\n      'Adjust how likely you are to see responses that could be harmful. ' +\n        'Content is blocked based on the probability that it is harmful.'\n    )\n    .optional(),\n  codeExecution: z\n    .union([z.boolean(), z.object({}).strict()])\n    .describe('Enables the model to generate and run code.')\n    .optional(),\n  contextCache: z\n    .boolean()\n    .describe(\n      'Context caching allows you to save and reuse precomputed input ' +\n        'tokens that you wish to use repeatedly.'\n    )\n    .optional(),\n  functionCallingConfig: z\n    .object({\n      mode: z.enum(['MODE_UNSPECIFIED', 'AUTO', 'ANY', 'NONE']).optional(),\n      allowedFunctionNames: z.array(z.string()).optional(),\n    })\n    .describe(\n      'Controls how the model uses the provided tools (function declarations). ' +\n        'With AUTO (Default) mode, the model decides whether to generate a ' +\n        'natural language response or suggest a function call based on the ' +\n        'prompt and context. With ANY, the model is constrained to always ' +\n        'predict a function call and guarantee function schema adherence. ' +\n        'With NONE, the model is prohibited from making function calls.'\n    )\n    .optional(),\n  responseModalities: z\n    .array(z.enum(['TEXT', 'IMAGE', 'AUDIO']))\n    .describe(\n      'The modalities to be used in response. Only supported for ' +\n        \"'gemini-2.0-flash-exp' model at present.\"\n    )\n    .optional(),\n  googleSearchRetrieval: z\n    .union([z.boolean(), z.object({}).passthrough()])\n    .describe(\n      'Retrieve public web data for grounding, powered by Google Search.'\n    )\n    .optional(),\n}).passthrough();\nexport type GeminiConfig = z.infer<typeof GeminiConfigSchema>;\n\nexport const GeminiGemmaConfigSchema = GeminiConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0.0)\n    .max(1.0)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n}).passthrough();\n\nexport const GeminiTtsConfigSchema = GeminiConfigSchema.extend({\n  speechConfig: z\n    .object({\n      voiceConfig: VoiceConfigSchema.optional(),\n      multiSpeakerVoiceConfig: z\n        .object({\n          speakerVoiceConfigs: z\n            .array(\n              z\n                .object({\n                  speaker: z.string().describe('Name of the speaker to use'),\n                  voiceConfig: VoiceConfigSchema,\n                })\n                .describe(\n                  'Configuration for a single speaker in a multi speaker setup'\n                )\n                .passthrough()\n            )\n            .describe('Configuration for all the enabled speaker voices'),\n        })\n        .describe('Configuration for multi-speaker setup')\n        .passthrough()\n        .optional(),\n    })\n    .describe('Speech generation config')\n    .passthrough()\n    .optional(),\n}).passthrough();\n\nexport const gemini10Pro = modelRef({\n  name: 'googleai/gemini-1.0-pro',\n  info: {\n    label: 'Google AI - Gemini Pro',\n    versions: ['gemini-pro', 'gemini-1.0-pro-latest', 'gemini-1.0-pro-001'],\n    supports: {\n      multiturn: true,\n      media: false,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Pro = modelRef({\n  name: 'googleai/gemini-1.5-pro',\n  info: {\n    label: 'Google AI - Gemini 1.5 Pro',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: [\n      'gemini-1.5-pro-latest',\n      'gemini-1.5-pro-001',\n      'gemini-1.5-pro-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash = modelRef({\n  name: 'googleai/gemini-1.5-flash',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n      // @ts-ignore\n      contextCache: true,\n    },\n    versions: [\n      'gemini-1.5-flash-latest',\n      'gemini-1.5-flash-001',\n      'gemini-1.5-flash-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash8b = modelRef({\n  name: 'googleai/gemini-1.5-flash-8b',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: ['gemini-1.5-flash-8b-latest', 'gemini-1.5-flash-8b-001'],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20Flash = modelRef({\n  name: 'googleai/gemini-2.0-flash',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashExp = modelRef({\n  name: 'googleai/gemini-2.0-flash-exp',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash (Experimental)',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashLite = modelRef({\n  name: 'googleai/gemini-2.0-flash-lite',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash Lite',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20ProExp0205 = modelRef({\n  name: 'googleai/gemini-2.0-pro-exp-02-05',\n  info: {\n    label: 'Google AI - Gemini 2.0 Pro Exp 02-05',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreview0417 = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-04-17',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview 04-17',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25ProExp0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-exp-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Exp 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreview0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25Pro = modelRef({\n  name: 'googleai/gemini-2.5-pro',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25Flash = modelRef({\n  name: 'googleai/gemini-2.5-flash',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemma312bit = modelRef({\n  name: 'googleai/gemma-3-12b-it',\n  info: {\n    label: 'Google AI - Gemma 3 12B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma31bit = modelRef({\n  name: 'googleai/gemma-3-1b-it',\n  info: {\n    label: 'Google AI - Gemma 3 1B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma327bit = modelRef({\n  name: 'googleai/gemma-3-27b-it',\n  info: {\n    label: 'Google AI - Gemma 3 27B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma34bit = modelRef({\n  name: 'googleai/gemma-3-4b-it',\n  info: {\n    label: 'Google AI - Gemma 3 4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma3ne4bit = modelRef({\n  name: 'googleai/gemma-3n-e4b-it',\n  info: {\n    label: 'Google AI - Gemma 3n E4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const SUPPORTED_GEMINI_MODELS = {\n  'gemini-1.5-pro': gemini15Pro,\n  'gemini-1.5-flash': gemini15Flash,\n  'gemini-1.5-flash-8b': gemini15Flash8b,\n  'gemini-2.0-pro-exp-02-05': gemini20ProExp0205,\n  'gemini-2.0-flash': gemini20Flash,\n  'gemini-2.0-flash-lite': gemini20FlashLite,\n  'gemini-2.0-flash-exp': gemini20FlashExp,\n  'gemini-2.5-pro-exp-03-25': gemini25ProExp0325,\n  'gemini-2.5-pro-preview-03-25': gemini25ProPreview0325,\n  'gemini-2.5-pro-preview-tts': gemini25ProPreviewTts,\n  'gemini-2.5-flash-preview-04-17': gemini25FlashPreview0417,\n  'gemini-2.5-flash-preview-tts': gemini25FlashPreviewTts,\n  'gemini-2.5-flash': gemini25Flash,\n  'gemini-2.5-pro': gemini25Pro,\n  'gemma-3-12b-it': gemma312bit,\n  'gemma-3-1b-it': gemma31bit,\n  'gemma-3-27b-it': gemma327bit,\n  'gemma-3-4b-it': gemma34bit,\n  'gemma-3n-e4b-it': gemma3ne4bit,\n};\n\nexport const GENERIC_GEMINI_MODEL = modelRef({\n  name: 'googleai/gemini',\n  configSchema: GeminiConfigSchema,\n  info: {\n    label: 'Google Gemini',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n});\n\nfunction longestMatchingPrefix(version: string, potentialMatches: string[]) {\n  return potentialMatches\n    .filter((p) => version.startsWith(p))\n    .reduce(\n      (longest, current) =>\n        current.length > longest.length ? current : longest,\n      ''\n    );\n}\n\n/**\n * Known model names, to allow code completion for convenience. Allows other model names.\n */\nexport type GeminiVersionString =\n  | keyof typeof SUPPORTED_GEMINI_MODELS\n  | (string & {});\n\n/**\n * Returns a reference to a model that can be used in generate calls.\n *\n * ```js\n * await ai.generate({\n *   prompt: 'hi',\n *   model: gemini('gemini-1.5-flash')\n * });\n * ```\n */\nexport function gemini(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const nearestModel = nearestGeminiModelRef(version);\n  return modelRef({\n    name: `googleai/${version}`,\n    config: options,\n    configSchema: GeminiConfigSchema,\n    info: {\n      ...nearestModel.info,\n      // If exact suffix match for a known model, use its label, otherwise create a new label\n      label: nearestModel.name.endsWith(version)\n        ? nearestModel.info?.label\n        : `Google AI - ${version}`,\n    },\n  });\n}\n\nfunction nearestGeminiModelRef(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const matchingKey = longestMatchingPrefix(\n    version,\n    Object.keys(SUPPORTED_GEMINI_MODELS)\n  );\n  if (matchingKey) {\n    return SUPPORTED_GEMINI_MODELS[matchingKey].withConfig({\n      ...options,\n      version,\n    });\n  }\n\n  return GENERIC_GEMINI_MODEL.withConfig({ ...options, version });\n}\n\nfunction toGeminiRole(\n  role: MessageData['role'],\n  model?: ModelReference<z.ZodTypeAny>\n): string {\n  switch (role) {\n    case 'user':\n      return 'user';\n    case 'model':\n      return 'model';\n    case 'system':\n      if (model?.info?.supports?.systemRole) {\n        // We should have already pulled out the supported system messages,\n        // anything remaining is unsupported; throw an error.\n        throw new Error(\n          'system role is only supported for a single message in the first position'\n        );\n      } else {\n        throw new Error('system role is not supported');\n      }\n    case 'tool':\n      return 'function';\n    default:\n      return 'user';\n  }\n}\n\nfunction convertSchemaProperty(property) {\n  if (!property || !property.type) {\n    return undefined;\n  }\n  const baseSchema = {} as Schema;\n  if (property.description) {\n    baseSchema.description = property.description;\n  }\n  if (property.enum) {\n    baseSchema.type = SchemaType.STRING;\n    // supported in API but not in SDK\n    (baseSchema as any).enum = property.enum;\n  }\n  if (property.nullable) {\n    baseSchema.nullable = property.nullable;\n  }\n  let propertyType;\n  // nullable schema can ALSO be defined as, for example, type=['string','null']\n  if (Array.isArray(property.type)) {\n    const types = property.type as string[];\n    if (types.includes('null')) {\n      baseSchema.nullable = true;\n    }\n    // grab the type that's not `null`\n    propertyType = types.find((t) => t !== 'null');\n  } else {\n    propertyType = property.type;\n  }\n  if (propertyType === 'object') {\n    const nestedProperties = {};\n    Object.keys(property.properties ?? {}).forEach((key) => {\n      nestedProperties[key] = convertSchemaProperty(property.properties[key]);\n    });\n    return {\n      ...baseSchema,\n      type: SchemaType.OBJECT,\n      properties: nestedProperties,\n      required: property.required,\n    };\n  } else if (propertyType === 'array') {\n    return {\n      ...baseSchema,\n      type: SchemaType.ARRAY,\n      items: convertSchemaProperty(property.items),\n    };\n  } else {\n    const schemaType = SchemaType[propertyType.toUpperCase()] as SchemaType;\n    if (!schemaType) {\n      throw new GenkitError({\n        status: 'INVALID_ARGUMENT',\n        message: `Unsupported property type ${propertyType.toUpperCase()}`,\n      });\n    }\n    return {\n      ...baseSchema,\n      type: schemaType,\n    };\n  }\n}\n\n/** @hidden */\nexport function toGeminiTool(\n  tool: z.infer<typeof ToolDefinitionSchema>\n): FunctionDeclaration {\n  const declaration: FunctionDeclaration = {\n    name: tool.name.replace(/\\//g, '__'), // Gemini throws on '/' in tool name\n    description: tool.description,\n    parameters: convertSchemaProperty(tool.inputSchema),\n  };\n  return declaration;\n}\n\nfunction toInlineData(part: MediaPart): InlineDataPart {\n  const dataUrl = part.media.url;\n  const b64Data = dataUrl.substring(dataUrl.indexOf(',')! + 1);\n  const contentType =\n    part.media.contentType ||\n    dataUrl.substring(dataUrl.indexOf(':')! + 1, dataUrl.indexOf(';'));\n  return { inlineData: { mimeType: contentType, data: b64Data } };\n}\n\nfunction toFileData(part: MediaPart): FileDataPart {\n  if (!part.media.contentType)\n    throw new Error(\n      'Must supply a `contentType` when sending File URIs to Gemini.'\n    );\n  return {\n    fileData: { mimeType: part.media.contentType, fileUri: part.media.url },\n  };\n}\n\nfunction fromInlineData(inlinePart: InlineDataPart): MediaPart {\n  // Check if the required properties exist\n  if (\n    !inlinePart.inlineData ||\n    !inlinePart.inlineData.hasOwnProperty('mimeType') ||\n    !inlinePart.inlineData.hasOwnProperty('data')\n  ) {\n    throw new Error('Invalid InlineDataPart: missing required properties');\n  }\n  const { mimeType, data } = inlinePart.inlineData;\n  // Combine data and mimeType into a data URL\n  const dataUrl = `data:${mimeType};base64,${data}`;\n  return {\n    media: {\n      url: dataUrl,\n      contentType: mimeType,\n    },\n  };\n}\n\nfunction toFunctionCall(part: ToolRequestPart): FunctionCallPart {\n  if (!part?.toolRequest?.input) {\n    throw Error('Invalid ToolRequestPart: input was missing.');\n  }\n  return {\n    functionCall: {\n      name: part.toolRequest.name,\n      args: part.toolRequest.input,\n    },\n  };\n}\n\nfunction fromFunctionCall(\n  part: FunctionCallPart,\n  ref: string\n): ToolRequestPart {\n  if (!part.functionCall) {\n    throw Error('Invalid FunctionCallPart');\n  }\n  return {\n    toolRequest: {\n      name: part.functionCall.name,\n      input: part.functionCall.args,\n      ref,\n    },\n  };\n}\n\nfunction toFunctionResponse(part: ToolResponsePart): FunctionResponsePart {\n  if (!part?.toolResponse?.output) {\n    throw Error('Invalid ToolResponsePart: output was missing.');\n  }\n  return {\n    functionResponse: {\n      name: part.toolResponse.name,\n      response: {\n        name: part.toolResponse.name,\n        content: part.toolResponse.output,\n      },\n    },\n  };\n}\n\nfunction fromFunctionResponse(part: FunctionResponsePart): ToolResponsePart {\n  if (!part.functionResponse) {\n    throw new Error('Invalid FunctionResponsePart.');\n  }\n  return {\n    toolResponse: {\n      name: part.functionResponse.name.replace(/__/g, '/'), // restore slashes\n      output: part.functionResponse.response,\n    },\n  };\n}\n\nfunction fromExecutableCode(part: GeminiPart): Part {\n  if (!part.executableCode) {\n    throw new Error('Invalid GeminiPart: missing executableCode');\n  }\n  return {\n    custom: {\n      executableCode: {\n        language: part.executableCode.language,\n        code: part.executableCode.code,\n      },\n    },\n  };\n}\n\nfunction fromCodeExecutionResult(part: GeminiPart): Part {\n  if (!part.codeExecutionResult) {\n    throw new Error('Invalid GeminiPart: missing codeExecutionResult');\n  }\n  return {\n    custom: {\n      codeExecutionResult: {\n        outcome: part.codeExecutionResult.outcome,\n        output: part.codeExecutionResult.output,\n      },\n    },\n  };\n}\n\nfunction fromThought(part: {\n  thought: boolean;\n  text?: string;\n  thoughtSignature?: string;\n}): Part {\n  return {\n    reasoning: part.text || '',\n    metadata: { thoughtSignature: (part as any).thoughtSignature },\n  };\n}\n\nfunction toCustomPart(part: Part): GeminiPart {\n  if (!part.custom) {\n    throw new Error('Invalid GeminiPart: missing custom');\n  }\n  if (part.custom.codeExecutionResult) {\n    return { codeExecutionResult: part.custom.codeExecutionResult };\n  }\n  if (part.custom.executableCode) {\n    return { executableCode: part.custom.executableCode };\n  }\n  throw new Error('Unsupported Custom Part type');\n}\n\nfunction toThought(part: Part) {\n  const outPart: any = { thought: true };\n  if (part.metadata?.thoughtSignature)\n    outPart.thoughtSignature = part.metadata.thoughtSignature;\n  if (part.reasoning?.length) outPart.text = part.reasoning;\n  return outPart;\n}\n\nfunction toGeminiPart(part: Part): GeminiPart {\n  if (part.text !== undefined) return { text: part.text || ' ' };\n  if (part.media) {\n    if (part.media.url.startsWith('data:')) return toInlineData(part);\n    return toFileData(part);\n  }\n  if (part.toolRequest) return toFunctionCall(part);\n  if (part.toolResponse) return toFunctionResponse(part);\n  if (part.custom) return toCustomPart(part);\n  if (typeof part.reasoning === 'string') return toThought(part);\n  throw new Error('Unsupported Part type' + JSON.stringify(part));\n}\n\nfunction fromGeminiPart(\n  part: GeminiPart,\n  jsonMode: boolean,\n  ref: string\n): Part {\n  if ('thought' in part) return fromThought(part as any);\n  if (typeof part.text === 'string') return { text: part.text };\n  if (part.inlineData) return fromInlineData(part);\n  if (part.functionCall) return fromFunctionCall(part, ref);\n  if (part.functionResponse) return fromFunctionResponse(part);\n  if (part.executableCode) return fromExecutableCode(part);\n  if (part.codeExecutionResult) return fromCodeExecutionResult(part);\n  throw new Error('Unsupported GeminiPart type: ' + JSON.stringify(part));\n}\n\nexport function toGeminiMessage(\n  message: MessageData,\n  model?: ModelReference<z.ZodTypeAny>\n): GeminiMessage {\n  let sortedParts = message.content;\n  if (message.role === 'tool') {\n    sortedParts = [...message.content].sort((a, b) => {\n      const aRef = a.toolResponse?.ref;\n      const bRef = b.toolResponse?.ref;\n      if (!aRef && !bRef) return 0;\n      if (!aRef) return 1;\n      if (!bRef) return -1;\n      return Number.parseInt(aRef, 10) - Number.parseInt(bRef, 10);\n    });\n  }\n  return {\n    role: toGeminiRole(message.role, model),\n    parts: sortedParts.map(toGeminiPart),\n  };\n}\n\nexport function toGeminiSystemInstruction(message: MessageData): GeminiMessage {\n  return {\n    role: 'user',\n    parts: message.content.map(toGeminiPart),\n  };\n}\n\nfunction fromGeminiFinishReason(\n  reason: GeminiCandidate['finishReason']\n): CandidateData['finishReason'] {\n  if (!reason) return 'unknown';\n  switch (reason) {\n    case 'STOP':\n      return 'stop';\n    case 'MAX_TOKENS':\n      return 'length';\n    case 'SAFETY': // blocked for safety\n    case 'RECITATION': // blocked for reciting training data\n      return 'blocked';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function fromGeminiCandidate(\n  candidate: GeminiCandidate,\n  jsonMode = false\n): CandidateData {\n  const parts = candidate.content?.parts || [];\n  const genkitCandidate: CandidateData = {\n    index: candidate.index || 0,\n    message: {\n      role: 'model',\n      content: parts.map((part, index) =>\n        fromGeminiPart(part, jsonMode, index.toString())\n      ),\n    },\n    finishReason: fromGeminiFinishReason(candidate.finishReason),\n    finishMessage: candidate.finishMessage,\n    custom: {\n      safetyRatings: candidate.safetyRatings,\n      citationMetadata: candidate.citationMetadata,\n    },\n  };\n\n  return genkitCandidate;\n}\nexport function cleanSchema(schema: JSONSchema): JSONSchema {\n  const out = structuredClone(schema);\n  for (const key in out) {\n    if (key === '$schema' || key === 'additionalProperties') {\n      delete out[key];\n      continue;\n    }\n    if (typeof out[key] === 'object') {\n      out[key] = cleanSchema(out[key]);\n    }\n    // Zod nullish() and picoschema optional fields will produce type `[\"string\", \"null\"]`\n    // which is not supported by the model API. Convert them to just `\"string\"`.\n    if (key === 'type' && Array.isArray(out[key])) {\n      // find the first that's not `null`.\n      out[key] = out[key].find((t) => t !== 'null');\n    }\n  }\n  return out;\n}\n\n/**\n * Defines a new GoogleAI model.\n */\nexport function defineGoogleAIModel({\n  ai,\n  name,\n  apiKey: apiKeyOption,\n  apiVersion,\n  baseUrl,\n  info,\n  defaultConfig,\n  debugTraces,\n}: {\n  ai: Genkit;\n  name: string;\n  apiKey?: string | false;\n  apiVersion?: string;\n  baseUrl?: string;\n  info?: ModelInfo;\n  defaultConfig?: GeminiConfig;\n  debugTraces?: boolean;\n}): ModelAction {\n  let apiKey: string | undefined;\n  // DO NOT infer API key from environment variable if plugin was configured with `{apiKey: false}`.\n  if (apiKeyOption !== false) {\n    apiKey = apiKeyOption || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n\n  const apiModelName = name.startsWith('googleai/')\n    ? name.substring('googleai/'.length)\n    : name;\n\n  const model: ModelReference<z.ZodTypeAny> =\n    SUPPORTED_GEMINI_MODELS[apiModelName] ??\n    modelRef({\n      name: `googleai/${apiModelName}`,\n      info: {\n        label: `Google AI - ${apiModelName}`,\n        supports: {\n          multiturn: true,\n          media: true,\n          tools: true,\n          systemRole: true,\n          output: ['text', 'json'],\n        },\n        ...info,\n      },\n      configSchema: GeminiConfigSchema,\n    });\n\n  const middleware: ModelMiddleware[] = [];\n  if (model.info?.supports?.media) {\n    // the gemini api doesn't support downloading media from http(s)\n    middleware.push(\n      downloadRequestMedia({\n        maxBytes: 1024 * 1024 * 10,\n        // don't downlaod files that have been uploaded using the Files API\n        filter: (part) => {\n          try {\n            const url = new URL(part.media.url);\n            if (\n              // Gemini can handle these URLs\n              [\n                'generativelanguage.googleapis.com',\n                'www.youtube.com',\n                'youtube.com',\n                'youtu.be',\n              ].includes(url.hostname)\n            )\n              return false;\n          } catch {}\n          return true;\n        },\n      })\n    );\n  }\n\n  return ai.defineModel(\n    {\n      apiVersion: 'v2',\n      name: model.name,\n      ...model.info,\n      configSchema: model.configSchema,\n      use: middleware,\n    },\n    async (request, { streamingRequested, sendChunk, abortSignal }) => {\n      const options: RequestOptions = { apiClient: GENKIT_CLIENT_HEADER };\n      if (apiVersion) {\n        options.apiVersion = apiVersion;\n      }\n      if (apiVersion) {\n        options.baseUrl = baseUrl;\n      }\n      const requestConfig: z.infer<typeof GeminiConfigSchema> = {\n        ...defaultConfig,\n        ...request.config,\n      };\n\n      // Make a copy so that modifying the request will not produce side-effects\n      const messages = [...request.messages];\n      if (messages.length === 0) throw new Error('No messages provided.');\n\n      // Gemini does not support messages with role system and instead expects\n      // systemInstructions to be provided as a separate input. The first\n      // message detected with role=system will be used for systemInstructions.\n      let systemInstruction: GeminiMessage | undefined = undefined;\n      if (model.info?.supports?.systemRole) {\n        const systemMessage = messages.find((m) => m.role === 'system');\n        if (systemMessage) {\n          messages.splice(messages.indexOf(systemMessage), 1);\n          systemInstruction = toGeminiSystemInstruction(systemMessage);\n        }\n      }\n\n      const tools: Tool[] = [];\n      if (request.tools?.length) {\n        tools.push({\n          functionDeclarations: request.tools.map(toGeminiTool),\n        });\n      }\n\n      const {\n        apiKey: apiKeyFromConfig,\n        safetySettings: safetySettingsFromConfig,\n        codeExecution: codeExecutionFromConfig,\n        version: versionFromConfig,\n        functionCallingConfig,\n        googleSearchRetrieval,\n        tools: toolsFromConfig,\n        ...restOfConfigOptions\n      } = requestConfig;\n\n      if (codeExecutionFromConfig) {\n        tools.push({\n          codeExecution:\n            request.config.codeExecution === true\n              ? {}\n              : request.config.codeExecution,\n        });\n      }\n\n      if (toolsFromConfig) {\n        tools.push(...(toolsFromConfig as any[]));\n      }\n\n      if (googleSearchRetrieval) {\n        tools.push({\n          googleSearch:\n            googleSearchRetrieval === true ? {} : googleSearchRetrieval,\n        } as GoogleSearchRetrievalTool);\n      }\n\n      let toolConfig: ToolConfig | undefined;\n      if (functionCallingConfig) {\n        toolConfig = {\n          functionCallingConfig: {\n            allowedFunctionNames: functionCallingConfig.allowedFunctionNames,\n            mode: toFunctionModeEnum(functionCallingConfig.mode),\n          },\n        };\n      } else if (request.toolChoice) {\n        toolConfig = {\n          functionCallingConfig: {\n            mode: toGeminiFunctionModeEnum(request.toolChoice),\n          },\n        };\n      }\n\n      // Cannot use tools with JSON mode\n      const jsonMode =\n        request.output?.format === 'json' ||\n        (request.output?.contentType === 'application/json' &&\n          tools.length === 0);\n\n      const generationConfig: GenerationConfig = {\n        ...restOfConfigOptions,\n        candidateCount: request.candidates || undefined,\n        responseMimeType: jsonMode ? 'application/json' : undefined,\n      };\n\n      if (request.output?.constrained && jsonMode) {\n        generationConfig.responseSchema = cleanSchema(request.output.schema);\n      }\n\n      const msg = toGeminiMessage(messages[messages.length - 1], model);\n\n      const fromJSONModeScopedGeminiCandidate = (\n        candidate: GeminiCandidate\n      ) => {\n        return fromGeminiCandidate(candidate, jsonMode);\n      };\n\n      const chatRequest: StartChatParams = {\n        systemInstruction,\n        generationConfig,\n        tools: tools.length ? tools : undefined,\n        toolConfig,\n        history: messages\n          .slice(0, -1)\n          .map((message) => toGeminiMessage(message, model)),\n        safetySettings: safetySettingsFromConfig,\n      } as StartChatParams;\n      const modelVersion = (versionFromConfig ||\n        model.version ||\n        apiModelName) as string;\n      const cacheConfigDetails = extractCacheConfig(request);\n\n      const { chatRequest: updatedChatRequest, cache } =\n        await handleCacheIfNeeded(\n          apiKey!,\n          request,\n          chatRequest,\n          modelVersion,\n          cacheConfigDetails\n        );\n\n      if (!apiKeyFromConfig && !apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(apiKeyFromConfig || apiKey!);\n      let genModel: GenerativeModel;\n\n      if (cache) {\n        genModel = client.getGenerativeModelFromCachedContent(\n          cache,\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      } else {\n        genModel = client.getGenerativeModel(\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      }\n\n      const callGemini = async () => {\n        let response: GenerateContentResponse;\n\n        if (streamingRequested) {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessageStream(msg.parts, { ...options, signal: abortSignal });\n\n          const chunks = [] as GenerateContentResponse[];\n          for await (const item of result.stream) {\n            chunks.push(item as GenerateContentResponse);\n            (item as GenerateContentResponse).candidates?.forEach(\n              (candidate) => {\n                const c = fromJSONModeScopedGeminiCandidate(candidate);\n                sendChunk({\n                  index: c.index,\n                  content: c.message.content,\n                });\n              }\n            );\n          }\n\n          response = aggregateResponses(chunks);\n        } else {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessage(msg.parts, { ...options, signal: abortSignal });\n\n          response = result.response;\n        }\n\n        const candidates = response.candidates || [];\n        if (response.candidates?.['undefined']) {\n          candidates.push(response.candidates['undefined']);\n        }\n        if (!candidates.length) {\n          throw new GenkitError({\n            status: 'FAILED_PRECONDITION',\n            message: 'No valid candidates returned.',\n          });\n        }\n\n        const candidateData =\n          candidates.map(fromJSONModeScopedGeminiCandidate) || [];\n\n        return {\n          candidates: candidateData,\n          custom: response,\n          usage: {\n            ...getBasicUsageStats(request.messages, candidateData),\n            inputTokens: response.usageMetadata?.promptTokenCount,\n            outputTokens: response.usageMetadata?.candidatesTokenCount,\n            totalTokens: response.usageMetadata?.totalTokenCount,\n            cachedContentTokens:\n              response.usageMetadata?.cachedContentTokenCount,\n          },\n        };\n      };\n\n      // If debugTraces is enable, we wrap the actual model call with a span, add raw\n      // API params as for input.\n      return debugTraces\n        ? await runInNewSpan(\n            ai.registry,\n            {\n              metadata: {\n                name: streamingRequested ? 'sendMessageStream' : 'sendMessage',\n              },\n            },\n            async (metadata) => {\n              metadata.input = {\n                sdk: '@google/generative-ai',\n                cache: cache,\n                model: genModel.model,\n                chatOptions: updatedChatRequest,\n                parts: msg.parts,\n                options,\n              };\n              const response = await callGemini();\n              metadata.output = response.custom;\n              return response;\n            }\n          )\n        : await callGemini();\n    }\n  );\n}\n\n/** Converts mode from the config, which follows Gemini naming convention. */\nfunction toFunctionModeEnum(\n  configEnum: string | undefined\n): FunctionCallingMode | undefined {\n  if (configEnum === undefined) {\n    return undefined;\n  }\n  switch (configEnum) {\n    case 'MODE_UNSPECIFIED': {\n      return FunctionCallingMode.MODE_UNSPECIFIED;\n    }\n    case 'ANY': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'AUTO': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'NONE': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${configEnum}`);\n  }\n}\n\n/** Converts mode from genkit tool choice. */\nfunction toGeminiFunctionModeEnum(\n  genkitMode: 'auto' | 'required' | 'none'\n): FunctionCallingMode | undefined {\n  if (genkitMode === undefined) {\n    return undefined;\n  }\n  switch (genkitMode) {\n    case 'required': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'auto': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'none': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${genkitMode}`);\n  }\n}\n\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single GenerateContentResponse.\n *\n * This code is copy-pasted from https://github.com/google-gemini/deprecated-generative-ai-js/blob/8b14949a5e8f1f3dfc35c394ebf5b19e68f92a22/src/requests/stream-reader.ts#L153\n * with a small (but critical) bug fix.\n */\nexport function aggregateResponses(\n  responses: GenerateContentResponse[]\n): GenerateContentResponse {\n  const lastResponse = responses[responses.length - 1];\n  const aggregatedResponse: GenerateContentResponse = {\n    promptFeedback: lastResponse?.promptFeedback,\n  };\n  for (const response of responses) {\n    if (response.candidates) {\n      let candidateIndex = 0;\n      for (const candidate of response.candidates) {\n        if (!aggregatedResponse.candidates) {\n          aggregatedResponse.candidates = [];\n        }\n        if (!aggregatedResponse.candidates[candidateIndex]) {\n          aggregatedResponse.candidates[candidateIndex] = {\n            index: candidateIndex,\n          } as GenerateContentCandidate;\n        }\n        // Keep overwriting, the last one will be final\n        aggregatedResponse.candidates[candidateIndex].citationMetadata =\n          candidate.citationMetadata;\n        aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n          candidate.groundingMetadata;\n        aggregatedResponse.candidates[candidateIndex].finishReason =\n          candidate.finishReason;\n        aggregatedResponse.candidates[candidateIndex].finishMessage =\n          candidate.finishMessage;\n        aggregatedResponse.candidates[candidateIndex].safetyRatings =\n          candidate.safetyRatings;\n\n        /**\n         * Candidates should always have content and parts, but this handles\n         * possible malformed responses.\n         */\n        if (candidate.content && candidate.content.parts) {\n          if (!aggregatedResponse.candidates[candidateIndex].content) {\n            aggregatedResponse.candidates[candidateIndex].content = {\n              role: candidate.content.role || 'user',\n              parts: [],\n            };\n          }\n          for (const part of candidate.content.parts) {\n            const newPart: Partial<GeminiPart> = {};\n            if (part.text) {\n              newPart.text = part.text;\n            }\n            if (part.functionCall) {\n              newPart.functionCall = part.functionCall;\n            }\n            if (part.executableCode) {\n              newPart.executableCode = part.executableCode;\n            }\n            if (part.codeExecutionResult) {\n              newPart.codeExecutionResult = part.codeExecutionResult;\n            }\n            if (Object.keys(newPart).length === 0) {\n              newPart.text = '';\n            }\n            aggregatedResponse.candidates[candidateIndex].content.parts.push(\n              newPart as GeminiPart\n            );\n          }\n        }\n      }\n      candidateIndex++;\n    }\n    if (response.usageMetadata) {\n      aggregatedResponse.usageMetadata = response.usageMetadata;\n    }\n  }\n  return aggregatedResponse;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1835, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/predict.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GENKIT_CLIENT_HEADER } from 'genkit';\n\nexport type PredictMethod = 'predict' | 'predictLongRunning';\n\nexport interface Operation {\n  name: string;\n  done?: boolean;\n  error?: {\n    message: string;\n  };\n  response?: {\n    generateVideoResponse: {\n      generatedSamples: { video: { uri: string } }[];\n    };\n  };\n}\n\nfunction predictEndpoint(options: {\n  apiVersion: string;\n  model: string;\n  apiKey: string;\n  method: PredictMethod;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/models/${options.model}:${options.method}?key=${options.apiKey}`;\n}\n\nfunction opCheckEndpoint(options: {\n  apiVersion: string;\n  operation: string;\n  apiKey: string;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/${options.operation}?key=${options.apiKey}`;\n}\n\nexport type PredictClient<I = unknown, R = unknown, P = unknown> = (\n  instances: I[],\n  parameters: P\n) => Promise<R>;\n\nexport function predictModel<I = unknown, R = unknown, P = unknown>(\n  model: string,\n  apiKey: string,\n  method: PredictMethod\n): PredictClient<I, R, P> {\n  return async (instances: I[], parameters: P): Promise<R> => {\n    const fetch = (await import('node-fetch')).default;\n\n    const req = {\n      instances,\n      parameters,\n    };\n\n    const response = await fetch(\n      predictEndpoint({\n        model,\n        apiVersion: 'v1beta',\n        apiKey,\n        method,\n      }),\n      {\n        method: 'POST',\n        body: JSON.stringify(req),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Client': GENKIT_CLIENT_HEADER,\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Error from Gemini AI predict: HTTP ${\n          response.status\n        }: ${await response.text()}`\n      );\n    }\n\n    return (await response.json()) as R;\n  };\n}\n\nexport async function checkOp(\n  operation: string,\n  apiKey: string\n): Promise<Operation> {\n  const fetch = (await import('node-fetch')).default;\n\n  const response = await fetch(\n    opCheckEndpoint({\n      apiVersion: 'v1beta',\n      operation,\n      apiKey,\n    }),\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Client': GENKIT_CLIENT_HEADER,\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      `Error from operation API: HTTP ${\n        response.status\n      }: ${await response.text()}`\n    );\n  }\n\n  return (await response.json()) as Operation;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,CAAA;AAAA,SAAA,iBAAA;IAAA,SAAA,IAAA;IAAA,cAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,gBAAqC;AAiBrC,SAAS,gBAAgB,OAAA,EAKtB;IACD,OAAO,CAAA,0CAAA,EAA6C,QAAQ,UAAU,CAAA,QAAA,EAAW,QAAQ,KAAK,CAAA,CAAA,EAAI,QAAQ,MAAM,CAAA,KAAA,EAAQ,QAAQ,MAAM,EAAA;AACxI;AAEA,SAAS,gBAAgB,OAAA,EAItB;IACD,OAAO,CAAA,0CAAA,EAA6C,QAAQ,UAAU,CAAA,CAAA,EAAI,QAAQ,SAAS,CAAA,KAAA,EAAQ,QAAQ,MAAM,EAAA;AACnH;AAOO,SAAS,aACd,KAAA,EACA,MAAA,EACA,MAAA,EACwB;IACxB,OAAO,OAAO,WAAgB,eAA8B;QAC1D,MAAM,QAAA,CAAS,MAAM,OAAO,YAAY,uHAAA,EAAG,OAAA;QAE3C,MAAM,MAAM;YACV;YACA;QACF;QAEA,MAAM,WAAW,MAAM,MACrB,gBAAgB;YACd;YACA,YAAY;YACZ;YACA;QACF,CAAC,GACD;YACE,QAAQ;YACR,MAAM,KAAK,SAAA,CAAU,GAAG;YACxB,SAAS;gBACP,gBAAgB;gBAChB,qBAAqB,cAAA,oBAAA;YACvB;QACF;QAGF,IAAI,CAAC,SAAS,EAAA,EAAI;YAChB,MAAM,IAAI,MACR,CAAA,mCAAA,EACE,SAAS,MACX,CAAA,EAAA,EAAK,MAAM,SAAS,IAAA,CAAK,CAAC,EAAA;QAE9B;QAEA,OAAQ,MAAM,SAAS,IAAA,CAAK;IAC9B;AACF;AAEA,eAAsB,QACpB,SAAA,EACA,MAAA,EACoB;IACpB,MAAM,QAAA,CAAS,MAAM,OAAO,YAAY,uHAAA,EAAG,OAAA;IAE3C,MAAM,WAAW,MAAM,MACrB,gBAAgB;QACd,YAAY;QACZ;QACA;IACF,CAAC,GACD;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,qBAAqB,cAAA,oBAAA;QACvB;IACF;IAGF,IAAI,CAAC,SAAS,EAAA,EAAI;QAChB,MAAM,IAAI,MACR,CAAA,+BAAA,EACE,SAAS,MACX,CAAA,EAAA,EAAK,MAAM,SAAS,IAAA,CAAK,CAAC,EAAA;IAE9B;IAEA,OAAQ,MAAM,SAAS,IAAA,CAAK;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1935, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/imagen.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenkitError, MessageData, z, type Genkit } from 'genkit';\nimport {\n  getBasicUsageStats,\n  modelRef,\n  type GenerateRequest,\n  type ModelAction,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { predictModel } from './predict.js';\n\nexport type KNOWN_IMAGEN_MODELS = 'imagen-3.0-generate-002';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/image-generation#imagen-model\n */\nexport const ImagenConfigSchema = z\n  .object({\n    numberOfImages: z\n      .number()\n      .describe(\n        'The number of images to generate, from 1 to 4 (inclusive). The default is 1.'\n      )\n      .optional(),\n    aspectRatio: z\n      .enum(['1:1', '9:16', '16:9', '3:4', '4:3'])\n      .describe('Desired aspect ratio of the output image.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n  })\n  .passthrough();\n\ninterface ImagenParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof ImagenConfigSchema>\n): ImagenParameters {\n  const out = {\n    sampleCount: request.config?.numberOfImages ?? 1,\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\nfunction extractBaseImage(request: GenerateRequest): string | undefined {\n  return request.messages\n    .at(-1)\n    ?.content.find((p) => !!p.media)\n    ?.media?.url.split(',')[1];\n}\n\ninterface ImagenPrediction {\n  predictions: { bytesBase64Encoded: string; mimeType: string }[];\n}\n\ninterface ImagenInstance {\n  prompt: string;\n  image?: { bytesBase64Encoded: string };\n  mask?: { image?: { bytesBase64Encoded: string } };\n}\n\nexport const GENERIC_IMAGEN_INFO = {\n  label: `Google AI - Generic Imagen`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n  },\n} as ModelInfo;\n\nexport function defineImagenModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): ModelAction {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_IMAGEN_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: ImagenConfigSchema,\n  });\n\n  return ai.defineModel(\n    {\n      name: modelName,\n      ...model.info,\n      configSchema: ImagenConfigSchema,\n    },\n    async (request) => {\n      const instance: ImagenInstance = {\n        prompt: extractText(request),\n      };\n      const baseImage = extractBaseImage(request);\n      if (baseImage) {\n        instance.image = { bytesBase64Encoded: baseImage };\n      }\n\n      const predictClient = predictModel<\n        ImagenInstance,\n        ImagenPrediction,\n        ImagenParameters\n      >(model.version || name, apiKey as string, 'predict');\n      const response = await predictClient([instance], toParameters(request));\n\n      if (!response.predictions || response.predictions.length == 0) {\n        throw new Error(\n          'Model returned no predictions. Possibly due to content filters.'\n        );\n      }\n\n      const message = {\n        role: 'model',\n        content: [],\n      } as MessageData;\n\n      response.predictions.forEach((p, i) => {\n        const b64data = p.bytesBase64Encoded;\n        const mimeType = p.mimeType;\n        message.content.push({\n          media: {\n            url: `data:${mimeType};base64,${b64data}`,\n            contentType: mimeType,\n          },\n        });\n      });\n      return {\n        finishReason: 'stop',\n        message,\n        usage: getBasicUsageStats(request.messages, message),\n        custom: response,\n      };\n    }\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2085, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/list-models.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Gemini  model definition\nexport interface Model {\n  name: string;\n  baseModelId: string;\n  version: string;\n  displayName: string;\n  description: string;\n  inputTokenLimit: number;\n  outputTokenLimit: number;\n  supportedGenerationMethods: string[];\n  temperature: number;\n  maxTemperature: number;\n  topP: number;\n  topK: number;\n}\n\n// Gemini list models response\ninterface ListModelsResponse {\n  models: Model[];\n  nextPageToken?: string;\n}\n\n/**\n * List Gemini models by making an RPC call to the API.\n *\n * https://ai.google.dev/api/models#method:-models.list\n */\nexport async function listModels(\n  baseUrl: string,\n  apiKey: string\n): Promise<Model[]> {\n  // We call the gemini list local models api:\n  const res = await fetch(\n    `${baseUrl}/v1beta/models?pageSize=1000&key=${apiKey}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const modelResponse = JSON.parse(await res.text()) as ListModelsResponse;\n  return modelResponse.models;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,sBAAA,CAAA;AAAA,SAAA,qBAAA;IAAA,YAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AA2CA,eAAsB,WACpB,OAAA,EACA,MAAA,EACkB;IAElB,MAAM,MAAM,MAAM,MAChB,GAAG,OAAO,CAAA,iCAAA,EAAoC,MAAM,EAAA,EACpD;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;IAEF,MAAM,gBAAgB,KAAK,KAAA,CAAM,MAAM,IAAI,IAAA,CAAK,CAAC;IACjD,OAAO,cAAc,MAAA;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/veo.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GenerateResponseData,\n  GenkitError,\n  Operation,\n  z,\n  type Genkit,\n} from 'genkit';\nimport {\n  BackgroundModelAction,\n  modelRef,\n  type GenerateRequest,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { Operation as ApiOperation, checkOp, predictModel } from './predict.js';\n\nexport type KNOWN_VEO_MODELS = 'veo-2.0-generate-001';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/video\n */\nexport const VeoConfigSchema = z\n  .object({\n    // NOTE: Documentation notes numberOfVideos parameter to pick the number of\n    // output videos, but this setting does not seem to work\n    negativePrompt: z.string().optional(),\n    aspectRatio: z\n      .enum(['9:16', '16:9'])\n      .describe('Desired aspect ratio of the output video.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n    durationSeconds: z\n      .number()\n      .step(1)\n      .min(5)\n      .max(8)\n      .describe('Length of each output video in seconds, between 5 and 8.')\n      .optional(),\n    enhance_prompt: z\n      .boolean()\n      .describe('Enable or disable the prompt rewriter. Enabled by default.')\n      .optional(),\n  })\n  .passthrough();\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\ninterface VeoParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof VeoConfigSchema>\n): VeoParameters {\n  const out = {\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractImage(request: GenerateRequest): VeoImage | undefined {\n  const media = request.messages.at(-1)?.content.find((p) => !!p.media)?.media;\n  if (media) {\n    const img = media?.url.split(',')[1];\n    return {\n      bytesBase64Encoded: img,\n      mimeType: media.contentType!,\n    };\n  }\n  return undefined;\n}\n\ninterface VeoImage {\n  bytesBase64Encoded: string;\n  mimeType: string;\n}\n\ninterface VeoInstance {\n  prompt: string;\n  image?: VeoImage;\n}\n\nexport const GENERIC_VEO_INFO = {\n  label: `Google AI - Generic Veo`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n    longRunning: true,\n  },\n} as ModelInfo;\n\nexport function defineVeoModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): BackgroundModelAction<typeof VeoConfigSchema> {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_VEO_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: VeoConfigSchema,\n  });\n\n  return ai.defineBackgroundModel({\n    name: modelName,\n    ...model.info,\n    configSchema: VeoConfigSchema,\n    async start(request) {\n      const instance: VeoInstance = {\n        prompt: extractText(request),\n      };\n      const image = extractImage(request);\n      if (image) {\n        instance.image = image;\n      }\n\n      const predictClient = predictModel<\n        VeoInstance,\n        ApiOperation,\n        VeoParameters\n      >(model.version || name, apiKey as string, 'predictLongRunning');\n      const response = await predictClient([instance], toParameters(request));\n\n      return toGenkitOp(response);\n    },\n    async check(operation) {\n      const newOp = await checkOp(operation.id, apiKey as string);\n      return toGenkitOp(newOp);\n    },\n  });\n}\n\nfunction toGenkitOp(apiOp: ApiOperation): Operation<GenerateResponseData> {\n  const res = { id: apiOp.name } as Operation<GenerateResponseData>;\n  if (apiOp.done !== undefined) {\n    res.done = apiOp.done;\n  }\n\n  if (apiOp.error) {\n    res.error = { message: apiOp.error.message };\n  }\n\n  if (\n    apiOp.response &&\n    apiOp.response.generateVideoResponse &&\n    apiOp.response.generateVideoResponse.generatedSamples\n  ) {\n    res.output = {\n      finishReason: 'stop',\n      raw: apiOp.response,\n      message: {\n        role: 'model',\n        content: apiOp.response.generateVideoResponse.generatedSamples.map(\n          (s) => {\n            return {\n              media: {\n                url: s.video.uri,\n              },\n            };\n          }\n        ),\n      },\n    };\n  }\n\n  return res;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2303, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/googleai/src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  embedderActionMetadata,\n  embedderRef,\n  modelActionMetadata,\n  type ActionMetadata,\n  type EmbedderReference,\n  type Genkit,\n  type ModelReference,\n  type z,\n} from 'genkit';\nimport { logger } from 'genkit/logging';\nimport { modelRef } from 'genkit/model';\nimport { genkitPlugin, type GenkitPlugin } from 'genkit/plugin';\nimport type { ActionType } from 'genkit/registry';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport {\n  SUPPORTED_MODELS as EMBEDDER_MODELS,\n  GeminiEmbeddingConfigSchema,\n  defineGoogleAIEmbedder,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiEmbeddingConfig,\n} from './embedder.js';\nimport {\n  GeminiConfigSchema,\n  SUPPORTED_GEMINI_MODELS,\n  defineGoogleAIModel,\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  type GeminiConfig,\n  type GeminiVersionString,\n} from './gemini.js';\nimport {\n  GENERIC_IMAGEN_INFO,\n  ImagenConfigSchema,\n  defineImagenModel,\n  type KNOWN_IMAGEN_MODELS,\n} from './imagen.js';\nimport { listModels } from './list-models.js';\nimport {\n  GENERIC_VEO_INFO,\n  KNOWN_VEO_MODELS,\n  VeoConfigSchema,\n  defineVeoModel,\n} from './veo.js';\nexport {\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiConfig,\n  type GeminiVersionString,\n};\n\nexport interface PluginOptions {\n  /**\n   * Provide the API key to use to authenticate with the Gemini API. By\n   * default, an API key must be provided explicitly here or through the\n   * `GEMINI_API_KEY` or `GOOGLE_API_KEY` environment variables.\n   *\n   * If `false` is explicitly passed, the plugin will be configured to\n   * expect an `apiKey` option to be provided to the model config at\n   * call time.\n   **/\n  apiKey?: string | false;\n  apiVersion?: string | string[];\n  baseUrl?: string;\n  models?: (\n    | ModelReference</** @ignore */ typeof GeminiConfigSchema>\n    | string\n  )[];\n  experimental_debugTraces?: boolean;\n}\n\nasync function initializer(ai: Genkit, options?: PluginOptions) {\n  let apiVersions = ['v1'];\n\n  if (options?.apiVersion) {\n    if (Array.isArray(options?.apiVersion)) {\n      apiVersions = options?.apiVersion;\n    } else {\n      apiVersions = [options?.apiVersion];\n    }\n  }\n\n  if (apiVersions.includes('v1beta')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: 'v1beta',\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n  }\n  if (apiVersions.includes('v1')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: undefined,\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n    Object.keys(EMBEDDER_MODELS).forEach((name) =>\n      defineGoogleAIEmbedder(ai, name, { apiKey: options?.apiKey })\n    );\n  }\n\n  if (options?.models) {\n    for (const modelOrRef of options?.models) {\n      const modelName =\n        typeof modelOrRef === 'string'\n          ? modelOrRef\n          : // strip out the `googleai/` prefix\n            modelOrRef.name.split('/')[1];\n      const modelRef =\n        typeof modelOrRef === 'string' ? gemini(modelOrRef) : modelOrRef;\n      defineGoogleAIModel({\n        ai,\n        name: modelName,\n        apiKey: options?.apiKey,\n        baseUrl: options?.baseUrl,\n        info: {\n          ...modelRef.info,\n          label: `Google AI - ${modelName}`,\n        },\n        debugTraces: options?.experimental_debugTraces,\n      });\n    }\n  }\n}\n\nasync function resolver(\n  ai: Genkit,\n  actionType: ActionType,\n  actionName: string,\n  options?: PluginOptions\n) {\n  if (actionType === 'embedder') {\n    resolveEmbedder(ai, actionName, options);\n  } else if (actionName.startsWith('veo')) {\n    // we do it this way because the request may come in for\n    // action type 'model' and action name 'veo-...'. That case should\n    // be a noop. It's just the order or model lookup.\n    if (actionType === 'background-model') {\n      defineVeoModel(ai, actionName, options?.apiKey);\n    }\n  } else if (actionType === 'model') {\n    resolveModel(ai, actionName, options);\n  }\n}\n\nfunction resolveModel(ai: Genkit, actionName: string, options?: PluginOptions) {\n  if (actionName.startsWith('imagen')) {\n    defineImagenModel(ai, actionName, options?.apiKey);\n    return;\n  }\n\n  const modelRef = gemini(actionName);\n  defineGoogleAIModel({\n    ai,\n    name: modelRef.name,\n    apiKey: options?.apiKey,\n    baseUrl: options?.baseUrl,\n    info: {\n      ...modelRef.info,\n      label: `Google AI - ${actionName}`,\n    },\n    debugTraces: options?.experimental_debugTraces,\n  });\n}\n\nfunction resolveEmbedder(\n  ai: Genkit,\n  actionName: string,\n  options?: PluginOptions\n) {\n  defineGoogleAIEmbedder(ai, `googleai/${actionName}`, {\n    apiKey: options?.apiKey,\n  });\n}\n\nasync function listActions(options?: PluginOptions): Promise<ActionMetadata[]> {\n  const apiKey = options?.apiKey || getApiKeyFromEnvVar();\n  if (!apiKey) {\n    // If API key is not configured we don't want to error, just return empty.\n    // In practice it will never actually reach this point without the API key,\n    // plugin initializer will fail before that.\n    logger.error(\n      'Pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.'\n    );\n    return [];\n  }\n\n  const models = await listModels(\n    options?.baseUrl || 'https://generativelanguage.googleapis.com',\n    apiKey\n  );\n\n  return [\n    // Imagen\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predict') &&\n          m.name.includes('imagen')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_IMAGEN_INFO },\n          configSchema: ImagenConfigSchema,\n        });\n      }),\n    // Veo\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predictLongRunning') &&\n          m.name.includes('veo')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_VEO_INFO },\n          configSchema: VeoConfigSchema,\n          background: true,\n        });\n      }),\n    // Models\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('generateContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const ref = gemini(\n          m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name\n        );\n\n        return modelActionMetadata({\n          name: ref.name,\n          info: ref.info,\n          configSchema: GeminiConfigSchema,\n        });\n      }),\n    // Embedders\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('embedContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name =\n          'googleai/' +\n          (m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name);\n\n        return embedderActionMetadata({\n          name,\n          configSchema: GeminiEmbeddingConfigSchema,\n          info: {\n            dimensions: 768,\n            label: `Google Gen AI - ${name}`,\n            supports: {\n              input: ['text'],\n            },\n          },\n        });\n      }),\n  ];\n}\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport function googleAIPlugin(options?: PluginOptions): GenkitPlugin {\n  let listActionsCache;\n  return genkitPlugin(\n    'googleai',\n    async (ai: Genkit) => await initializer(ai, options),\n    async (ai: Genkit, actionType: ActionType, actionName: string) =>\n      await resolver(ai, actionType, actionName, options),\n    async () => {\n      if (listActionsCache) return listActionsCache;\n      listActionsCache = await listActions(options);\n      return listActionsCache;\n    }\n  );\n}\n\nexport type GoogleAIPlugin = {\n  (params?: PluginOptions): GenkitPlugin;\n  model(\n    name: keyof typeof SUPPORTED_GEMINI_MODELS | (`gemini-${string}` & {}),\n    config?: z.infer<typeof GeminiConfigSchema>\n  ): ModelReference<typeof GeminiConfigSchema>;\n  model(\n    name: KNOWN_IMAGEN_MODELS | (`imagen${string}` & {}),\n    config?: z.infer<typeof ImagenConfigSchema>\n  ): ModelReference<typeof ImagenConfigSchema>;\n  model(\n    name: KNOWN_VEO_MODELS | (`veo${string}` & {}),\n    config?: z.infer<typeof VeoConfigSchema>\n  ): ModelReference<typeof VeoConfigSchema>;\n  model(name: string, config?: any): ModelReference<z.ZodTypeAny>;\n  embedder(\n    name: string,\n    config?: GeminiEmbeddingConfig\n  ): EmbedderReference<typeof GeminiEmbeddingConfigSchema>;\n};\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport const googleAI = googleAIPlugin as GoogleAIPlugin;\n// provide generic implementation for the model function overloads.\n(googleAI as any).model = (\n  name: string,\n  config?: any\n): ModelReference<z.ZodTypeAny> => {\n  if (name.startsWith('imagen')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: ImagenConfigSchema,\n    });\n  }\n  if (name.startsWith('veo')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: VeoConfigSchema,\n    });\n  }\n  return modelRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiConfigSchema,\n  });\n};\ngoogleAI.embedder = (\n  name: string,\n  config?: GeminiEmbeddingConfig\n): EmbedderReference<typeof GeminiEmbeddingConfigSchema> => {\n  return embedderRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiEmbeddingConfigSchema,\n  });\n};\n\nexport default googleAI;\n"],"names":["modelRef"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/helper.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dotprompt, type PromptFunction } from 'dotprompt';\nimport { readFileSync } from 'fs';\n\n/** Helper function to get current directory, isolated in a separate file to work with ESM */\nexport function getDirName() {\n  return __dirname;\n}\n\nconst dp = new Dotprompt();\n\nexport function loadPromptFile(path: string): Promise<PromptFunction> {\n  return dp.compile(dp.parse(readFileSync(path, 'utf8')));\n}\n\nexport async function renderText(\n  prompt: PromptFunction,\n  input\n): Promise<string> {\n  const renderred = await prompt({\n    input,\n  });\n  return renderred.messages\n    .map((m) => m.content.map((c) => c.text).join())\n    .join();\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,CAAA;AAAA,SAAA,gBAAA;IAAA,YAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,YAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,mBAA+C;AAC/C,IAAA,YAA6B;;;;;AAGtB,SAAS,aAAa;IAC3B,OAAO;AACT;AAEA,MAAM,KAAK,IAAI,iBAAA,SAAA,CAAU;AAElB,SAAS,eAAe,IAAA,EAAuC;IACpE,OAAO,GAAG,OAAA,CAAQ,GAAG,KAAA,CAAA,CAAA,GAAM,UAAA,YAAA,EAAa,MAAM,MAAM,CAAC,CAAC;AACxD;AAEA,eAAsB,WACpB,MAAA,EACA,KAAA,EACiB;IACjB,MAAM,YAAY,MAAM,OAAO;QAC7B;IACF,CAAC;IACD,OAAO,UAAU,QAAA,CACd,GAAA,CAAI,CAAC,IAAM,EAAE,OAAA,CAAQ,GAAA,CAAI,CAAC,IAAM,EAAE,IAAI,EAAE,IAAA,CAAK,CAAC,EAC9C,IAAA,CAAK;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2602, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/answer_accuracy.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Genkit, ModelArgument, z } from 'genkit';\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\nimport path from 'path';\nimport { getDirName, loadPromptFile, renderText } from './helper.js';\n\nexport async function answerAccuracyScore<\n  CustomModelOptions extends z.ZodTypeAny,\n>(\n  ai: Genkit,\n  judgeLlm: ModelArgument<CustomModelOptions>,\n  dataPoint: BaseEvalDataPoint,\n  judgeConfig?: CustomModelOptions\n): Promise<Score> {\n  if (!dataPoint.output) {\n    throw new Error('Output was not provided');\n  }\n  if (!dataPoint.reference) {\n    throw new Error('Reference was not provided');\n  }\n  const input =\n    typeof dataPoint.input === 'string'\n      ? dataPoint.input\n      : JSON.stringify(dataPoint.input);\n  const output =\n    typeof dataPoint.output === 'string'\n      ? dataPoint.output\n      : JSON.stringify(dataPoint.output);\n  const reference =\n    typeof dataPoint.reference === 'string'\n      ? dataPoint.reference\n      : JSON.stringify(dataPoint.reference);\n\n  const prompt = await loadPromptFile(\n    path.resolve(getDirName(), '../../prompts/answer_accuracy.prompt')\n  );\n  const origResp = await ai.generate({\n    model: judgeLlm,\n    config: judgeConfig,\n    prompt: await renderText(prompt, {\n      query: input,\n      output,\n      reference,\n    }),\n  });\n  const origScore = Number.parseInt(origResp.text);\n  if (Number.isNaN(origScore)) {\n    throw new Error('Error generating original response for answer accuracy');\n  }\n\n  const invResp = await ai.generate({\n    model: judgeLlm,\n    config: judgeConfig,\n    prompt: await renderText(prompt, {\n      query: input,\n      output: reference,\n      reference: output,\n    }),\n  });\n  const invScore = Number.parseInt(invResp.text);\n  if (Number.isNaN(invScore)) {\n    throw new Error('Error generating inverted response for answer accuracy');\n  }\n  const score = (origScore + invScore) / 8;\n\n  return {\n    score,\n    status: score >= 0.5 ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n  };\n}\n"],"names":["path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,0BAAA,CAAA;AAAA,SAAA,yBAAA;IAAA,qBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAiBA,IAAA,mBAIO;AACP,IAAA,cAAiB;AACjB,IAAA,gBAAuD;AAEvD,eAAsB,oBAGpB,EAAA,EACA,QAAA,EACA,SAAA,EACA,WAAA,EACgB;IAChB,IAAI,CAAC,UAAU,MAAA,EAAQ;QACrB,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IACA,IAAI,CAAC,UAAU,SAAA,EAAW;QACxB,MAAM,IAAI,MAAM,4BAA4B;IAC9C;IACA,MAAM,QACJ,OAAO,UAAU,KAAA,KAAU,WACvB,UAAU,KAAA,GACV,KAAK,SAAA,CAAU,UAAU,KAAK;IACpC,MAAM,SACJ,OAAO,UAAU,MAAA,KAAW,WACxB,UAAU,MAAA,GACV,KAAK,SAAA,CAAU,UAAU,MAAM;IACrC,MAAM,YACJ,OAAO,UAAU,SAAA,KAAc,WAC3B,UAAU,SAAA,GACV,KAAK,SAAA,CAAU,UAAU,SAAS;IAExC,MAAM,SAAS,MAAA,CAAA,GAAM,cAAA,cAAA,EACnB,YAAAA,OAAAA,CAAK,OAAA,CAAA,CAAA,GAAQ,cAAA,UAAA,EAAW,GAAG,sCAAsC;IAEnE,MAAM,WAAW,MAAM,GAAG,QAAA,CAAS;QACjC,OAAO;QACP,QAAQ;QACR,QAAQ,MAAA,CAAA,GAAM,cAAA,UAAA,EAAW,QAAQ;YAC/B,OAAO;YACP;YACA;QACF,CAAC;IACH,CAAC;IACD,MAAM,YAAY,OAAO,QAAA,CAAS,SAAS,IAAI;IAC/C,IAAI,OAAO,KAAA,CAAM,SAAS,GAAG;QAC3B,MAAM,IAAI,MAAM,wDAAwD;IAC1E;IAEA,MAAM,UAAU,MAAM,GAAG,QAAA,CAAS;QAChC,OAAO;QACP,QAAQ;QACR,QAAQ,MAAA,CAAA,GAAM,cAAA,UAAA,EAAW,QAAQ;YAC/B,OAAO;YACP,QAAQ;YACR,WAAW;QACb,CAAC;IACH,CAAC;IACD,MAAM,WAAW,OAAO,QAAA,CAAS,QAAQ,IAAI;IAC7C,IAAI,OAAO,KAAA,CAAM,QAAQ,GAAG;QAC1B,MAAM,IAAI,MAAM,wDAAwD;IAC1E;IACA,MAAM,QAAA,CAAS,YAAY,QAAA,IAAY;IAEvC,OAAO;QACL;QACA,QAAQ,SAAS,MAAM,iBAAA,cAAA,CAAe,IAAA,GAAO,iBAAA,cAAA,CAAe,IAAA;IAC9D;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2695, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/answer_relevancy.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport similarity from 'compute-cosine-similarity';\nimport { z, type Genkit, type ModelArgument } from 'genkit';\nimport type { EmbedderArgument } from 'genkit/embedder';\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\nimport path from 'path';\nimport { getDirName, loadPromptFile, renderText } from './helper.js';\n\nconst AnswerRelevancyResponseSchema = z.object({\n  question: z.string(),\n  answered: z.boolean(),\n  noncommittal: z.boolean(),\n});\n\nexport async function answerRelevancyScore<\n  CustomModelOptions extends z.ZodTypeAny,\n  CustomEmbedderOptions extends z.ZodTypeAny,\n>(\n  ai: Genkit,\n  judgeLlm: ModelArgument<CustomModelOptions>,\n  dataPoint: BaseEvalDataPoint,\n  embedder: EmbedderArgument<CustomEmbedderOptions>,\n  judgeConfig?: CustomModelOptions,\n  embedderOptions?: z.infer<CustomEmbedderOptions>\n): Promise<Score> {\n  try {\n    if (!dataPoint.input) {\n      throw new Error('Input was not provided');\n    }\n    if (!dataPoint.output) {\n      throw new Error('Output was not provided');\n    }\n    if (!dataPoint.context?.length) {\n      throw new Error('Context was not provided');\n    }\n\n    const input =\n      typeof dataPoint.input === 'string'\n        ? dataPoint.input\n        : JSON.stringify(dataPoint.input);\n    const output =\n      typeof dataPoint.output === 'string'\n        ? dataPoint.output\n        : JSON.stringify(dataPoint.output);\n    const context = dataPoint.context.map((i) => JSON.stringify(i));\n\n    const prompt = await loadPromptFile(\n      path.resolve(getDirName(), '../../prompts/answer_relevancy.prompt')\n    );\n    const response = await ai.generate({\n      model: judgeLlm,\n      config: judgeConfig,\n      prompt: await renderText(prompt, {\n        question: input,\n        answer: output,\n        context: context.join(' '),\n      }),\n      output: {\n        schema: AnswerRelevancyResponseSchema,\n      },\n    });\n    const genQuestion = response.output?.question;\n    if (!genQuestion)\n      throw new Error('Error generating question for answer relevancy');\n\n    const questionEmbed = (\n      await ai.embed({\n        embedder,\n        content: input,\n        options: embedderOptions,\n      })\n    )[0].embedding; // Single embedding for text\n    const genQuestionEmbed = (\n      await ai.embed({\n        embedder,\n        content: genQuestion,\n        options: embedderOptions,\n      })\n    )[0].embedding; // Single embedding for text\n    const score = cosineSimilarity(questionEmbed, genQuestionEmbed);\n    const answered = response.output?.answered ?? false;\n    const isNonCommittal = response.output?.noncommittal ?? false;\n    const answeredPenalty = !answered ? 0.5 : 0;\n    const adjustedScore =\n      score - answeredPenalty < 0 ? 0 : score - answeredPenalty;\n    const reasoning = isNonCommittal\n      ? 'Noncommittal'\n      : answered\n        ? 'Cosine similarity'\n        : 'Cosine similarity with penalty for insufficient answer';\n    const finalScore = adjustedScore * (isNonCommittal ? 0 : 1);\n    return {\n      score: finalScore,\n      details: {\n        reasoning,\n      },\n      status: finalScore > 0.5 ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n    };\n  } catch (err) {\n    console.debug(\n      `Genkit answer_relevancy evaluation failed with error ${err} for sample ${JSON.stringify(\n        dataPoint\n      )}`\n    );\n    throw err;\n  }\n}\n\nfunction cosineSimilarity(v1: Array<number>, v2: Array<number>) {\n  const maybeScore = similarity(v1, v2);\n  if (!maybeScore) {\n    throw new Error('Unable to compute cosine similarity');\n  }\n  return Math.abs(maybeScore);\n}\n"],"names":["path","similarity"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2817, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/deep-equal.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assert from 'assert';\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\n\n/**\n * Deep equality evaluator -- tests output equality against the reference.\n */\nexport async function deepEqual(dataPoint: BaseEvalDataPoint): Promise<Score> {\n  if (!dataPoint.output) {\n    throw new Error('Output was not provided');\n  }\n  if (!dataPoint.reference) {\n    throw new Error('Reference was not provided');\n  }\n\n  try {\n    assert.deepStrictEqual(dataPoint.output, dataPoint.reference);\n    return {\n      score: true,\n      status: EvalStatusEnum.PASS,\n    };\n  } catch (e) {\n    return {\n      score: false,\n      details: { reasoning: `${e instanceof Error ? e.message : e}` },\n      status: EvalStatusEnum.FAIL,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,qBAAA,CAAA;AAAA,SAAA,oBAAA;IAAA,WAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,SAAwB;AACxB,IAAA,mBAIO;AAKP,eAAsB,UAAU,SAAA,EAA8C;IAC5E,IAAI,CAAC,UAAU,MAAA,EAAQ;QACrB,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IACA,IAAI,CAAC,UAAU,SAAA,EAAW;QACxB,MAAM,IAAI,MAAM,4BAA4B;IAC9C;IAEA,IAAI;QACF,OAAO,eAAA,CAAgB,UAAU,MAAA,EAAQ,UAAU,SAAS;QAC5D,OAAO;YACL,OAAO;YACP,QAAQ,iBAAA,cAAA,CAAe,IAAA;QACzB;IACF,EAAA,OAAS,GAAG;QACV,OAAO;YACL,OAAO;YACP,SAAS;gBAAE,WAAW,GAAG,aAAa,QAAQ,EAAE,OAAA,GAAU,CAAC,EAAA;YAAG;YAC9D,QAAQ,iBAAA,cAAA,CAAe,IAAA;QACzB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/faithfulness.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z, type Genkit, type ModelArgument } from 'genkit';\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\nimport path from 'path';\nimport { getDirName, loadPromptFile, renderText } from './helper.js';\n\nconst LongFormResponseSchema = z.object({ statements: z.array(z.string()) });\n\nconst NliResponseBaseSchema = z.object({\n  statement: z.string(),\n  reason: z.string(),\n  verdict: z.boolean(),\n});\n\ntype NliResponseBase = z.infer<typeof NliResponseBaseSchema>;\nconst NliResponseSchema = z.object({\n  responses: z.array(NliResponseBaseSchema),\n});\n\n/**\n *\n */\nexport async function faithfulnessScore<\n  CustomModelOptions extends z.ZodTypeAny,\n>(\n  ai: Genkit,\n  judgeLlm: ModelArgument<CustomModelOptions>,\n  dataPoint: BaseEvalDataPoint,\n  judgeConfig?: CustomModelOptions\n): Promise<Score> {\n  try {\n    if (!dataPoint.input) {\n      throw new Error('Input was not provided');\n    }\n    if (!dataPoint.output) {\n      throw new Error('Output was not provided');\n    }\n    if (!dataPoint.context?.length) {\n      throw new Error('Context was not provided');\n    }\n\n    const input =\n      typeof dataPoint.input === 'string'\n        ? dataPoint.input\n        : JSON.stringify(dataPoint.input);\n    const output =\n      typeof dataPoint.output === 'string'\n        ? dataPoint.output\n        : JSON.stringify(dataPoint.output);\n    const context = dataPoint.context.map((i) => JSON.stringify(i));\n\n    const longFormPrompt = await loadPromptFile(\n      path.resolve(getDirName(), '../../prompts/faithfulness_long_form.prompt')\n    );\n    const longFormResponse = await ai.generate({\n      model: judgeLlm,\n      config: judgeConfig,\n      prompt: await renderText(longFormPrompt, {\n        question: input,\n        answer: output,\n      }),\n      output: {\n        schema: LongFormResponseSchema,\n      },\n    });\n    const parsedLongFormResponse = longFormResponse.output;\n    const statements = parsedLongFormResponse?.statements ?? [];\n    if (statements.length === 0) {\n      throw new Error('No statements returned');\n    }\n    const allStatements = statements.map((s) => `statement: ${s}`).join('\\n');\n    const allContext = context.join('\\n');\n    const nliPrompt = await loadPromptFile(\n      path.resolve(getDirName(), '../../prompts/faithfulness_nli.prompt')\n    );\n    const response = await ai.generate({\n      model: judgeLlm,\n      prompt: await renderText(nliPrompt, {\n        context: allContext,\n        statements: allStatements,\n      }),\n      output: {\n        schema: NliResponseSchema,\n      },\n    });\n    const parsedResponse = response.output;\n    return nliResponseToScore(parsedResponse?.responses ?? []);\n  } catch (err) {\n    console.debug(\n      `Genkit faithfulness evaluation failed with error ${err} for sample ${JSON.stringify(\n        dataPoint\n      )}`\n    );\n    throw err;\n  }\n}\n\nfunction nliResponseToScore(input: NliResponseBase[] | null): Score {\n  if (!input) {\n    throw new Error(`Evaluator response empty`);\n  }\n  const faithfulStatements = input.reduce((total, resp) => {\n    return total + (resp.verdict ? 1 : 0);\n  }, 0);\n  const score = faithfulStatements / input.length;\n  return {\n    score,\n    details: { reasoning: input.map((r) => r.reason).join('; ') },\n    status: score > 0.5 ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n  };\n}\n"],"names":["path"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3018, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/jsonata.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\nimport jsonata from 'jsonata';\n\n/**\n * JSONata evaluator -- matches JSONata expression from the reference against the output.\n */\nexport async function jsonataMetric(\n  dataPoint: BaseEvalDataPoint\n): Promise<Score> {\n  if (!dataPoint.output) {\n    throw new Error('Output was not provided');\n  }\n  if (!dataPoint.reference) {\n    throw new Error('Reference was not provided');\n  }\n  if (typeof dataPoint.reference !== 'string') {\n    throw new Error('Reference must be a string (jsonata)');\n  }\n\n  const expression = jsonata(dataPoint.reference);\n  const result = await expression.evaluate(dataPoint.output);\n\n  return {\n    score: !!result,\n    status: !!result ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n  };\n}\n"],"names":["jsonata"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,CAAA;AAAA,SAAA,iBAAA;IAAA,eAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,mBAIO;AACP,IAAA,iBAAoB;AAKpB,eAAsB,cACpB,SAAA,EACgB;IAChB,IAAI,CAAC,UAAU,MAAA,EAAQ;QACrB,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IACA,IAAI,CAAC,UAAU,SAAA,EAAW;QACxB,MAAM,IAAI,MAAM,4BAA4B;IAC9C;IACA,IAAI,OAAO,UAAU,SAAA,KAAc,UAAU;QAC3C,MAAM,IAAI,MAAM,sCAAsC;IACxD;IAEA,MAAM,aAAA,CAAA,GAAa,eAAAA,OAAAA,EAAQ,UAAU,SAAS;IAC9C,MAAM,SAAS,MAAM,WAAW,QAAA,CAAS,UAAU,MAAM;IAEzD,OAAO;QACL,OAAO,CAAC,CAAC;QACT,QAAQ,CAAC,CAAC,SAAS,iBAAA,cAAA,CAAe,IAAA,GAAO,iBAAA,cAAA,CAAe,IAAA;IAC1D;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3084, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/maliciousness.ts"],"sourcesContent":["import path from 'path';\n/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { z, type Genkit, type ModelArgument } from 'genkit';\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\nimport { getDirName, loadPromptFile, renderText } from './helper.js';\n\nconst MaliciousnessResponseSchema = z.object({\n  reason: z.string(),\n  verdict: z.boolean(),\n});\n\nexport async function maliciousnessScore<\n  CustomModelOptions extends z.ZodTypeAny,\n>(\n  ai: Genkit,\n  judgeLlm: ModelArgument<CustomModelOptions>,\n  dataPoint: BaseEvalDataPoint,\n  judgeConfig?: CustomModelOptions\n): Promise<Score> {\n  try {\n    if (!dataPoint.input) {\n      throw new Error('Input was not provided');\n    }\n    if (!dataPoint.output) {\n      throw new Error('Output was not provided');\n    }\n\n    const input =\n      typeof dataPoint.input === 'string'\n        ? dataPoint.input\n        : JSON.stringify(dataPoint.input);\n    const output =\n      typeof dataPoint.output === 'string'\n        ? dataPoint.output\n        : JSON.stringify(dataPoint.output);\n\n    const prompt = await loadPromptFile(\n      path.resolve(getDirName(), '../../prompts/maliciousness.prompt')\n    );\n    //TODO: safetySettings are gemini specific - pull these out so they are tied to the LLM\n    const response = await ai.generate({\n      model: judgeLlm,\n      config: judgeConfig,\n      prompt: await renderText(prompt, {\n        input: input,\n        submission: output,\n      }),\n      output: {\n        schema: MaliciousnessResponseSchema,\n      },\n    });\n    const parsedResponse = response.output;\n    if (!parsedResponse) {\n      throw new Error(`Unable to parse evaluator response: ${response.text}`);\n    }\n    const score = 1.0 * (parsedResponse.verdict ? 1 : 0);\n    return {\n      score,\n      details: { reasoning: parsedResponse.reason },\n      status: score < 0.5 ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n    };\n  } catch (err) {\n    console.debug(\n      `Genkit answer relevancy evaluation failed with error ${err} for sample ${JSON.stringify(dataPoint)}`\n    );\n    throw err;\n  }\n}\n"],"names":["path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,wBAAA,CAAA;AAAA,SAAA,uBAAA;IAAA,oBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAAA,IAAA,cAAiB;AAgBjB,IAAA,gBAAmD;AACnD,IAAA,mBAIO;AACP,IAAA,gBAAuD;AAEvD,MAAM,8BAA8B,cAAA,CAAA,CAAE,MAAA,CAAO;IAC3C,QAAQ,cAAA,CAAA,CAAE,MAAA,CAAO;IACjB,SAAS,cAAA,CAAA,CAAE,OAAA,CAAQ;AACrB,CAAC;AAED,eAAsB,mBAGpB,EAAA,EACA,QAAA,EACA,SAAA,EACA,WAAA,EACgB;IAChB,IAAI;QACF,IAAI,CAAC,UAAU,KAAA,EAAO;YACpB,MAAM,IAAI,MAAM,wBAAwB;QAC1C;QACA,IAAI,CAAC,UAAU,MAAA,EAAQ;YACrB,MAAM,IAAI,MAAM,yBAAyB;QAC3C;QAEA,MAAM,QACJ,OAAO,UAAU,KAAA,KAAU,WACvB,UAAU,KAAA,GACV,KAAK,SAAA,CAAU,UAAU,KAAK;QACpC,MAAM,SACJ,OAAO,UAAU,MAAA,KAAW,WACxB,UAAU,MAAA,GACV,KAAK,SAAA,CAAU,UAAU,MAAM;QAErC,MAAM,SAAS,MAAA,CAAA,GAAM,cAAA,cAAA,EACnB,YAAAA,OAAAA,CAAK,OAAA,CAAA,CAAA,GAAQ,cAAA,UAAA,EAAW,GAAG,oCAAoC;QAGjE,MAAM,WAAW,MAAM,GAAG,QAAA,CAAS;YACjC,OAAO;YACP,QAAQ;YACR,QAAQ,MAAA,CAAA,GAAM,cAAA,UAAA,EAAW,QAAQ;gBAC/B;gBACA,YAAY;YACd,CAAC;YACD,QAAQ;gBACN,QAAQ;YACV;QACF,CAAC;QACD,MAAM,iBAAiB,SAAS,MAAA;QAChC,IAAI,CAAC,gBAAgB;YACnB,MAAM,IAAI,MAAM,CAAA,oCAAA,EAAuC,SAAS,IAAI,EAAE;QACxE;QACA,MAAM,QAAQ,IAAA,CAAO,eAAe,OAAA,GAAU,IAAI,CAAA;QAClD,OAAO;YACL;YACA,SAAS;gBAAE,WAAW,eAAe,MAAA;YAAO;YAC5C,QAAQ,QAAQ,MAAM,iBAAA,cAAA,CAAe,IAAA,GAAO,iBAAA,cAAA,CAAe,IAAA;QAC7D;IACF,EAAA,OAAS,KAAK;QACZ,QAAQ,KAAA,CACN,CAAA,qDAAA,EAAwD,GAAG,CAAA,YAAA,EAAe,KAAK,SAAA,CAAU,SAAS,CAAC,EAAA;QAErG,MAAM;IACR;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/regexp.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EvalStatusEnum,\n  type BaseEvalDataPoint,\n  type Score,\n} from 'genkit/evaluator';\n\n/**\n * A simple regexp evaluator -- matches regexp from the reference against the output.\n */\nexport async function regexp(dataPoint: BaseEvalDataPoint): Promise<Score> {\n  if (!dataPoint.output) {\n    throw new Error('Output was not provided');\n  }\n  if (!dataPoint.reference) {\n    throw new Error('Reference was not provided');\n  }\n  if (typeof dataPoint.reference !== 'string') {\n    throw new Error('Reference must be a string (regex)');\n  }\n\n  const re = new RegExp(dataPoint.reference);\n\n  const outputStr =\n    typeof dataPoint.output !== 'string'\n      ? JSON.stringify(dataPoint.output)\n      : dataPoint.output;\n\n  const score = re.test(outputStr);\n  return {\n    score,\n    status: score ? EvalStatusEnum.PASS : EvalStatusEnum.FAIL,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,CAAA;AAAA,SAAA,gBAAA;IAAA,QAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,mBAIO;AAKP,eAAsB,OAAO,SAAA,EAA8C;IACzE,IAAI,CAAC,UAAU,MAAA,EAAQ;QACrB,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IACA,IAAI,CAAC,UAAU,SAAA,EAAW;QACxB,MAAM,IAAI,MAAM,4BAA4B;IAC9C;IACA,IAAI,OAAO,UAAU,SAAA,KAAc,UAAU;QAC3C,MAAM,IAAI,MAAM,oCAAoC;IACtD;IAEA,MAAM,KAAK,IAAI,OAAO,UAAU,SAAS;IAEzC,MAAM,YACJ,OAAO,UAAU,MAAA,KAAW,WACxB,KAAK,SAAA,CAAU,UAAU,MAAM,IAC/B,UAAU,MAAA;IAEhB,MAAM,QAAQ,GAAG,IAAA,CAAK,SAAS;IAC/B,OAAO;QACL;QACA,QAAQ,QAAQ,iBAAA,cAAA,CAAe,IAAA,GAAO,iBAAA,cAAA,CAAe,IAAA;IACvD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3234, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/metrics/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { answerRelevancyScore } from './answer_relevancy.js';\nexport { deepEqual } from './deep-equal.js';\nexport { faithfulnessScore } from './faithfulness.js';\nexport { jsonataMetric as jsonata } from './jsonata.js';\nexport { maliciousnessScore } from './maliciousness.js';\nexport { regexp } from './regexp.js';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,CAAA;AAAA,SAAA,iBAAA;IAAA,sBAAA,IAAA,wBAAA,oBAAA;IAAA,WAAA,IAAA,kBAAA,SAAA;IAAA,mBAAA,IAAA,oBAAA,iBAAA;IAAA,SAAA,IAAA,eAAA,aAAA;IAAA,oBAAA,IAAA,qBAAA,kBAAA;IAAA,QAAA,IAAA,cAAA,MAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAgBA,IAAA,0BAAqC;AACrC,IAAA,oBAA0B;AAC1B,IAAA,sBAAkC;AAClC,IAAA,iBAAyC;AACzC,IAAA,uBAAmC;AACnC,IAAA,gBAAuB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/types.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  EmbedderArgument,\n  EmbedderReference,\n  ModelArgument,\n  ModelReference,\n  z,\n} from 'genkit';\nimport type { EvalStatusEnum, Score } from 'genkit/evaluator';\n\nexport enum GenkitMetric {\n  FAITHFULNESS = 'FAITHFULNESS',\n  ANSWER_RELEVANCY = 'ANSWER_RELEVANCY',\n  ANSWER_ACCURACY = 'ANSWER_ACCURACY',\n  MALICIOUSNESS = 'MALICIOUSNESS',\n  REGEX = 'REGEX',\n  DEEP_EQUAL = 'DEEP_EQUAL',\n  JSONATA = 'JSONATA',\n}\n\nexport interface BaseGenkitMetricConfig {\n  type: GenkitMetric;\n  statusOverrideFn?: (args: { score: Score }) => EvalStatusEnum;\n}\n\nexport interface FaithfulnessGenkitMetricConfig<\n  ModelCustomOptions extends z.ZodTypeAny,\n> extends BaseGenkitMetricConfig {\n  type: GenkitMetric.FAITHFULNESS;\n  judge: ModelReference<ModelCustomOptions>;\n  judgeConfig?: z.infer<ModelCustomOptions>;\n}\n\nexport interface MaliciousnessGenkitMetricConfig<\n  ModelCustomOptions extends z.ZodTypeAny,\n> extends BaseGenkitMetricConfig {\n  type: GenkitMetric.MALICIOUSNESS;\n  judge: ModelReference<ModelCustomOptions>;\n  judgeConfig?: z.infer<ModelCustomOptions>;\n}\n\nexport interface AnswerAccuracyGenkitMetricConfig<\n  ModelCustomOptions extends z.ZodTypeAny,\n> extends BaseGenkitMetricConfig {\n  type: GenkitMetric.ANSWER_ACCURACY;\n  judge: ModelReference<ModelCustomOptions>;\n  judgeConfig?: z.infer<ModelCustomOptions>;\n}\n\nexport interface AnswerRelevancyGenkitMetricConfig<\n  ModelCustomOptions extends z.ZodTypeAny,\n  EmbedderCustomOptions extends z.ZodTypeAny,\n> extends BaseGenkitMetricConfig {\n  type: GenkitMetric.ANSWER_RELEVANCY;\n  judge: ModelReference<ModelCustomOptions>;\n  judgeConfig?: z.infer<ModelCustomOptions>;\n  embedder: EmbedderReference<EmbedderCustomOptions>;\n  embedderOptions?: z.infer<EmbedderCustomOptions>;\n}\nexport type GenkitMetricConfig<\n  M extends z.ZodTypeAny,\n  E extends z.ZodTypeAny,\n> =\n  | GenkitMetric\n  | FaithfulnessGenkitMetricConfig<M>\n  | MaliciousnessGenkitMetricConfig<M>\n  | AnswerAccuracyGenkitMetricConfig<M>\n  | AnswerRelevancyGenkitMetricConfig<M, E>;\n\nexport interface PluginOptions<\n  ModelCustomOptions extends z.ZodTypeAny,\n  EmbedderCustomOptions extends z.ZodTypeAny,\n> {\n  metrics: Array<GenkitMetricConfig<ModelCustomOptions, EmbedderCustomOptions>>;\n  judge?: ModelArgument<ModelCustomOptions>;\n  judgeConfig?: z.infer<ModelCustomOptions>;\n  embedder?: EmbedderArgument<EmbedderCustomOptions>;\n  embedderOptions?: z.infer<EmbedderCustomOptions>;\n}\n\nexport type ResolvedConfig<\n  ModelCustomOptions extends z.ZodTypeAny,\n  EmbedderCustomOptions extends z.ZodTypeAny,\n> = Omit<PluginOptions<ModelCustomOptions, EmbedderCustomOptions>, 'metrics'> &\n  BaseGenkitMetricConfig;\n\nexport function isGenkitMetricConfig(\n  input: any\n): input is BaseGenkitMetricConfig {\n  return Object.hasOwn(input, 'type');\n}\n"],"names":["GenkitMetric"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,cAAA,IAAA;IAAA,sBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAyBO,IAAK,eAAL,aAAA,GAAA,CAAA,CAAKA,kBAAL;IACLA,aAAAA,CAAA,eAAA,GAAe;IACfA,aAAAA,CAAA,mBAAA,GAAmB;IACnBA,aAAAA,CAAA,kBAAA,GAAkB;IAClBA,aAAAA,CAAA,gBAAA,GAAgB;IAChBA,aAAAA,CAAA,QAAA,GAAQ;IACRA,aAAAA,CAAA,aAAA,GAAa;IACbA,aAAAA,CAAA,UAAA,GAAU;IAPA,OAAAA;AAAA,CAAA,EAAA,gBAAA,CAAA;AA4EL,SAAS,qBACd,KAAA,EACiC;IACjC,OAAO,OAAO,MAAA,CAAO,OAAO,MAAM;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3340, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/evaluator/src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z, type Genkit } from 'genkit';\nimport {\n  evaluatorRef,\n  type BaseEvalDataPoint,\n  type EvalResponse,\n  type EvalStatusEnum,\n  type Score,\n} from 'genkit/evaluator';\nimport { genkitPlugin, type GenkitPlugin } from 'genkit/plugin';\nimport { answerAccuracyScore } from './metrics/answer_accuracy.js';\nimport {\n  answerRelevancyScore,\n  deepEqual,\n  faithfulnessScore,\n  jsonata,\n  maliciousnessScore,\n  regexp,\n} from './metrics/index.js';\nimport {\n  GenkitMetric,\n  isGenkitMetricConfig,\n  type AnswerRelevancyGenkitMetricConfig,\n  type GenkitMetricConfig,\n  type PluginOptions,\n  type ResolvedConfig,\n} from './types.js';\nexport { GenkitMetric, type GenkitMetricConfig, type PluginOptions };\n\nconst PLUGIN_NAME = 'genkitEval';\n\n/**\n * Reference to the Genkit evaluator for a specified metric\n */\nexport const genkitEvalRef = (metric: GenkitMetric) =>\n  evaluatorRef({\n    name: `${PLUGIN_NAME}/${metric.toLocaleLowerCase()}`,\n    configSchema: z.undefined(),\n    info: {\n      label: `Genkit RAG Evaluator for ${metric}`,\n      metrics: [metric],\n    },\n  });\n\n/**\n * Genkit evaluation plugin that provides the RAG evaluators\n */\nexport function genkitEval<\n  ModelCustomOptions extends z.ZodTypeAny,\n  EmbedderCustomOptions extends z.ZodTypeAny,\n>(\n  params: PluginOptions<ModelCustomOptions, EmbedderCustomOptions>\n): GenkitPlugin {\n  return genkitPlugin(`${PLUGIN_NAME}`, async (ai: Genkit) => {\n    genkitEvaluators(ai, params);\n  });\n}\n\nexport default genkitEval;\n\nfunction fillScores(\n  dataPoint: BaseEvalDataPoint,\n  score: Score,\n  statusOverrideFn?: (args: { score: Score }) => EvalStatusEnum\n): EvalResponse {\n  let status = score.status;\n  if (statusOverrideFn) {\n    status = statusOverrideFn({ score });\n  }\n  return { testCaseId: dataPoint.testCaseId, evaluation: { ...score, status } };\n}\n\n/**\n * Configures a Genkit evaluator\n */\nexport function genkitEvaluators<\n  ModelCustomOptions extends z.ZodTypeAny,\n  EmbedderCustomOptions extends z.ZodTypeAny,\n>(\n  ai: Genkit,\n  params: PluginOptions<ModelCustomOptions, EmbedderCustomOptions>\n) {\n  const { metrics } = params;\n  if (metrics.length === 0) {\n    throw new Error('No metrics configured in genkitEval plugin');\n  }\n  return metrics.map((metric) => {\n    const {\n      type,\n      judge,\n      judgeConfig,\n      embedder,\n      embedderOptions,\n      statusOverrideFn,\n    } = resolveConfig(metric, params);\n    const evaluator = `${PLUGIN_NAME}/${type.toLocaleLowerCase()}`;\n    switch (type) {\n      case GenkitMetric.ANSWER_RELEVANCY: {\n        if (!judge) {\n          throw new Error(\n            'Judge llms must be specified if computing answer relvancy'\n          );\n        }\n        if (!embedder) {\n          throw new Error(\n            'Embedder must be specified if computing answer relvancy'\n          );\n        }\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'Answer Relevancy',\n            definition:\n              'Assesses how pertinent the generated answer is to the given prompt',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            const answerRelevancy = await answerRelevancyScore(\n              ai,\n              judge!,\n              datapoint,\n              embedder!,\n              judgeConfig,\n              embedderOptions\n            );\n            return fillScores(datapoint, answerRelevancy, statusOverrideFn);\n          }\n        );\n      }\n      case GenkitMetric.FAITHFULNESS: {\n        if (!judge) {\n          throw new Error(\n            'Judge llms must be specified if computing faithfulness'\n          );\n        }\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'Faithfulness',\n            definition:\n              'Measures the factual consistency of the generated answer against the given context',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            const faithfulness = await faithfulnessScore(\n              ai,\n              judge!,\n              datapoint,\n              judgeConfig\n            );\n            return fillScores(datapoint, faithfulness, statusOverrideFn);\n          }\n        );\n      }\n      case GenkitMetric.MALICIOUSNESS: {\n        if (!judge) {\n          throw new Error(\n            'Judge llms must be specified if computing maliciousness'\n          );\n        }\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'Maliciousness',\n            definition:\n              'Measures whether the generated output intends to deceive, harm, or exploit',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            const maliciousness = await maliciousnessScore(\n              ai,\n              judge!,\n              datapoint,\n              judgeConfig\n            );\n            return fillScores(datapoint, maliciousness, statusOverrideFn);\n          }\n        );\n      }\n      case GenkitMetric.ANSWER_ACCURACY: {\n        if (!judge) {\n          throw new Error(\n            'Judge llms must be specified if computing answer accuracy'\n          );\n        }\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'Answer Accuracy',\n            definition:\n              'Measures how accurately the generated output matches against the reference output',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            const answerAccuracy = await answerAccuracyScore(\n              ai,\n              judge!,\n              datapoint,\n              judgeConfig\n            );\n            return fillScores(datapoint, answerAccuracy, statusOverrideFn);\n          }\n        );\n      }\n      case GenkitMetric.REGEX: {\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'RegExp',\n            definition: 'Tests output against the regexp provided as reference',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            return fillScores(datapoint, await regexp(datapoint));\n          }\n        );\n      }\n      case GenkitMetric.DEEP_EQUAL: {\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'Deep Equals',\n            definition:\n              'Tests equality of output against the provided reference',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            return fillScores(\n              datapoint,\n              await deepEqual(datapoint),\n              statusOverrideFn\n            );\n          }\n        );\n      }\n      case GenkitMetric.JSONATA: {\n        return ai.defineEvaluator(\n          {\n            name: evaluator,\n            displayName: 'JSONata',\n            definition:\n              'Tests JSONata expression (provided in reference) against output',\n          },\n          async (datapoint: BaseEvalDataPoint) => {\n            return fillScores(\n              datapoint,\n              await jsonata(datapoint),\n              statusOverrideFn\n            );\n          }\n        );\n      }\n    }\n  });\n}\n\nfunction resolveConfig<M extends z.ZodTypeAny, E extends z.ZodTypeAny>(\n  metric: GenkitMetricConfig<M, E>,\n  params: PluginOptions<M, E>\n): ResolvedConfig<M, E> {\n  if (isGenkitMetricConfig(metric)) {\n    return {\n      type: metric.type,\n      statusOverrideFn: metric.statusOverrideFn,\n      judge: metric.judge ?? params.judge,\n      judgeConfig: metric.judgeConfig ?? params.judgeConfig,\n      embedder:\n        metric.type === GenkitMetric.ANSWER_RELEVANCY\n          ? (metric as AnswerRelevancyGenkitMetricConfig<M, E>).embedder\n          : undefined,\n      embedderOptions:\n        metric.type === GenkitMetric.ANSWER_RELEVANCY\n          ? (metric as AnswerRelevancyGenkitMetricConfig<M, E>).embedderOptions\n          : undefined,\n    } as ResolvedConfig<M, E>;\n  }\n  return { type: metric, ...params };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3531, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 3592, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/picoschema.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst JSON_SCHEMA_SCALAR_TYPES = [\n  'string',\n  'boolean',\n  'null',\n  'number',\n  'integer',\n  'any',\n];\n\nconst WILDCARD_PROPERTY_NAME = '(*)';\n\nimport { JSONSchema } from '@genkit-ai/core/schema';\n\nexport function picoschema(schema: unknown): JSONSchema | null {\n  if (!schema) return null;\n  // if there's a JSON schema-ish type at the top level, treat as JSON schema\n  if (\n    [...JSON_SCHEMA_SCALAR_TYPES, 'object', 'array'].includes(\n      (schema as any)?.type\n    )\n  ) {\n    return schema;\n  }\n\n  if (typeof (schema as any)?.properties === 'object') {\n    return { ...schema, type: 'object' };\n  }\n\n  return parsePico(schema);\n}\n\nfunction extractDescription(input: string): [string, string | null] {\n  if (!input.includes(',')) return [input, null];\n\n  const match = input.match(/(.*?), *(.*)$/);\n  return [match![1], match![2]];\n}\n\nfunction parsePico(obj: any, path: string[] = []): JSONSchema {\n  if (typeof obj === 'string') {\n    const [type, description] = extractDescription(obj);\n    if (!JSON_SCHEMA_SCALAR_TYPES.includes(type)) {\n      throw new Error(`Picoschema: Unsupported scalar type '${type}'.`);\n    }\n\n    if (type === 'any') {\n      return description ? { description } : {};\n    }\n\n    return description ? { type, description } : { type };\n  } else if (typeof obj !== 'object') {\n    throw new Error(\n      'Picoschema: only consists of objects and strings. Got: ' +\n        JSON.stringify(obj)\n    );\n  }\n\n  const schema: JSONSchema = {\n    type: 'object',\n    properties: {},\n    required: [],\n    additionalProperties: false,\n  };\n\n  for (const key in obj) {\n    // wildcard property\n    if (key === WILDCARD_PROPERTY_NAME) {\n      schema.additionalProperties = parsePico(obj[key], [...path, key]);\n      continue;\n    }\n\n    const [name, typeInfo] = key.split('(');\n    const isOptional = name.endsWith('?');\n    const propertyName = isOptional ? name.slice(0, -1) : name;\n\n    if (!isOptional) {\n      schema.required.push(propertyName);\n    }\n\n    if (!typeInfo) {\n      const prop = parsePico(obj[key], [...path, key]);\n      // make all optional fields also nullable\n      if (isOptional && typeof prop.type === 'string') {\n        prop.type = [prop.type, 'null'];\n      }\n      schema.properties[propertyName] = prop;\n      continue;\n    }\n\n    const [type, description] = extractDescription(\n      typeInfo.substring(0, typeInfo.length - 1)\n    );\n    if (type === 'array') {\n      schema.properties[propertyName] = {\n        type: isOptional ? ['array', 'null'] : 'array',\n        items: parsePico(obj[key], [...path, key]),\n      };\n    } else if (type === 'object') {\n      const prop = parsePico(obj[key], [...path, key]);\n      if (isOptional) prop.type = [prop.type, 'null'];\n      schema.properties[propertyName] = prop;\n    } else if (type === 'enum') {\n      const prop = { enum: obj[key] };\n      if (isOptional) prop.enum.push(null);\n      schema.properties[propertyName] = prop;\n    } else {\n      throw new Error(\n        \"Picoschema: parenthetical types must be 'object' or 'array', got: \" +\n          type\n      );\n    }\n    if (description) {\n      schema.properties[propertyName].description = description;\n    }\n  }\n\n  if (!schema.required.length) delete schema.required;\n  return schema;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3775, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/metadata.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//\n// IMPORTANT: Please keep type definitions in sync with\n//   genkit-tools/src/types/prompt.ts\n//\n\nimport {\n  GenerationCommonConfigSchema,\n  ModelArgument,\n} from '@genkit-ai/ai/model';\nimport { ToolArgument } from '@genkit-ai/ai/tool';\nimport { z } from '@genkit-ai/core';\nimport { Registry } from '@genkit-ai/core/registry';\nimport { JSONSchema, parseSchema, toJsonSchema } from '@genkit-ai/core/schema';\nimport { picoschema } from './picoschema.js';\n\n/**\n * Metadata for a prompt.\n */\nexport interface PromptMetadata<\n  Input extends z.ZodTypeAny = z.ZodTypeAny,\n  Options extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  /** The name of the prompt. */\n  name?: string;\n\n  /** Description (intent) of the prompt, used when prompt passed as tool to an LLM. */\n  description?: string;\n\n  /** The variant name for the prompt. */\n  variant?: string;\n\n  /** The name of the model to use for this prompt, e.g. `vertexai/gemini-1.0-pro` */\n  model?: ModelArgument<Options>;\n\n  /** Names of tools (registered separately) to allow use of in this prompt. */\n  tools?: ToolArgument[];\n\n  /** Model configuration. Not all models support all options. */\n  config?: z.infer<Options>;\n\n  input?: {\n    /** Defines the default input variable values to use if none are provided. */\n    default?: any;\n    /** Zod schema defining the input variables. */\n    schema?: Input;\n    /**\n     * Defines the input variables that can be passed into the template in JSON schema form.\n     * If not supplied, any object will be accepted. `{type: \"object\"}` is defaulted if not\n     * supplied.\n     */\n    jsonSchema?: JSONSchema;\n  };\n\n  /** Defines the expected model output format. */\n  output?: {\n    /** Desired output format for this prompt. */\n    format?: 'json' | 'text' | 'media';\n    /** Zod schema defining the output structure (cannot be specified with non-json format). */\n    schema?: z.ZodTypeAny;\n    /** JSON schema of desired output (cannot be specified with non-json format). */\n    jsonSchema?: JSONSchema;\n  };\n\n  /** Arbitrary metadata to be used by code, tools, and libraries. */\n  metadata?: Record<string, any>;\n}\n\n/**\n * Formal schema for prompt YAML frontmatter.\n */\nexport const PromptFrontmatterSchema = z.object({\n  name: z.string().optional(),\n  description: z.string().optional(),\n  variant: z.string().optional(),\n  model: z.string().optional(),\n  tools: z.array(z.string()).optional(),\n  config: GenerationCommonConfigSchema.passthrough().optional(),\n  input: z\n    .object({\n      default: z.any(),\n      schema: z.unknown(),\n    })\n    .optional(),\n  output: z\n    .object({\n      format: z.enum(['json', 'text', 'media']).optional(),\n      schema: z.unknown().optional(),\n    })\n    .optional(),\n  metadata: z.record(z.unknown()).optional(),\n});\n\nexport type PromptFrontmatter = z.infer<typeof PromptFrontmatterSchema>;\n\nfunction stripUndefinedOrNull(obj: any) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  for (const key in obj) {\n    if (obj[key] === undefined || obj[key] === null) {\n      delete obj[key];\n    } else if (typeof obj[key] === 'object') {\n      stripUndefinedOrNull(obj[key]); // Recurse into nested objects\n    }\n  }\n  return obj;\n}\n\nfunction fmSchemaToSchema(registry: Registry, fmSchema: any) {\n  if (!fmSchema) return {};\n  if (typeof fmSchema === 'string') return registry.lookupSchema(fmSchema);\n  return { jsonSchema: picoschema(fmSchema) };\n}\n\nexport function toMetadata(\n  registry: Registry,\n  attributes: unknown\n): Partial<PromptMetadata> {\n  const fm = parseSchema<z.infer<typeof PromptFrontmatterSchema>>(attributes, {\n    schema: PromptFrontmatterSchema,\n  });\n\n  let input: PromptMetadata['input'] | undefined;\n  if (fm.input) {\n    input = {\n      default: fm.input.default,\n      ...fmSchemaToSchema(registry, fm.input.schema),\n    };\n  }\n\n  let output: PromptMetadata['output'] | undefined;\n  if (fm.output) {\n    output = {\n      format: fm.output.format,\n      ...fmSchemaToSchema(registry, fm.output.schema),\n    };\n  }\n\n  return stripUndefinedOrNull({\n    name: fm.name,\n    description: fm.description,\n    variant: fm.variant,\n    model: fm.model,\n    config: fm.config,\n    input,\n    output,\n    metadata: fm.metadata,\n    tools: fm.tools,\n  });\n}\n\nexport function toFrontmatter(md: PromptMetadata): PromptFrontmatter {\n  return stripUndefinedOrNull({\n    name: md.name,\n    variant: md.variant,\n    model: typeof md.model === 'string' ? md.model : md.model?.name,\n    config: md.config,\n    input: md.input\n      ? {\n          default: md.input.default,\n          schema: toJsonSchema({\n            schema: md.input.schema,\n            jsonSchema: md.input.jsonSchema,\n          }),\n        }\n      : undefined,\n    output: md.output\n      ? {\n          format: md.output.format,\n          schema: toJsonSchema({\n            schema: md.output.schema,\n            jsonSchema: md.output.jsonSchema,\n          }),\n        }\n      : undefined,\n    metadata: md.metadata,\n    tools: md.tools?.map((t) =>\n      typeof t === 'string' ? t : (t as any).__action?.name || (t as any).name\n    ),\n  });\n}\n"],"names":["_a"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3932, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/template.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MediaPart, MessageData, Part, Role } from '@genkit-ai/ai/model';\nimport { DocumentData } from '@genkit-ai/ai/retriever';\nimport Handlebars from 'handlebars';\nimport { PromptMetadata } from './metadata.js';\n\nconst Promptbars: typeof Handlebars =\n  global['dotprompt.handlebars'] || Handlebars.create();\nglobal['dotprompt.handlebars'] = Promptbars;\n\nfunction jsonHelper(serializable: any, options: { hash: { indent?: number } }) {\n  return new Promptbars.SafeString(\n    JSON.stringify(serializable, null, options.hash.indent || 0)\n  );\n}\nPromptbars.registerHelper('json', jsonHelper);\n\nfunction roleHelper(role: string) {\n  return new Promptbars.SafeString(`<<<dotprompt:role:${role}>>>`);\n}\nPromptbars.registerHelper('role', roleHelper);\n\nfunction historyHelper() {\n  return new Promptbars.SafeString('<<<dotprompt:history>>>');\n}\nPromptbars.registerHelper('history', historyHelper);\n\nfunction sectionHelper(name: string) {\n  return new Promptbars.SafeString(`<<<dotprompt:section ${name}>>>`);\n}\nPromptbars.registerHelper('section', sectionHelper);\n\nfunction mediaHelper(options: Handlebars.HelperOptions) {\n  return new Promptbars.SafeString(\n    `<<<dotprompt:media:url ${options.hash.url}${\n      options.hash.contentType ? ` ${options.hash.contentType}` : ''\n    }>>>`\n  );\n}\nPromptbars.registerHelper('media', mediaHelper);\n\nconst ROLE_REGEX = /(<<<dotprompt:(?:role:[a-z]+|history))>>>/g;\n\nfunction toMessages(\n  renderedString: string,\n  options?: { context?: DocumentData[]; messages?: MessageData[] }\n): MessageData[] {\n  let currentMessage: { role: string; source: string } = {\n    role: 'user',\n    source: '',\n  };\n  const messageSources: {\n    role: string;\n    source?: string;\n    content?: MessageData['content'];\n    metadata?: Record<string, unknown>;\n  }[] = [currentMessage];\n\n  for (const piece of renderedString\n    .split(ROLE_REGEX)\n    .filter((s) => s.trim() !== '')) {\n    if (piece.startsWith('<<<dotprompt:role:')) {\n      const role = piece.substring(18);\n      if (currentMessage.source.trim()) {\n        currentMessage = { role, source: '' };\n        messageSources.push(currentMessage);\n      } else {\n        currentMessage.role = role;\n      }\n    } else if (piece.startsWith('<<<dotprompt:history')) {\n      messageSources.push(\n        ...(options?.messages?.map((m) => {\n          return {\n            ...m,\n            metadata: { ...(m.metadata || {}), purpose: 'history' },\n          };\n        }) || [])\n      );\n      currentMessage = { role: 'model', source: '' };\n      messageSources.push(currentMessage);\n    } else {\n      currentMessage.source += piece;\n    }\n  }\n\n  const messages: MessageData[] = messageSources\n    .filter((ms) => ms.content || ms.source)\n    .map((m) => {\n      const out: MessageData = {\n        role: m.role as Role,\n        content: m.content || toParts(m.source!),\n      };\n      if (m.metadata) out.metadata = m.metadata;\n      return out;\n    });\n\n  if (\n    !options?.messages ||\n    messages.find((m) => m.metadata?.purpose === 'history')\n  )\n    return messages;\n\n  if (messages.at(-1)?.role === 'user') {\n    return [\n      ...messages.slice(0, -1),\n      ...options.messages,\n      messages.at(-1),\n    ] as MessageData[];\n  }\n\n  return [...messages, ...options.messages] as MessageData[];\n}\n\nconst PART_REGEX = /(<<<dotprompt:(?:media:url|section).*?)>>>/g;\n\nfunction toParts(source: string): Part[] {\n  const parts: Part[] = [];\n  const pieces = source.split(PART_REGEX).filter((s) => s.trim() !== '');\n  for (let i = 0; i < pieces.length; i++) {\n    const piece = pieces[i];\n    if (piece.startsWith('<<<dotprompt:media:')) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const [_, url, contentType] = piece.split(' ');\n      const part: MediaPart = { media: { url } };\n      if (contentType) part.media.contentType = contentType;\n      parts.push(part);\n    } else if (piece.startsWith('<<<dotprompt:section')) {\n      const [_, sectionType] = piece.split(' ');\n      parts.push({ metadata: { purpose: sectionType, pending: true } });\n    } else {\n      parts.push({ text: piece });\n    }\n  }\n\n  return parts;\n}\n\nexport function compile<Variables = any>(\n  source: string,\n  metadata: PromptMetadata\n) {\n  const renderString = Promptbars.compile<Variables>(source, {\n    knownHelpers: {\n      json: true,\n      section: true,\n      media: true,\n      role: true,\n      history: true,\n    },\n  });\n\n  return (\n    input: Variables,\n    options?: { context?: DocumentData[]; messages?: MessageData[] },\n    data?: Record<string, any>\n  ) => {\n    const renderedString = renderString(input, {\n      data: {\n        metadata: { prompt: metadata, context: options?.context || null },\n        ...data,\n      },\n    });\n    return toMessages(renderedString, options);\n  };\n}\n\nexport function defineHelper(name: string, fn: Handlebars.HelperDelegate) {\n  Promptbars.registerHelper(name, fn);\n}\n\nexport function definePartial(name: string, source: string) {\n  Promptbars.registerPartial(name, source);\n}\n"],"names":["Handlebars","_a"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA;AAAA,SAAA,kBAAA;IAAA,SAAA,IAAA;IAAA,cAAA,IAAA;IAAA,eAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;AAkBA,IAAA,oBAAuB;AAGvB,MAAM,aACJ,MAAA,CAAO,sBAAsB,CAAA,IAAK,kBAAAA,OAAAA,CAAW,MAAA,CAAO;AACtD,MAAA,CAAO,sBAAsB,CAAA,GAAI;AAEjC,SAAS,WAAW,YAAA,EAAmB,OAAA,EAAwC;IAC7E,OAAO,IAAI,WAAW,UAAA,CACpB,KAAK,SAAA,CAAU,cAAc,MAAM,QAAQ,IAAA,CAAK,MAAA,IAAU,CAAC;AAE/D;AACA,WAAW,cAAA,CAAe,QAAQ,UAAU;AAE5C,SAAS,WAAW,IAAA,EAAc;IAChC,OAAO,IAAI,WAAW,UAAA,CAAW,CAAA,kBAAA,EAAqB,IAAI,CAAA,GAAA,CAAK;AACjE;AACA,WAAW,cAAA,CAAe,QAAQ,UAAU;AAE5C,SAAS,gBAAgB;IACvB,OAAO,IAAI,WAAW,UAAA,CAAW,yBAAyB;AAC5D;AACA,WAAW,cAAA,CAAe,WAAW,aAAa;AAElD,SAAS,cAAc,IAAA,EAAc;IACnC,OAAO,IAAI,WAAW,UAAA,CAAW,CAAA,qBAAA,EAAwB,IAAI,CAAA,GAAA,CAAK;AACpE;AACA,WAAW,cAAA,CAAe,WAAW,aAAa;AAElD,SAAS,YAAY,OAAA,EAAmC;IACtD,OAAO,IAAI,WAAW,UAAA,CACpB,CAAA,uBAAA,EAA0B,QAAQ,IAAA,CAAK,GAAG,GACxC,QAAQ,IAAA,CAAK,WAAA,GAAc,CAAA,CAAA,EAAI,QAAQ,IAAA,CAAK,WAAW,EAAA,GAAK,EAC9D,CAAA,GAAA,CAAA;AAEJ;AACA,WAAW,cAAA,CAAe,SAAS,WAAW;AAE9C,MAAM,aAAa;AAEnB,SAAS,WACP,cAAA,EACA,OAAA,EACe;IA7DjB,IAAA,IAAA;IA8DE,IAAI,iBAAmD;QACrD,MAAM;QACN,QAAQ;IACV;IACA,MAAM,iBAKA;QAAC,cAAc;KAAA;IAErB,KAAA,MAAW,SAAS,eACjB,KAAA,CAAM,UAAU,EAChB,MAAA,CAAO,CAAC,IAAM,EAAE,IAAA,CAAK,MAAM,EAAE,EAAG;QACjC,IAAI,MAAM,UAAA,CAAW,oBAAoB,GAAG;YAC1C,MAAM,OAAO,MAAM,SAAA,CAAU,EAAE;YAC/B,IAAI,eAAe,MAAA,CAAO,IAAA,CAAK,GAAG;gBAChC,iBAAiB;oBAAE;oBAAM,QAAQ;gBAAG;gBACpC,eAAe,IAAA,CAAK,cAAc;YACpC,OAAO;gBACL,eAAe,IAAA,GAAO;YACxB;QACF,OAAA,IAAW,MAAM,UAAA,CAAW,sBAAsB,GAAG;YACnD,eAAe,IAAA,IACb,CAAA,CAAI,KAAA,WAAA,OAAA,KAAA,IAAA,QAAS,QAAA,KAAT,OAAA,KAAA,IAAA,GAAmB,GAAA,CAAI,CAAC,MAAM;gBAChC,OAAO,cAAA,eAAA,CAAA,GACF,IADE;oBAEL,UAAU,cAAA,eAAA,CAAA,GAAM,EAAE,QAAA,IAAY,CAAC,IAArB;wBAAyB,SAAS;oBAAU;gBACxD;YACF,EAAA,KAAM,CAAC,CAAA;YAET,iBAAiB;gBAAE,MAAM;gBAAS,QAAQ;YAAG;YAC7C,eAAe,IAAA,CAAK,cAAc;QACpC,OAAO;YACL,eAAe,MAAA,IAAU;QAC3B;IACF;IAEA,MAAM,WAA0B,eAC7B,MAAA,CAAO,CAAC,KAAO,GAAG,OAAA,IAAW,GAAG,MAAM,EACtC,GAAA,CAAI,CAAC,MAAM;QACV,MAAM,MAAmB;YACvB,MAAM,EAAE,IAAA;YACR,SAAS,EAAE,OAAA,IAAW,QAAQ,EAAE,MAAO;QACzC;QACA,IAAI,EAAE,QAAA,CAAU,CAAA,IAAI,QAAA,GAAW,EAAE,QAAA;QACjC,OAAO;IACT,CAAC;IAEH,IACE,CAAA,CAAC,WAAA,OAAA,KAAA,IAAA,QAAS,QAAA,KACV,SAAS,IAAA,CAAK,CAAC,MAAG;QAjHtB,IAAAC;QAiHyB,OAAA,CAAA,CAAAA,MAAA,EAAE,QAAA,KAAF,OAAA,KAAA,IAAAA,IAAY,OAAA,MAAY;IAAA,CAAS,GAEtD,OAAO;IAET,IAAA,CAAA,CAAI,KAAA,SAAS,EAAA,CAAG,CAAA,CAAE,CAAA,KAAd,OAAA,KAAA,IAAA,GAAiB,IAAA,MAAS,QAAQ;QACpC,OAAO;eACF,SAAS,KAAA,CAAM,GAAG,CAAA,CAAE;eACpB,QAAQ,QAAA;YACX,SAAS,EAAA,CAAG,CAAA,CAAE;SAChB;IACF;IAEA,OAAO,CAAC;WAAG,UAAU;WAAG,QAAQ,QAAQ;KAAA;AAC1C;AAEA,MAAM,aAAa;AAEnB,SAAS,QAAQ,MAAA,EAAwB;IACvC,MAAM,QAAgB,CAAC,CAAA;IACvB,MAAM,SAAS,OAAO,KAAA,CAAM,UAAU,EAAE,MAAA,CAAO,CAAC,IAAM,EAAE,IAAA,CAAK,MAAM,EAAE;IACrE,IAAA,IAAS,IAAI,GAAG,IAAI,OAAO,MAAA,EAAQ,IAAK;QACtC,MAAM,QAAQ,MAAA,CAAO,CAAC,CAAA;QACtB,IAAI,MAAM,UAAA,CAAW,qBAAqB,GAAG;YAE3C,MAAM,CAAC,GAAG,KAAK,WAAW,CAAA,GAAI,MAAM,KAAA,CAAM,GAAG;YAC7C,MAAM,OAAkB;gBAAE,OAAO;oBAAE;gBAAI;YAAE;YACzC,IAAI,YAAa,CAAA,KAAK,KAAA,CAAM,WAAA,GAAc;YAC1C,MAAM,IAAA,CAAK,IAAI;QACjB,OAAA,IAAW,MAAM,UAAA,CAAW,sBAAsB,GAAG;YACnD,MAAM,CAAC,GAAG,WAAW,CAAA,GAAI,MAAM,KAAA,CAAM,GAAG;YACxC,MAAM,IAAA,CAAK;gBAAE,UAAU;oBAAE,SAAS;oBAAa,SAAS;gBAAK;YAAE,CAAC;QAClE,OAAO;YACL,MAAM,IAAA,CAAK;gBAAE,MAAM;YAAM,CAAC;QAC5B;IACF;IAEA,OAAO;AACT;AAEO,SAAS,QACd,MAAA,EACA,QAAA,EACA;IACA,MAAM,eAAe,WAAW,OAAA,CAAmB,QAAQ;QACzD,cAAc;YACZ,MAAM;YACN,SAAS;YACT,OAAO;YACP,MAAM;YACN,SAAS;QACX;IACF,CAAC;IAED,OAAO,CACL,OACA,SACA,SACG;QACH,MAAM,iBAAiB,aAAa,OAAO;YACzC,MAAM,eAAA;gBACJ,UAAU;oBAAE,QAAQ;oBAAU,SAAA,CAAS,WAAA,OAAA,KAAA,IAAA,QAAS,OAAA,KAAW;gBAAK;YAAA,GAC7D;QAEP,CAAC;QACD,OAAO,WAAW,gBAAgB,OAAO;IAC3C;AACF;AAEO,SAAS,aAAa,IAAA,EAAc,EAAA,EAA+B;IACxE,WAAW,cAAA,CAAe,MAAM,EAAE;AACpC;AAEO,SAAS,cAAc,IAAA,EAAc,MAAA,EAAgB;IAC1D,WAAW,eAAA,CAAgB,MAAM,MAAM;AACzC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/registry.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PromptAction } from '@genkit-ai/ai';\nimport { GenkitError } from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport { Registry } from '@genkit-ai/core/registry';\nimport { existsSync, readdir, readFileSync } from 'fs';\nimport { basename, join, resolve } from 'path';\nimport { Dotprompt } from './prompt.js';\nimport { definePartial } from './template.js';\n\nexport function registryDefinitionKey(\n  name: string,\n  variant?: string,\n  ns?: string\n) {\n  // \"ns/prompt.variant\" where ns and variant are optional\n  return `${ns ? `${ns}/` : ''}${name}${variant ? `.${variant}` : ''}`;\n}\n\nexport function registryLookupKey(name: string, variant?: string, ns?: string) {\n  return `/prompt/${registryDefinitionKey(name, variant, ns)}`;\n}\n\nexport async function lookupPrompt(\n  registry: Registry,\n  name: string,\n  variant?: string,\n  dir: string = './prompts'\n): Promise<Dotprompt> {\n  let registryPrompt =\n    (await registry.lookupAction(registryLookupKey(name, variant))) ||\n    (await registry.lookupAction(\n      registryLookupKey(name, variant, 'dotprompt')\n    ));\n  if (registryPrompt) {\n    return Dotprompt.fromAction(registry, registryPrompt as PromptAction);\n  } else {\n    // Handle the case where initialization isn't complete\n    // or a file was added after the prompt folder was loaded.\n    return maybeLoadPrompt(registry, dir, name, variant);\n  }\n}\n\nasync function maybeLoadPrompt(\n  registry: Registry,\n  dir: string,\n  name: string,\n  variant?: string\n): Promise<Dotprompt> {\n  const expectedFileName = `${name}${variant ? `.${variant}` : ''}.prompt`;\n  const promptFolder = resolve(dir);\n  const promptExists = existsSync(join(promptFolder, expectedFileName));\n  if (promptExists) {\n    return loadPrompt(registry, promptFolder, expectedFileName);\n  } else {\n    throw new GenkitError({\n      source: 'dotprompt',\n      status: 'NOT_FOUND',\n      message: `Could not find '${expectedFileName}' in the prompts folder.`,\n    });\n  }\n}\n\nexport async function loadPromptFolder(\n  registry: Registry,\n  dir: string = './prompts',\n  ns: string\n): Promise<void> {\n  const promptsPath = resolve(dir);\n  return new Promise<void>((resolve, reject) => {\n    if (existsSync(promptsPath)) {\n      readdir(\n        promptsPath,\n        {\n          withFileTypes: true,\n          recursive: true,\n        },\n        (err, dirEnts) => {\n          if (err) {\n            reject(err);\n          } else {\n            dirEnts.forEach(async (dirEnt) => {\n              if (dirEnt.isFile() && dirEnt.name.endsWith('.prompt')) {\n                if (dirEnt.name.startsWith('_')) {\n                  const partialName = dirEnt.name.substring(\n                    1,\n                    dirEnt.name.length - 7\n                  );\n                  definePartial(\n                    partialName,\n                    readFileSync(join(dirEnt.path, dirEnt.name), {\n                      encoding: 'utf8',\n                    })\n                  );\n                  logger.debug(\n                    `Registered Dotprompt partial \"${partialName}\" from \"${join(dirEnt.path, dirEnt.name)}\"`\n                  );\n                } else {\n                  // If this prompt is in a subdirectory, we need to include that\n                  // in the namespace to prevent naming conflicts.\n                  let prefix = '';\n                  if (promptsPath !== dirEnt.path) {\n                    prefix = dirEnt.path\n                      .replace(`${promptsPath}/`, '')\n                      .replace(/\\//g, '-');\n                  }\n                  loadPrompt(registry, dirEnt.path, dirEnt.name, prefix, ns);\n                }\n              }\n            });\n            resolve();\n          }\n        }\n      );\n    } else {\n      resolve();\n    }\n  });\n}\n\nexport function loadPrompt(\n  registry: Registry,\n  path: string,\n  filename: string,\n  prefix = '',\n  ns = 'dotprompt'\n): Dotprompt {\n  let name = `${prefix ? `${prefix}-` : ''}${basename(filename, '.prompt')}`;\n  let variant: string | null = null;\n  if (name.includes('.')) {\n    const parts = name.split('.');\n    name = parts[0];\n    variant = parts[1];\n  }\n  const source = readFileSync(join(path, filename), 'utf8');\n  const prompt = Dotprompt.parse(registry, name, source);\n  if (variant) {\n    prompt.variant = variant;\n  }\n  prompt.define({ ns });\n  return prompt;\n}\n"],"names":["resolve"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4309, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/prompt.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  definePrompt,\n  generate,\n  GenerateOptions,\n  GenerateResponse,\n  generateStream,\n  GenerateStreamResponse,\n  PromptAction,\n  toGenerateRequest,\n} from '@genkit-ai/ai';\nimport { MessageData, ModelArgument } from '@genkit-ai/ai/model';\nimport { DocumentData } from '@genkit-ai/ai/retriever';\nimport { getCurrentSession } from '@genkit-ai/ai/session';\nimport { GenkitError, z } from '@genkit-ai/core';\nimport { Registry } from '@genkit-ai/core/registry';\nimport { parseSchema } from '@genkit-ai/core/schema';\nimport {\n  runInNewSpan,\n  setCustomMetadataAttribute,\n  SPAN_TYPE_ATTR,\n} from '@genkit-ai/core/tracing';\nimport { createHash } from 'crypto';\nimport fm, { FrontMatterResult } from 'front-matter';\nimport {\n  PromptFrontmatter,\n  PromptMetadata,\n  toFrontmatter,\n  toMetadata,\n} from './metadata.js';\nimport { lookupPrompt, registryDefinitionKey } from './registry.js';\nimport { compile } from './template.js';\n\nexport type PromptData = PromptFrontmatter & { template: string };\n\nexport type PromptGenerateOptions<\n  V = unknown,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = Omit<\n  GenerateOptions<z.ZodTypeAny, CustomOptions>,\n  'prompt' | 'input' | 'model'\n> & {\n  model?: ModelArgument<CustomOptions>;\n  input?: V;\n};\n\ninterface RenderMetadata {\n  docs?: DocumentData[];\n  messages?: MessageData[];\n}\n\nexport class Dotprompt<I = unknown> implements PromptMetadata<z.ZodTypeAny> {\n  name: string;\n  description?: string;\n  variant?: string;\n  hash: string;\n\n  template: string;\n\n  model?: PromptMetadata['model'];\n  metadata: PromptMetadata['metadata'];\n  input?: PromptMetadata['input'];\n  output?: PromptMetadata['output'];\n  tools?: PromptMetadata['tools'];\n  config?: PromptMetadata['config'];\n\n  private _promptAction?: PromptAction;\n\n  private _render: (\n    input: I,\n    options?: RenderMetadata,\n    data?: Record<string, any>\n  ) => MessageData[];\n\n  static parse(registry: Registry, name: string, source: string) {\n    try {\n      const fmResult = (fm as any)(source.trimStart(), {\n        allowUnsafe: false,\n      }) as FrontMatterResult<unknown>;\n\n      return new Dotprompt(\n        registry,\n        {\n          ...toMetadata(registry, fmResult.attributes),\n          name,\n        } as PromptMetadata,\n        fmResult.body\n      );\n    } catch (e: any) {\n      throw new GenkitError({\n        source: 'Dotprompt',\n        status: 'INVALID_ARGUMENT',\n        message: `Error parsing YAML frontmatter of '${name}' prompt: ${e.stack}`,\n      });\n    }\n  }\n\n  static fromAction(registry: Registry, action: PromptAction): Dotprompt {\n    const { template, ...options } = action.__action.metadata!.prompt;\n    const pm = options as PromptMetadata;\n    if (pm.input?.schema) {\n      pm.input.jsonSchema = options.input?.schema;\n      delete pm.input.schema;\n    }\n    if (pm.output?.schema) {\n      pm.output.jsonSchema = options.output?.schema;\n    }\n    const prompt = new Dotprompt(\n      registry,\n      options as PromptMetadata,\n      template,\n      action\n    );\n    return prompt;\n  }\n\n  constructor(\n    private registry: Registry,\n    options: PromptMetadata,\n    template: string,\n    action?: PromptAction\n  ) {\n    this.name = options.name || 'untitledPrompt';\n    this.description = options.description;\n    this.variant = options.variant;\n    this.model = options.model;\n    this.input = options.input || { schema: z.any() };\n    this.output = options.output;\n    this.tools = options.tools;\n    this.config = options.config;\n    this.template = template;\n    this.hash = createHash('sha256').update(JSON.stringify(this)).digest('hex');\n\n    this._render = compile(this.template, options);\n    this._promptAction = action;\n  }\n\n  /**\n   * Renders all of the prompt's text parts into a raw string.\n   *\n   * @param input User input to the prompt template.\n   * @param options Optional context and/or history for the prompt template.\n   * @returns all of the text parts concatenated into a string.\n   */\n\n  renderText(input: I, options?: RenderMetadata): string {\n    const result = this.renderMessages(input, options);\n    if (result.length !== 1) {\n      throw new Error(\"Multi-message prompt can't be rendered as text.\");\n    }\n    let out = '';\n    for (const part of result[0].content) {\n      if (!part.text) {\n        throw new Error(\"Multimodal prompt can't be rendered as text.\");\n      }\n      out += part.text;\n    }\n    return out;\n  }\n\n  /**\n   * Renders the prompt template into an array of messages.\n   *\n   * @param input User input to the prompt template\n   * @param options optional context and/or history for the prompt template.\n   * @returns an array of messages representing an exchange between a user and a model.\n   */\n  renderMessages(input?: I, options?: RenderMetadata): MessageData[] {\n    let sessionStateData: Record<string, any> | undefined = undefined;\n    if (getCurrentSession()) {\n      sessionStateData = { state: getCurrentSession()?.state };\n    }\n    input = parseSchema(input, {\n      schema: this.input?.schema,\n      jsonSchema: this.input?.jsonSchema,\n    });\n    return this._render(\n      { ...this.input?.default, ...input },\n      options,\n      sessionStateData\n    );\n  }\n\n  toJSON(): PromptData {\n    return { ...toFrontmatter(this), template: this.template };\n  }\n\n  define(options?: { ns?: string; description?: string }): void {\n    this._promptAction = definePrompt(\n      this.registry,\n      {\n        name: registryDefinitionKey(this.name, this.variant, options?.ns),\n        description: options?.description ?? this.description,\n        inputSchema: this.input?.schema,\n        inputJsonSchema: this.input?.jsonSchema,\n        metadata: {\n          type: 'prompt',\n          prompt: this.toJSON(),\n        },\n      },\n      async (input?: I) =>\n        toGenerateRequest(this.registry, this.render({ input }))\n    );\n  }\n\n  get promptAction(): PromptAction | undefined {\n    return this._promptAction;\n  }\n\n  private _generateOptions<\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n  >(options: PromptGenerateOptions<I>): GenerateOptions<O, CustomOptions> {\n    const messages = this.renderMessages(options.input, {\n      messages: options.messages,\n      docs: options.docs,\n    });\n    let renderedPrompt;\n    let renderedMessages;\n    if (messages.length > 0 && messages[messages.length - 1].role === 'user') {\n      renderedPrompt = messages[messages.length - 1].content;\n      renderedMessages = messages.slice(0, messages.length - 1);\n    } else {\n      renderedPrompt = undefined;\n      renderedMessages = messages;\n    }\n    return {\n      model: options.model || this.model!,\n      config: { ...this.config, ...options.config },\n      messages: renderedMessages,\n      prompt: renderedPrompt,\n      docs: options.docs,\n      output: {\n        format: options.output?.format || this.output?.format || undefined,\n        schema: options.output?.schema || this.output?.schema,\n        jsonSchema: options.output?.jsonSchema || this.output?.jsonSchema,\n      },\n      tools: (options.tools || []).concat(this.tools || []),\n      streamingCallback: options.streamingCallback,\n      returnToolRequests: options.returnToolRequests,\n      use: options.use,\n    } as GenerateOptions<O, CustomOptions>;\n  }\n\n  /**\n   * Renders the prompt template based on user input.\n   *\n   * @param opt Options for the prompt template, including user input variables and custom model configuration options.\n   * @returns a `GenerateOptions` object to be used with the `generate()` function from @genkit-ai/ai.\n   */\n  render<\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n  >(\n    opt: PromptGenerateOptions<I, CustomOptions>\n  ): GenerateOptions<CustomOptions, O> {\n    return this._generateOptions(opt);\n  }\n\n  async renderInNewSpan<\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n  >(opt: PromptGenerateOptions<I>): Promise<GenerateOptions<CustomOptions, O>> {\n    const spanName = this.variant ? `${this.name}.${this.variant}` : this.name;\n    return runInNewSpan(\n      {\n        metadata: {\n          name: spanName,\n          input: opt,\n        },\n        labels: {\n          [SPAN_TYPE_ATTR]: 'dotprompt',\n        },\n      },\n      async (metadata) => {\n        setCustomMetadataAttribute('prompt_fingerprint', this.hash);\n        const generateOptions = this._generateOptions<CustomOptions, O>(opt);\n        metadata.output = generateOptions;\n        return generateOptions;\n      }\n    );\n  }\n\n  /**\n   * Generates a response by rendering the prompt template with given user input and then calling the model.\n   *\n   * @param opt Options for the prompt template, including user input variables and custom model configuration options.\n   * @returns the model response as a promise of `GenerateResponse`.\n   */\n  async generate<\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n  >(\n    opt: PromptGenerateOptions<I, CustomOptions>\n  ): Promise<GenerateResponse<z.infer<O>>> {\n    const renderedOpts = this.renderInNewSpan<CustomOptions, O>(opt);\n    return generate<CustomOptions, O>(this.registry, renderedOpts);\n  }\n\n  /**\n   * Generates a streaming response by rendering the prompt template with given user input and then calling the model.\n   *\n   * @param opt Options for the prompt template, including user input variables and custom model configuration options.\n   * @returns the model response as a promise of `GenerateStreamResponse`.\n   */\n  async generateStream<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny>(\n    opt: PromptGenerateOptions<I, CustomOptions>\n  ): Promise<GenerateStreamResponse> {\n    const renderedOpts = await this.renderInNewSpan<CustomOptions>(opt);\n    return generateStream(this.registry, renderedOpts);\n  }\n}\n\nexport class DotpromptRef<Variables = unknown> {\n  name: string;\n  variant?: string;\n  dir?: string;\n  private _prompt?: Dotprompt<Variables>;\n\n  constructor(\n    name: string,\n    options?: {\n      variant?: string;\n      dir?: string;\n    }\n  ) {\n    this.name = name;\n    this.variant = options?.variant;\n    this.dir = options?.dir;\n  }\n\n  /** Loads the prompt which is referenced. */\n  async loadPrompt(registry: Registry): Promise<Dotprompt<Variables>> {\n    if (this._prompt) return this._prompt;\n    this._prompt = (await lookupPrompt(\n      registry,\n      this.name,\n      this.variant,\n      this.dir\n    )) as Dotprompt<Variables>;\n    return this._prompt;\n  }\n\n  /**\n   * Generates a response by rendering the prompt template with given user input and then calling the model.\n   *\n   * @param opt Options for the prompt template, including user input variables and custom model configuration options.\n   * @returns the model response as a promise of `GenerateResponse`.\n   */\n\n  async generate<\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n  >(\n    registry: Registry,\n    opt: PromptGenerateOptions<Variables, CustomOptions>\n  ): Promise<GenerateResponse<z.infer<O>>> {\n    const prompt = await this.loadPrompt(registry);\n    return prompt.generate<CustomOptions, O>(opt);\n  }\n\n  /**\n   * Renders the prompt template based on user input.\n   *\n   * @param opt Options for the prompt template, including user input variables and custom model configuration options.\n   * @returns a `GenerateOptions` object to be used with the `generate()` function from @genkit-ai/ai.\n   */\n  async render<\n    CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n    O extends z.ZodTypeAny = z.ZodTypeAny,\n  >(\n    registry: Registry,\n\n    opt: PromptGenerateOptions<Variables, CustomOptions>\n  ): Promise<GenerateOptions<z.ZodTypeAny, O>> {\n    const prompt = await this.loadPrompt(registry);\n    return prompt.render<CustomOptions, O>(opt);\n  }\n}\n\n/**\n * Define a dotprompt in code. This function is offered as an alternative to definitions in .prompt files.\n *\n * @param options the prompt definition, including its name, variant and model. Any options from .prompt file front matter are accepted.\n * @param template a string template, comparable to the main body of a prompt file.\n * @returns the newly defined prompt.\n */\nexport function defineDotprompt<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: PromptMetadata<I, CustomOptions>,\n  template: string\n): Dotprompt<z.infer<I>> {\n  const prompt = new Dotprompt(registry, options, template);\n  prompt.define({ description: options.description });\n  return prompt;\n}\n"],"names":["import_registry","fm"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4657, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/%40genkit-ai/dotprompt/src/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Registry } from '@genkit-ai/core/registry';\nimport { readFileSync } from 'fs';\nimport { basename } from 'path';\nimport {\n  defineDotprompt,\n  Dotprompt,\n  DotpromptRef,\n  type PromptGenerateOptions,\n} from './prompt.js';\nimport { loadPromptFolder, lookupPrompt } from './registry.js';\n\nexport { type PromptMetadata } from './metadata.js';\nexport { defineHelper, definePartial } from './template.js';\nexport {\n  defineDotprompt,\n  Dotprompt,\n  loadPromptFolder,\n  type PromptGenerateOptions,\n};\n\nexport interface DotpromptPluginOptions {\n  // Directory to look for .prompt files.\n  //\n  // Note: This directory will be searched recursively, and any sub-directory\n  // paths will be included in the prompt name. E.g. - if a prompt file is\n  // located at `<dir>/foo/bar.prompt`, the prompt name will be `foo-bar`.\n  dir: string;\n}\n\nexport async function prompt<Variables = unknown>(\n  registry: Registry,\n  name: string,\n  options?: { variant?: string; dir?: string }\n): Promise<Dotprompt<Variables>> {\n  return (await lookupPrompt(\n    registry,\n    name,\n    options?.variant,\n    options?.dir ?? './prompts'\n  )) as Dotprompt<Variables>;\n}\n\nexport function promptRef<Variables = unknown>(\n  name: string,\n  options?: { variant?: string; dir?: string }\n): DotpromptRef<Variables> {\n  return new DotpromptRef(name, options);\n}\n\nexport function loadPromptFile(registry: Registry, path: string): Dotprompt {\n  return Dotprompt.parse(\n    registry,\n    basename(path).split('.')[0],\n    readFileSync(path, 'utf-8')\n  );\n}\n\nexport async function loadPromptUrl(\n  registry: Registry,\n\n  name: string,\n  url: string\n): Promise<Dotprompt> {\n  const fetch = (await import('node-fetch')).default;\n  const response = await fetch(url);\n  const text = await response.text();\n  return Dotprompt.parse(registry, name, text);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAkBA,SAAS,gBAAgB;AACzB;AAMA,SAAS,kBAAkB,oBAAoB;AAG/C,SAAS,cAAc,qBAAqB;;;;;;;AAiB5C,SAAsB,OACpB,QAAA,EACA,IAAA,EACA,OAAA,EAC+B;IAAA,OAAA,CAAA,GAAA,2KAAA,CAAA,UAAA,EAAA,IAAA,EAAA,MAAA;QAjDjC,IAAA;QAkDE,OAAQ,4KAAM,eAAA,EACZ,UACA,MACA,WAAA,OAAA,KAAA,IAAA,QAAS,OAAA,EAAA,CACT,KAAA,WAAA,OAAA,KAAA,IAAA,QAAS,GAAA,KAAT,OAAA,KAAgB;IAEpB;AAAA;AAEO,SAAS,UACd,IAAA,EACA,OAAA,EACyB;IACzB,OAAO,oKAAI,eAAA,CAAa,MAAM,OAAO;AACvC;AAEO,SAAS,eAAe,QAAA,EAAoB,IAAA,EAAyB;IAC1E,uKAAO,YAAA,CAAU,KAAA,CACf,8IACA,WAAA,EAAS,IAAI,EAAE,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC,CAAA,EAC3B,aAAa,MAAM,OAAO;AAE9B;AAEA,SAAsB,cACpB,QAAA,EAEA,IAAA,EACA,GAAA,EACoB;IAAA,OAAA,CAAA,GAAA,2KAAA,CAAA,UAAA,EAAA,IAAA,EAAA,MAAA;QACpB,MAAM,QAAA,CAAS,MAAM,OAAO,YAAY,uHAAA,EAAG,OAAA;QAC3C,MAAM,WAAW,MAAM,MAAM,GAAG;QAChC,MAAM,OAAO,MAAM,SAAS,IAAA,CAAK;QACjC,uKAAO,YAAA,CAAU,KAAA,CAAM,UAAU,MAAM,IAAI;IAC7C;AAAA","ignoreList":[0],"debugId":null}}]
}