{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.0-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/flows/generate-saving-suggestions.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview AI agent that generates personalized saving suggestions.\r\n *\r\n * - generateSavingSuggestions - A function that generates saving suggestions for the user.\r\n * - GenerateSavingSuggestionsInput - The input type for the generateSavingSuggestions function.\r\n * - GenerateSavingSuggestionsOutput - The return type for the generateSavingSuggestions function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateSavingSuggestionsInputSchema = z.object({\r\n  financialSituation: z\r\n    .string()\r\n    .describe(\r\n      'Description of the user current financial situation, including income, expenses, debts, and savings.'\r\n    ),\r\n  savingGoals: z\r\n    .string()\r\n    .describe('The user saving goals, for example, buying a house, retiring early, etc.'),\r\n});\r\nexport type GenerateSavingSuggestionsInput = z.infer<\r\n  typeof GenerateSavingSuggestionsInputSchema\r\n>;\r\n\r\nconst GenerateSavingSuggestionsOutputSchema = z.object({\r\n  suggestions: z.array(\r\n    z.object({\r\n      title: z.string().describe('The title of the saving suggestion.'),\r\n      description: z.string().describe('A detailed description of the suggestion.'),\r\n      example: z.string().describe('An example of how to implement the suggestion.'),\r\n    })\r\n  ).describe('A list of personalized saving suggestions.'),\r\n});\r\nexport type GenerateSavingSuggestionsOutput = z.infer<\r\n  typeof GenerateSavingSuggestionsOutputSchema\r\n>;\r\n\r\nexport async function generateSavingSuggestions(\r\n  input: GenerateSavingSuggestionsInput\r\n): Promise<GenerateSavingSuggestionsOutput> {\r\n  return generateSavingSuggestionsFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateSavingSuggestionsPrompt',\r\n  input: {schema: GenerateSavingSuggestionsInputSchema},\r\n  output: {schema: GenerateSavingSuggestionsOutputSchema},\r\n  prompt: `You are a personal finance advisor. Your goal is to provide personalized saving suggestions to the user, \r\nbased on their financial situation and saving goals. Provide clear examples of how to implement each suggestion.\r\n\r\nFinancial Situation: {{{financialSituation}}}\r\nSaving Goals: {{{savingGoals}}}\r\n\r\nHere are some saving suggestions for you:\r\n`,\r\n});\r\n\r\nconst generateSavingSuggestionsFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateSavingSuggestionsFlow',\r\n    inputSchema: GenerateSavingSuggestionsInputSchema,\r\n    outputSchema: GenerateSavingSuggestionsOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,uCAAuC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,oBAAoB,uIAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CACP;IAEJ,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAClB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACjC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,IACA,QAAQ,CAAC;AACb;AAKO,eAAe,0BACpB,KAAqC;IAErC,OAAO,8BAA8B;AACvC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAoC;IACpD,QAAQ;QAAC,QAAQ;IAAqC;IACtD,QAAQ,CAAC;;;;;;;AAOX,CAAC;AACD;AAEA,MAAM,gCAAgC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA7BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/flows/financial-question-answering.ts"],"sourcesContent":["// 'use server';\r\n\r\n/**\r\n * @fileOverview This file defines a Genkit flow for answering user questions about their finances.\r\n * \r\n * - answerFinancialQuestion - A function that takes a user's financial question as input and returns an informative answer.\r\n * - FinancialQuestionInput - The input type for the answerFinancialQuestion function.\r\n * - FinancialQuestionOutput - The return type for the answerFinancialQuestion function.\r\n */\r\n\r\n'use server';\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst FinancialQuestionInputSchema = z.object({\r\n  question: z.string().describe('The user\\'s question about their finances.'),\r\n});\r\nexport type FinancialQuestionInput = z.infer<typeof FinancialQuestionInputSchema>;\r\n\r\nconst FinancialQuestionOutputSchema = z.object({\r\n  answer: z.string().describe('The AI\\'s answer to the user\\'s financial question.'),\r\n});\r\nexport type FinancialQuestionOutput = z.infer<typeof FinancialQuestionOutputSchema>;\r\n\r\nexport async function answerFinancialQuestion(input: FinancialQuestionInput): Promise<FinancialQuestionOutput> {\r\n  return financialQuestionAnsweringFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'financialQuestionPrompt',\r\n  input: {schema: FinancialQuestionInputSchema},\r\n  output: {schema: FinancialQuestionOutputSchema},\r\n  prompt: `You are a personal finance expert.  Answer the following question about the user\\'s finances:\r\n\r\nQuestion: {{{question}}}`,\r\n});\r\n\r\nconst financialQuestionAnsweringFlow = ai.defineFlow(\r\n  {\r\n    name: 'financialQuestionAnsweringFlow',\r\n    inputSchema: FinancialQuestionInputSchema,\r\n    outputSchema: FinancialQuestionOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB;;;;;;CAMC;;;;;AAID;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGO,eAAe,wBAAwB,KAA6B;IACzE,OAAO,+BAA+B;AACxC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;wBAEa,CAAC;AACzB;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAtBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateSavingSuggestions as '407905b8f5423d7c17aafd79e0aaaf8a93ea827532'} from 'ACTIONS_MODULE0'\nexport {answerFinancialQuestion as '40821ba92381fbdb84c9f691afc735f3054eac44a3'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}