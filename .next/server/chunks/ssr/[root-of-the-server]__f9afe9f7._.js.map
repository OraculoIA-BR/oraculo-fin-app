{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import { genkit } from 'genkit';\nimport { googleAI } from '@genkit-ai/googleai';\n\nconsole.log('[Oraculo IA] Configurando Genkit com GoogleAI.');\nconsole.log('[Oraculo IA] Tentando localizar GOOGLE_API_KEY no ambiente.');\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(),\n  ],\n  traceStore: {\n    provider: 'dev', // Local trace para depuração.\n  },\n  logLevel: 'debug',\n});"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEA,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC;AAEL,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,YAAY;QACV,UAAU;IACZ;IACA,UAAU;AACZ","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/financial-question-answering.ts"],"sourcesContent":["import { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { gemini15Flash } from '@genkit-ai/googleai';\n\nconst messageSchema = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\n\nconst financialQuestionSchema = z.object({\n  question: z.string(),\n  history: z.array(messageSchema).optional(),\n  userEmail: z.string().optional(),\n});\n\nexport type FinancialQuestionOutput = {\n  answer: string;\n};\n\nexport async function answerFinancialQuestion(\n  input: z.infer<typeof financialQuestionSchema>\n): Promise<FinancialQuestionOutput> {\n  try {\n    const genkitHistory =\n      input.history?.map((msg) => ({\n        role: msg.role,\n        parts: [{ text: msg.content }],\n      })) || [];\n\n    const llmResponse = await ai.generate({\n      model: gemini15Flash,\n      history: genkitHistory,\n      prompt: `\n        Você é Oráculo, um especialista em finanças pessoais.\n        O usuário está logado com o e-mail: ${input.userEmail}.\n        Responda sempre em Português do Brasil.\n        Pergunta: ${input.question}\n      `,\n      config: {\n        temperature: 0.5,\n      },\n    });\n\n    const answer = llmResponse.text();\n\n    if (!answer) {\n      return { answer: \"[⚠️ A IA não forneceu uma resposta. Tente reformular a pergunta.]\" };\n    }\n\n    return { answer };\n\n  } catch (error) {\n    console.error(\"ERRO CRÍTICO NO FLUXO DE IA:\", error);\n    return { \n      answer: \"Desculpe, ocorreu um erro de comunicação com o serviço de IA. Verifique as configurações de API ou a sua cota de uso e tente novamente.\" \n    };\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEA,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAMO,eAAe,wBACpB,KAA8C;IAE9C,IAAI;QACF,MAAM,gBACJ,MAAM,OAAO,EAAE,IAAI,CAAC,MAAQ,CAAC;gBAC3B,MAAM,IAAI,IAAI;gBACd,OAAO;oBAAC;wBAAE,MAAM,IAAI,OAAO;oBAAC;iBAAE;YAChC,CAAC,MAAM,EAAE;QAEX,MAAM,cAAc,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;YACpC,OAAO,2JAAA,CAAA,gBAAa;YACpB,SAAS;YACT,QAAQ,CAAC;;4CAE6B,EAAE,MAAM,SAAS,CAAC;;kBAE5C,EAAE,MAAM,QAAQ,CAAC;MAC7B,CAAC;YACD,QAAQ;gBACN,aAAa;YACf;QACF;QAEA,MAAM,SAAS,YAAY,IAAI;QAE/B,IAAI,CAAC,QAAQ;YACX,OAAO;gBAAE,QAAQ;YAAoE;QACvF;QAEA,OAAO;YAAE;QAAO;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACL,QAAQ;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-saving-suggestions.ts"],"sourcesContent":["import { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { gemini15Flash } from '@genkit-ai/googleai';\n\nconst GenerateSavingSuggestionsInputSchema = z.object({\n  financialSituation: z\n    .string()\n    .describe(\n      'Descrição da situação financeira atual do usuário (renda, despesas, etc.).'\n    ),\n  savingGoals: z\n    .string()\n    .describe('Os objetivos de economia do usuário (ex: comprar uma casa).'),\n});\nexport type GenerateSavingSuggestionsInput = z.infer<\n  typeof GenerateSavingSuggestionsInputSchema\n>;\n\nconst GenerateSavingSuggestionsOutputSchema = z.object({\n  suggestions: z.array(\n    z.object({\n      title: z.string().describe('O título da sugestão de economia.'),\n      description: z.string().describe('Uma descrição detalhada da sugestão.'),\n      example: z.string().describe('Um exemplo prático de como implementar a sugestão.'),\n    })\n  ).describe('Uma lista de sugestões de economia personalizadas.'),\n});\nexport type GenerateSavingSuggestionsOutput = z.infer<\n  typeof GenerateSavingSuggestionsOutputSchema\n>;\n\nexport async function generateSavingSuggestions(\n  input: GenerateSavingSuggestionsInput\n): Promise<GenerateSavingSuggestionsOutput> {\n\n  const llmResponse = await ai.generate({\n    model: gemini15Flash,\n    prompt: `\n      Você é um consultor financeiro. Sua tarefa é fornecer sugestões de economia\n      personalizadas com base na situação financeira e metas do usuário.\n      Forneça exemplos claros para cada sugestão.\n      Responda sempre em Portugês do Brasil.\n\n      **Situação Financeira:** \n      ${input.financialSituation}\n\n      **Metas de Economia:** \n      ${input.savingGoals}\n\n      Aqui estão algumas sugestões de economia para você:\n    `,\n    output: {\n      schema: GenerateSavingSuggestionsOutputSchema,\n    },\n    config: {\n      temperature: 0.7,\n    },\n  });\n\n  return llmResponse.output!;\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEA,MAAM,uCAAuC,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,oBAAoB,kKAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CACP;IAEJ,aAAa,kKAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,wCAAwC,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,aAAa,kKAAA,CAAA,IAAC,CAAC,KAAK,CAClB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,OAAO,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,aAAa,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACjC,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,IACA,QAAQ,CAAC;AACb;AAKO,eAAe,0BACpB,KAAqC;IAGrC,MAAM,cAAc,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QACpC,OAAO,2JAAA,CAAA,gBAAa;QACpB,QAAQ,CAAC;;;;;;;MAOP,EAAE,MAAM,kBAAkB,CAAC;;;MAG3B,EAAE,MAAM,WAAW,CAAC;;;IAGtB,CAAC;QACD,QAAQ;YACN,QAAQ;QACV;QACA,QAAQ;YACN,aAAa;QACf;IACF;IAEA,OAAO,YAAY,MAAM;AAC3B","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// src/app/actions.ts\n'use server';\n\nimport { answerFinancialQuestion, type FinancialQuestionOutput } from '@/ai/flows/financial-question-answering';\nimport { generateSavingSuggestions, type GenerateSavingSuggestionsOutput } from '@/ai/flows/generate-saving-suggestions';\nimport { z } from 'zod';\n\n// --- Schema para o fluxo de Perguntas e Respostas ---\nconst messageSchema = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\n\nconst financialQuestionSchema = z.object({\n  question: z.string(),\n  history: z.array(messageSchema).optional(),\n  userEmail: z.string().optional(),\n});\n\n/**\n * Server Action para lidar com perguntas financeiras do usuário.\n */\nexport async function handleFinancialQuestion(\n  input: z.infer<typeof financialQuestionSchema>\n): Promise<FinancialQuestionOutput> {\n  try {\n    const validatedInput = financialQuestionSchema.safeParse(input);\n    if (!validatedInput.success) {\n      throw new Error('Entrada inválida para a pergunta financeira.');\n    }\n    \n    const result = await answerFinancialQuestion(validatedInput.data);\n    \n    if (!result || typeof result.answer !== 'string') {\n        return { answer: '[⚠️ Ocorreu um erro interno na IA. O resultado retornado era inválido.]' };\n    }\n    return result;\n  } catch (error) {\n    console.error('[ACTION ERROR - handleFinancialQuestion]:', error);\n    return { \n      answer: \"[⚠️ Desculpe, o serviço de IA encontrou um erro crítico. Verifique os logs do servidor.]\" \n    };\n  }\n}\n\n// --- Schema para o fluxo de Sugestões de Economia ---\nconst generateSavingSuggestionsInputSchema = z.object({\n  financialSituation: z.string(),\n  savingGoals: z.string(),\n});\n\n/**\n * Server Action para buscar sugestões de economia.\n * Esta função roda exclusivamente no servidor.\n */\nexport async function getSuggestionsAction(\n  input: z.infer<typeof generateSavingSuggestionsInputSchema>\n): Promise<GenerateSavingSuggestionsOutput> {\n  try {\n    const validatedInput = generateSavingSuggestionsInputSchema.safeParse(input);\n    if (!validatedInput.success) {\n      throw new Error('Entrada inválida para sugestão de economia.');\n    }\n    const result = await generateSavingSuggestions(validatedInput.data);\n    return result;\n  } catch (error) {\n    console.error('[ACTION ERROR - getSuggestionsAction]:', error);\n    // Retorna um objeto válido mesmo em caso de erro para não quebrar o frontend.\n    return { suggestions: [] };\n  }\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;;AAGrB;AACA;AACA;;;;;;;AAEA,uDAAuD;AACvD,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAKO,eAAe,wBACpB,KAA8C;IAE9C,IAAI;QACF,MAAM,iBAAiB,wBAAwB,SAAS,CAAC;QACzD,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,0BAAuB,AAAD,EAAE,eAAe,IAAI;QAEhE,IAAI,CAAC,UAAU,OAAO,OAAO,MAAM,KAAK,UAAU;YAC9C,OAAO;gBAAE,QAAQ;YAA0E;QAC/F;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO;YACL,QAAQ;QACV;IACF;AACF;AAEA,uDAAuD;AACvD,MAAM,uCAAuC,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,oBAAoB,kKAAA,CAAA,IAAC,CAAC,MAAM;IAC5B,aAAa,kKAAA,CAAA,IAAC,CAAC,MAAM;AACvB;AAMO,eAAe,qBACpB,KAA2D;IAE3D,IAAI;QACF,MAAM,iBAAiB,qCAAqC,SAAS,CAAC;QACtE,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,uJAAA,CAAA,4BAAyB,AAAD,EAAE,eAAe,IAAI;QAClE,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,8EAA8E;QAC9E,OAAO;YAAE,aAAa,EAAE;QAAC;IAC3B;AACF;;;IAhDsB;IAiCA;;AAjCA,+OAAA;AAiCA,+OAAA","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getSuggestionsAction as '403ad380c4dea46ef5e4ddd1eda9c011b4ca41764d'} from 'ACTIONS_MODULE0'\nexport {handleFinancialQuestion as '40b68f8836293585b1da84d4dc4e753810a53daab2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}