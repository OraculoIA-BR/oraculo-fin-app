{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/trace.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractTraceContext = exports.traceContext = void 0;\nconst async_hooks_1 = require(\"async_hooks\");\nexports.traceContext = new async_hooks_1.AsyncLocalStorage();\n/**\n * A regex to match the Cloud Trace header.\n *   - ([A-Fa-f0-9]{32}): The trace id, a 32 character hex value. (e.g. 4bf92f3577b34da6a3ce929d0e0e4736)\n *   - ([0-9]+): The parent span id, a 64 bit integer. (e.g. 00f067aa0ba902b7)\n *   - (?:;o=([0-3])): The trace mask, 1-3 denote it should be traced.\n */\nconst CLOUD_TRACE_REGEX = new RegExp(\"^(?<traceId>[A-Fa-f0-9]{32})/\" + \"(?<parentIdInt>[0-9]+)\" + \"(?:;o=(?<traceMask>[0-3]))?$\");\nconst CLOUD_TRACE_HEADER = \"X-Cloud-Trace-Context\";\nfunction matchCloudTraceHeader(carrier) {\n    let header = carrier === null || carrier === void 0 ? void 0 : carrier[CLOUD_TRACE_HEADER];\n    if (!header) {\n        // try lowercase header\n        header = carrier === null || carrier === void 0 ? void 0 : carrier[CLOUD_TRACE_HEADER.toLowerCase()];\n    }\n    if (header && typeof header === \"string\") {\n        const matches = CLOUD_TRACE_REGEX.exec(header);\n        if (matches && matches.groups) {\n            const { traceId, parentIdInt, traceMask } = matches.groups;\n            // Convert parentId from unsigned int to hex\n            const parentId = parseInt(parentIdInt);\n            if (isNaN(parentId)) {\n                // Ignore traces with invalid parentIds\n                return;\n            }\n            const sample = !!traceMask && traceMask !== \"0\";\n            return { traceId, parentId: parentId.toString(16), sample, version: \"00\" };\n        }\n    }\n}\n/**\n * A regex to match the traceparent header.\n *   - ^([a-f0-9]{2}): The specification version (e.g. 00)\n *   - ([a-f0-9]{32}): The trace id, a 16-byte array. (e.g. 4bf92f3577b34da6a3ce929d0e0e4736)\n *   - ([a-f0-9]{16}): The parent span id, an 8-byte array. (e.g. 00f067aa0ba902b7)\n *   - ([a-f0-9]{2}: The sampled flag. (e.g. 00)\n */\nconst TRACEPARENT_REGEX = new RegExp(\"^(?<version>[a-f0-9]{2})-\" +\n    \"(?<traceId>[a-f0-9]{32})-\" +\n    \"(?<parentId>[a-f0-9]{16})-\" +\n    \"(?<flag>[a-f0-9]{2})$\");\nconst TRACEPARENT_HEADER = \"traceparent\";\nfunction matchTraceparentHeader(carrier) {\n    const header = carrier === null || carrier === void 0 ? void 0 : carrier[TRACEPARENT_HEADER];\n    if (header && typeof header === \"string\") {\n        const matches = TRACEPARENT_REGEX.exec(header);\n        if (matches && matches.groups) {\n            const { version, traceId, parentId, flag } = matches.groups;\n            const sample = flag === \"01\";\n            return { traceId, parentId, sample, version };\n        }\n    }\n}\n/**\n * Extracts trace context from given carrier object, if any.\n *\n * Supports Cloud Trace and traceparent format.\n *\n * @param carrier\n */\nfunction extractTraceContext(carrier) {\n    return matchCloudTraceHeader(carrier) || matchTraceparentHeader(carrier);\n}\nexports.extractTraceContext = extractTraceContext;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,YAAY,GAAG,KAAK;AAC1D,MAAM;AACN,QAAQ,YAAY,GAAG,IAAI,cAAc,iBAAiB;AAC1D;;;;;CAKC,GACD,MAAM,oBAAoB,IAAI,OAAO,kCAAkC,2BAA2B;AAClG,MAAM,qBAAqB;AAC3B,SAAS,sBAAsB,OAAO;IAClC,IAAI,SAAS,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO,CAAC,mBAAmB;IAC1F,IAAI,CAAC,QAAQ;QACT,uBAAuB;QACvB,SAAS,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO,CAAC,mBAAmB,WAAW,GAAG;IACxG;IACA,IAAI,UAAU,OAAO,WAAW,UAAU;QACtC,MAAM,UAAU,kBAAkB,IAAI,CAAC;QACvC,IAAI,WAAW,QAAQ,MAAM,EAAE;YAC3B,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,QAAQ,MAAM;YAC1D,4CAA4C;YAC5C,MAAM,WAAW,SAAS;YAC1B,IAAI,MAAM,WAAW;gBACjB,uCAAuC;gBACvC;YACJ;YACA,MAAM,SAAS,CAAC,CAAC,aAAa,cAAc;YAC5C,OAAO;gBAAE;gBAAS,UAAU,SAAS,QAAQ,CAAC;gBAAK;gBAAQ,SAAS;YAAK;QAC7E;IACJ;AACJ;AACA;;;;;;CAMC,GACD,MAAM,oBAAoB,IAAI,OAAO,8BACjC,8BACA,+BACA;AACJ,MAAM,qBAAqB;AAC3B,SAAS,uBAAuB,OAAO;IACnC,MAAM,SAAS,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO,CAAC,mBAAmB;IAC5F,IAAI,UAAU,OAAO,WAAW,UAAU;QACtC,MAAM,UAAU,kBAAkB,IAAI,CAAC;QACvC,IAAI,WAAW,QAAQ,MAAM,EAAE;YAC3B,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,QAAQ,MAAM;YAC3D,MAAM,SAAS,SAAS;YACxB,OAAO;gBAAE;gBAAS;gBAAU;gBAAQ;YAAQ;QAChD;IACJ;AACJ;AACA;;;;;;CAMC,GACD,SAAS,oBAAoB,OAAO;IAChC,OAAO,sBAAsB,YAAY,uBAAuB;AACpE;AACA,QAAQ,mBAAmB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/logger/common.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UNPATCHED_CONSOLE = exports.CONSOLE_SEVERITY = void 0;\n// Map LogSeverity types to their equivalent `console.*` method.\n/** @hidden */\nexports.CONSOLE_SEVERITY = {\n    DEBUG: \"debug\",\n    INFO: \"info\",\n    NOTICE: \"info\",\n    WARNING: \"warn\",\n    ERROR: \"error\",\n    CRITICAL: \"error\",\n    ALERT: \"error\",\n    EMERGENCY: \"error\",\n};\n// safely preserve unpatched console.* methods in case of compat require\n/** @hidden */\nexports.UNPATCHED_CONSOLE = {\n    debug: console.debug,\n    info: console.info,\n    log: console.log,\n    warn: console.warn,\n    error: console.error,\n};\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,iBAAiB,GAAG,QAAQ,gBAAgB,GAAG,KAAK;AAC5D,gEAAgE;AAChE,YAAY,GACZ,QAAQ,gBAAgB,GAAG;IACvB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,WAAW;AACf;AACA,wEAAwE;AACxE,YAAY,GACZ,QAAQ,iBAAiB,GAAG;IACxB,OAAO,QAAQ,KAAK;IACpB,MAAM,QAAQ,IAAI;IAClB,KAAK,QAAQ,GAAG;IAChB,MAAM,QAAQ,IAAI;IAClB,OAAO,QAAQ,KAAK;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/logger/index.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.error = exports.warn = exports.info = exports.log = exports.debug = exports.write = void 0;\nconst util_1 = require(\"util\");\nconst trace_1 = require(\"../common/trace\");\nconst common_1 = require(\"./common\");\n/** @internal */\nfunction removeCircular(obj, refs = []) {\n    if (typeof obj !== \"object\" || !obj) {\n        return obj;\n    }\n    // If the object defines its own toJSON, prefer that.\n    if (obj.toJSON) {\n        return obj.toJSON();\n    }\n    if (refs.includes(obj)) {\n        return \"[Circular]\";\n    }\n    else {\n        refs.push(obj);\n    }\n    let returnObj;\n    if (Array.isArray(obj)) {\n        returnObj = new Array(obj.length);\n    }\n    else {\n        returnObj = {};\n    }\n    for (const k in obj) {\n        if (refs.includes(obj[k])) {\n            returnObj[k] = \"[Circular]\";\n        }\n        else {\n            returnObj[k] = removeCircular(obj[k], refs);\n        }\n    }\n    refs.pop();\n    return returnObj;\n}\n/**\n * Writes a `LogEntry` to `stdout`/`stderr` (depending on severity).\n * @param entry - The `LogEntry` including severity, message, and any additional structured metadata.\n * @public\n */\nfunction write(entry) {\n    const ctx = trace_1.traceContext.getStore();\n    if (ctx === null || ctx === void 0 ? void 0 : ctx.traceId) {\n        entry[\"logging.googleapis.com/trace\"] = `projects/${process.env.GCLOUD_PROJECT}/traces/${ctx.traceId}`;\n    }\n    common_1.UNPATCHED_CONSOLE[common_1.CONSOLE_SEVERITY[entry.severity]](JSON.stringify(removeCircular(entry)));\n}\nexports.write = write;\n/**\n * Writes a `DEBUG` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction debug(...args) {\n    write(entryFromArgs(\"DEBUG\", args));\n}\nexports.debug = debug;\n/**\n * Writes an `INFO` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction log(...args) {\n    write(entryFromArgs(\"INFO\", args));\n}\nexports.log = log;\n/**\n * Writes an `INFO` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction info(...args) {\n    write(entryFromArgs(\"INFO\", args));\n}\nexports.info = info;\n/**\n * Writes a `WARNING` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction warn(...args) {\n    write(entryFromArgs(\"WARNING\", args));\n}\nexports.warn = warn;\n/**\n * Writes an `ERROR` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction error(...args) {\n    write(entryFromArgs(\"ERROR\", args));\n}\nexports.error = error;\n/** @hidden */\nfunction entryFromArgs(severity, args) {\n    let entry = {};\n    const lastArg = args[args.length - 1];\n    if (lastArg && typeof lastArg === \"object\" && lastArg.constructor === Object) {\n        entry = args.pop();\n    }\n    // mimic `console.*` behavior, see https://nodejs.org/api/console.html#console_console_log_data_args\n    let message = (0, util_1.format)(...args);\n    if (severity === \"ERROR\" && !args.find((arg) => arg instanceof Error)) {\n        message = new Error(message).stack || message;\n    }\n    const out = {\n        ...entry,\n        severity,\n    };\n    if (message) {\n        out.message = message;\n    }\n    return out;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/options.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RESET_VALUE = exports.ResetValue = void 0;\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n/**\n * Special configuration type to reset configuration to platform default.\n *\n * @alpha\n */\nclass ResetValue {\n    toJSON() {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor() { }\n    static getInstance() {\n        return new ResetValue();\n    }\n}\nexports.ResetValue = ResetValue;\n/**\n * Special configuration value to reset configuration to platform default.\n */\nexports.RESET_VALUE = ResetValue.getInstance();\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG,QAAQ,UAAU,GAAG,KAAK;AAChD,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ;;;;CAIC,GACD,MAAM;IACF,SAAS;QACL,OAAO;IACX;IACA,gEAAgE;IAChE,aAAc,CAAE;IAChB,OAAO,cAAc;QACjB,OAAO,IAAI;IACf;AACJ;AACA,QAAQ,UAAU,GAAG;AACrB;;CAEC,GACD,QAAQ,WAAW,GAAG,WAAW,WAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/function-configuration.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_NUMBER_USER_LABELS = exports.DEFAULT_FAILURE_POLICY = exports.INGRESS_SETTINGS_OPTIONS = exports.VPC_EGRESS_SETTINGS_OPTIONS = exports.VALID_MEMORY_OPTIONS = exports.MAX_TIMEOUT_SECONDS = exports.MIN_TIMEOUT_SECONDS = exports.SUPPORTED_REGIONS = exports.RESET_VALUE = void 0;\nvar options_1 = require(\"../common/options\");\nObject.defineProperty(exports, \"RESET_VALUE\", { enumerable: true, get: function () { return options_1.RESET_VALUE; } });\n/**\n * List of all regions supported by Cloud Functions.\n */\nexports.SUPPORTED_REGIONS = [\n    \"us-central1\",\n    \"us-east1\",\n    \"us-east4\",\n    \"us-west2\",\n    \"us-west3\",\n    \"us-west4\",\n    \"europe-central2\",\n    \"europe-west1\",\n    \"europe-west2\",\n    \"europe-west3\",\n    \"europe-west6\",\n    \"asia-east1\",\n    \"asia-east2\",\n    \"asia-northeast1\",\n    \"asia-northeast2\",\n    \"asia-northeast3\",\n    \"asia-south1\",\n    \"asia-southeast1\",\n    \"asia-southeast2\",\n    \"northamerica-northeast1\",\n    \"southamerica-east1\",\n    \"australia-southeast1\",\n];\n/**\n * Cloud Functions min timeout value.\n */\nexports.MIN_TIMEOUT_SECONDS = 0;\n/**\n * Cloud Functions max timeout value.\n */\nexports.MAX_TIMEOUT_SECONDS = 540;\n/**\n * List of available memory options supported by Cloud Functions.\n */\nexports.VALID_MEMORY_OPTIONS = [\n    \"128MB\",\n    \"256MB\",\n    \"512MB\",\n    \"1GB\",\n    \"2GB\",\n    \"4GB\",\n    \"8GB\",\n];\n/**\n * List of available options for VpcConnectorEgressSettings.\n */\nexports.VPC_EGRESS_SETTINGS_OPTIONS = [\n    \"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED\",\n    \"PRIVATE_RANGES_ONLY\",\n    \"ALL_TRAFFIC\",\n];\n/**\n * List of available options for IngressSettings.\n */\nexports.INGRESS_SETTINGS_OPTIONS = [\n    \"INGRESS_SETTINGS_UNSPECIFIED\",\n    \"ALLOW_ALL\",\n    \"ALLOW_INTERNAL_ONLY\",\n    \"ALLOW_INTERNAL_AND_GCLB\",\n];\nexports.DEFAULT_FAILURE_POLICY = {\n    retry: {},\n};\nexports.MAX_NUMBER_USER_LABELS = 58;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,sBAAsB,GAAG,QAAQ,sBAAsB,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,2BAA2B,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,mBAAmB,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,WAAW,GAAG,KAAK;AAC7R,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,eAAe;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,UAAU,WAAW;IAAE;AAAE;AACrH;;CAEC,GACD,QAAQ,iBAAiB,GAAG;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD;;CAEC,GACD,QAAQ,mBAAmB,GAAG;AAC9B;;CAEC,GACD,QAAQ,mBAAmB,GAAG;AAC9B;;CAEC,GACD,QAAQ,oBAAoB,GAAG;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD;;CAEC,GACD,QAAQ,2BAA2B,GAAG;IAClC;IACA;IACA;CACH;AACD;;CAEC,GACD,QAAQ,wBAAwB,GAAG;IAC/B;IACA;IACA;IACA;CACH;AACD,QAAQ,sBAAsB,GAAG;IAC7B,OAAO,CAAC;AACZ;AACA,QAAQ,sBAAsB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/params/types.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListParam = exports.BooleanParam = exports.FloatParam = exports.IntParam = exports.InternalExpression = exports.StringParam = exports.SecretParam = exports.Param = exports.BUCKET_PICKER = exports.multiSelect = exports.select = exports.CompareExpression = exports.TernaryExpression = exports.Expression = void 0;\nconst logger = require(\"../logger\");\n/*\n * A CEL expression which can be evaluated during function deployment, and\n * resolved to a value of the generic type parameter: i.e, you can pass\n * an Expression<number> as the value of an option that normally accepts numbers.\n */\nclass Expression {\n    /** Returns the expression's runtime value, based on the CLI's resolution of parameters. */\n    value() {\n        if (process.env.FUNCTIONS_CONTROL_API === \"true\") {\n            logger.warn(`${this.toString()}.value() invoked during function deployment, instead of during runtime.`);\n            logger.warn(`This is usually a mistake. In configs, use Params directly without calling .value().`);\n            logger.warn(`example: { memory: memoryParam } not { memory: memoryParam.value() }`);\n        }\n        return this.runtimeValue();\n    }\n    /** @internal */\n    runtimeValue() {\n        throw new Error(\"Not implemented\");\n    }\n    /** Returns the expression's representation as a braced CEL expression. */\n    toCEL() {\n        return `{{ ${this.toString()} }}`;\n    }\n    /** Returns the expression's representation as JSON. */\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Expression = Expression;\nfunction valueOf(arg) {\n    return arg instanceof Expression ? arg.runtimeValue() : arg;\n}\n/**\n * Returns how an entity (either an `Expression` or a literal value) should be represented in CEL.\n * - Expressions delegate to the `.toString()` method, which is used by the WireManifest\n * - Strings have to be quoted explicitly\n * - Arrays are represented as []-delimited, parsable JSON\n * - Numbers and booleans are not quoted explicitly\n */\nfunction refOf(arg) {\n    if (arg instanceof Expression) {\n        return arg.toString();\n    }\n    else if (typeof arg === \"string\") {\n        return `\"${arg}\"`;\n    }\n    else if (Array.isArray(arg)) {\n        return JSON.stringify(arg);\n    }\n    else {\n        return arg.toString();\n    }\n}\n/**\n * A CEL expression corresponding to a ternary operator, e.g {{ cond ? ifTrue : ifFalse }}\n */\nclass TernaryExpression extends Expression {\n    constructor(test, ifTrue, ifFalse) {\n        super();\n        this.test = test;\n        this.ifTrue = ifTrue;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n        this.ifFalse = ifFalse;\n    }\n    /** @internal */\n    runtimeValue() {\n        return this.test.runtimeValue() ? valueOf(this.ifTrue) : valueOf(this.ifFalse);\n    }\n    toString() {\n        return `${this.test} ? ${refOf(this.ifTrue)} : ${refOf(this.ifFalse)}`;\n    }\n}\nexports.TernaryExpression = TernaryExpression;\n/**\n * A CEL expression that evaluates to boolean true or false based on a comparison\n * between the value of another expression and a literal of that same type.\n */\nclass CompareExpression extends Expression {\n    constructor(cmp, lhs, rhs) {\n        super();\n        this.cmp = cmp;\n        this.lhs = lhs;\n        this.rhs = rhs;\n    }\n    /** @internal */\n    runtimeValue() {\n        const left = this.lhs.runtimeValue();\n        const right = valueOf(this.rhs);\n        switch (this.cmp) {\n            case \"==\":\n                return Array.isArray(left) ? this.arrayEquals(left, right) : left === right;\n            case \"!=\":\n                return Array.isArray(left) ? !this.arrayEquals(left, right) : left !== right;\n            case \">\":\n                return left > right;\n            case \">=\":\n                return left >= right;\n            case \"<\":\n                return left < right;\n            case \"<=\":\n                return left <= right;\n            default:\n                throw new Error(`Unknown comparator ${this.cmp}`);\n        }\n    }\n    /** @internal */\n    arrayEquals(a, b) {\n        return a.every((item) => b.includes(item)) && b.every((item) => a.includes(item));\n    }\n    toString() {\n        const rhsStr = refOf(this.rhs);\n        return `${this.lhs} ${this.cmp} ${rhsStr}`;\n    }\n    /** Returns a `TernaryExpression` which can resolve to one of two values, based on the resolution of this comparison. */\n    thenElse(ifTrue, ifFalse) {\n        return new TernaryExpression(this, ifTrue, ifFalse);\n    }\n}\nexports.CompareExpression = CompareExpression;\n/** Create a select input from a series of values or a map of labels to values */\nfunction select(options) {\n    let wireOpts;\n    if (Array.isArray(options)) {\n        wireOpts = options.map((opt) => ({ value: opt }));\n    }\n    else {\n        wireOpts = Object.entries(options).map(([label, value]) => ({ label, value }));\n    }\n    return {\n        select: {\n            options: wireOpts,\n        },\n    };\n}\nexports.select = select;\n/** Create a multi-select input from a series of values or map of labels to values. */\nfunction multiSelect(options) {\n    let wireOpts;\n    if (Array.isArray(options)) {\n        wireOpts = options.map((opt) => ({ value: opt }));\n    }\n    else {\n        wireOpts = Object.entries(options).map(([label, value]) => ({ label, value }));\n    }\n    return {\n        multiSelect: {\n            options: wireOpts,\n        },\n    };\n}\nexports.multiSelect = multiSelect;\n/**\n * Autogenerate a list of buckets in a project that a user can select from.\n */\nexports.BUCKET_PICKER = {\n    resource: {\n        type: \"storage.googleapis.com/Bucket\",\n    },\n};\n/**\n * Represents a parametrized value that will be read from .env files if present,\n * or prompted for by the CLI if missing. Instantiate these with the defineX\n * methods exported by the firebase-functions/params namespace.\n */\nclass Param extends Expression {\n    constructor(name, options = {}) {\n        super();\n        this.name = name;\n        this.options = options;\n    }\n    /** @internal */\n    runtimeValue() {\n        throw new Error(\"Not implemented\");\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    cmp(cmp, rhs) {\n        return new CompareExpression(cmp, this, rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    equals(rhs) {\n        return this.cmp(\"==\", rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    notEquals(rhs) {\n        return this.cmp(\"!=\", rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    greaterThan(rhs) {\n        return this.cmp(\">\", rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    greaterThanOrEqualTo(rhs) {\n        return this.cmp(\">=\", rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    lessThan(rhs) {\n        return this.cmp(\"<\", rhs);\n    }\n    /** Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression. */\n    lessThanOrEqualTo(rhs) {\n        return this.cmp(\"<=\", rhs);\n    }\n    /**\n     * Returns a parametrized expression of Boolean type, based on comparing the value of this parameter to a literal or a different expression.\n     * @deprecated A typo. Use lessThanOrEqualTo instead.\n     */\n    lessThanorEqualTo(rhs) {\n        return this.lessThanOrEqualTo(rhs);\n    }\n    toString() {\n        return `params.${this.name}`;\n    }\n    /** @internal */\n    toSpec() {\n        const { default: paramDefault, ...otherOptions } = this.options;\n        const out = {\n            name: this.name,\n            ...otherOptions,\n            type: this.constructor.type,\n        };\n        if (paramDefault instanceof Expression) {\n            out.default = paramDefault.toCEL();\n        }\n        else if (paramDefault !== undefined) {\n            out.default = paramDefault;\n        }\n        if (out.input && \"text\" in out.input && out.input.text.validationRegex instanceof RegExp) {\n            out.input.text.validationRegex = out.input.text.validationRegex.source;\n        }\n        return out;\n    }\n}\nexports.Param = Param;\nParam.type = \"string\";\n/**\n * A parametrized string whose value is stored in Cloud Secret Manager\n * instead of the local filesystem. Supply instances of SecretParams to\n * the secrets array while defining a Function to make their values accessible\n * during execution of that Function.\n */\nclass SecretParam {\n    constructor(name) {\n        this.name = name;\n    }\n    /** @internal */\n    runtimeValue() {\n        const val = process.env[this.name];\n        if (val === undefined) {\n            logger.warn(`No value found for secret parameter \"${this.name}\". A function can only access a secret if you include the secret in the function's dependency array.`);\n        }\n        return val || \"\";\n    }\n    /** @internal */\n    toSpec() {\n        return {\n            type: \"secret\",\n            name: this.name,\n        };\n    }\n    /** Returns the secret's value at runtime. Throws an error if accessed during deployment. */\n    value() {\n        if (process.env.FUNCTIONS_CONTROL_API === \"true\") {\n            throw new Error(`Cannot access the value of secret \"${this.name}\" during function deployment. Secret values are only available at runtime.`);\n        }\n        return this.runtimeValue();\n    }\n}\nexports.SecretParam = SecretParam;\nSecretParam.type = \"secret\";\n/**\n *  A parametrized value of String type that will be read from .env files\n *  if present, or prompted for by the CLI if missing.\n */\nclass StringParam extends Param {\n    /** @internal */\n    runtimeValue() {\n        return process.env[this.name] || \"\";\n    }\n}\nexports.StringParam = StringParam;\n/**\n * A CEL expression which represents an internal Firebase variable. This class\n * cannot be instantiated by developers, but we provide several canned instances\n * of it to make available parameters that will never have to be defined at\n * deployment time, and can always be read from process.env.\n * @internal\n */\nclass InternalExpression extends Param {\n    constructor(name, getter) {\n        super(name);\n        this.getter = getter;\n    }\n    /** @internal */\n    runtimeValue() {\n        return this.getter(process.env) || \"\";\n    }\n    toSpec() {\n        throw new Error(\"An InternalExpression should never be marshalled for wire transmission.\");\n    }\n}\nexports.InternalExpression = InternalExpression;\n/**\n *  A parametrized value of Integer type that will be read from .env files\n *  if present, or prompted for by the CLI if missing.\n */\nclass IntParam extends Param {\n    /** @internal */\n    runtimeValue() {\n        return parseInt(process.env[this.name] || \"0\", 10) || 0;\n    }\n}\nexports.IntParam = IntParam;\nIntParam.type = \"int\";\n/**\n *  A parametrized value of Float type that will be read from .env files\n *  if present, or prompted for by the CLI if missing.\n */\nclass FloatParam extends Param {\n    /** @internal */\n    runtimeValue() {\n        return parseFloat(process.env[this.name] || \"0\") || 0;\n    }\n}\nexports.FloatParam = FloatParam;\nFloatParam.type = \"float\";\n/**\n *  A parametrized value of Boolean type that will be read from .env files\n *  if present, or prompted for by the CLI if missing.\n */\nclass BooleanParam extends Param {\n    /** @internal */\n    runtimeValue() {\n        return !!process.env[this.name] && process.env[this.name] === \"true\";\n    }\n    /** @deprecated */\n    then(ifTrue, ifFalse) {\n        return this.thenElse(ifTrue, ifFalse);\n    }\n    thenElse(ifTrue, ifFalse) {\n        return new TernaryExpression(this, ifTrue, ifFalse);\n    }\n}\nexports.BooleanParam = BooleanParam;\nBooleanParam.type = \"boolean\";\n/**\n *  A parametrized value of String[] type that will be read from .env files\n *  if present, or prompted for by the CLI if missing.\n */\nclass ListParam extends Param {\n    /** @internal */\n    runtimeValue() {\n        const val = JSON.parse(process.env[this.name]);\n        if (!Array.isArray(val) || !val.every((v) => typeof v === \"string\")) {\n            return [];\n        }\n        return val;\n    }\n    /** @hidden */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    greaterThan(rhs) {\n        throw new Error(\">/< comparison operators not supported on params of type List\");\n    }\n    /** @hidden */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    greaterThanOrEqualTo(rhs) {\n        throw new Error(\">/< comparison operators not supported on params of type List\");\n    }\n    /** @hidden */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    lessThan(rhs) {\n        throw new Error(\">/< comparison operators not supported on params of type List\");\n    }\n    /** @hidden */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    lessThanorEqualTo(rhs) {\n        throw new Error(\">/< comparison operators not supported on params of type List\");\n    }\n}\nexports.ListParam = ListParam;\nListParam.type = \"list\";\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/params/index.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineList = exports.defineFloat = exports.defineInt = exports.defineBoolean = exports.defineString = exports.defineSecret = exports.storageBucket = exports.gcloudProject = exports.projectID = exports.databaseURL = exports.clearParams = exports.declaredParams = exports.Expression = exports.multiSelect = exports.select = exports.BUCKET_PICKER = void 0;\n/**\n * @hidden\n * @alpha\n */\nconst types_1 = require(\"./types\");\nObject.defineProperty(exports, \"Expression\", { enumerable: true, get: function () { return types_1.Expression; } });\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"BUCKET_PICKER\", { enumerable: true, get: function () { return types_2.BUCKET_PICKER; } });\nObject.defineProperty(exports, \"select\", { enumerable: true, get: function () { return types_2.select; } });\nObject.defineProperty(exports, \"multiSelect\", { enumerable: true, get: function () { return types_2.multiSelect; } });\nexports.declaredParams = [];\n/**\n * Use a helper to manage the list such that parameters are uniquely\n * registered once only but order is preserved.\n * @internal\n */\nfunction registerParam(param) {\n    for (let i = 0; i < exports.declaredParams.length; i++) {\n        if (exports.declaredParams[i].name === param.name) {\n            exports.declaredParams.splice(i, 1);\n        }\n    }\n    exports.declaredParams.push(param);\n}\n/**\n * For testing.\n * @internal\n */\nfunction clearParams() {\n    exports.declaredParams.splice(0, exports.declaredParams.length);\n}\nexports.clearParams = clearParams;\n/**\n * A built-in parameter that resolves to the default RTDB database URL associated\n * with the project, without prompting the deployer. Empty string if none exists.\n */\nexports.databaseURL = new types_1.InternalExpression(\"DATABASE_URL\", (env) => { var _a; return ((_a = JSON.parse(env.FIREBASE_CONFIG)) === null || _a === void 0 ? void 0 : _a.databaseURL) || \"\"; });\n/**\n * A built-in parameter that resolves to the Cloud project ID associated with\n * the project, without prompting the deployer.\n */\nexports.projectID = new types_1.InternalExpression(\"PROJECT_ID\", (env) => { var _a; return ((_a = JSON.parse(env.FIREBASE_CONFIG)) === null || _a === void 0 ? void 0 : _a.projectId) || \"\"; });\n/**\n * A built-in parameter that resolves to the Cloud project ID, without prompting\n * the deployer.\n */\nexports.gcloudProject = new types_1.InternalExpression(\"GCLOUD_PROJECT\", (env) => { var _a; return ((_a = JSON.parse(env.FIREBASE_CONFIG)) === null || _a === void 0 ? void 0 : _a.projectId) || \"\"; });\n/**\n * A builtin parameter that resolves to the Cloud storage bucket associated\n * with the function, without prompting the deployer. Empty string if not\n * defined.\n */\nexports.storageBucket = new types_1.InternalExpression(\"STORAGE_BUCKET\", (env) => { var _a; return ((_a = JSON.parse(env.FIREBASE_CONFIG)) === null || _a === void 0 ? void 0 : _a.storageBucket) || \"\"; });\n/**\n * Declares a secret param, that will persist values only in Cloud Secret Manager.\n * Secrets are stored internally as bytestrings. Use `ParamOptions.as` to provide type\n * hinting during parameter resolution.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @returns A parameter with a `string` return type for `.value`.\n */\nfunction defineSecret(name) {\n    const param = new types_1.SecretParam(name);\n    registerParam(param);\n    return param;\n}\nexports.defineSecret = defineSecret;\n/**\n * Declare a string parameter.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @param options Configuration options for the parameter.\n * @returns A parameter with a `string` return type for `.value`.\n */\nfunction defineString(name, options = {}) {\n    const param = new types_1.StringParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineString = defineString;\n/**\n * Declare a boolean parameter.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @param options Configuration options for the parameter.\n * @returns A parameter with a `boolean` return type for `.value`.\n */\nfunction defineBoolean(name, options = {}) {\n    const param = new types_1.BooleanParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineBoolean = defineBoolean;\n/**\n * Declare an integer parameter.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @param options Configuration options for the parameter.\n * @returns A parameter with a `number` return type for `.value`.\n */\nfunction defineInt(name, options = {}) {\n    const param = new types_1.IntParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineInt = defineInt;\n/**\n * Declare a float parameter.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @param options Configuration options for the parameter.\n * @returns A parameter with a `number` return type for `.value`.\n *\n * @internal\n */\nfunction defineFloat(name, options = {}) {\n    const param = new types_1.FloatParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineFloat = defineFloat;\n/**\n * Declare a list parameter.\n *\n * @param name The name of the environment variable to use to load the parameter.\n * @param options Configuration options for the parameter.\n * @returns A parameter with a `string[]` return type for `.value`.\n */\nfunction defineList(name, options = {}) {\n    const param = new types_1.ListParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineList = defineList;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 957, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/encoding.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertInvoker = exports.serviceAccountFromShorthand = exports.convertIfPresent = exports.copyIfPresent = exports.durationFromSeconds = void 0;\nconst params_1 = require(\"../params\");\n/** Get a google.protobuf.Duration for a number of seconds. */\nfunction durationFromSeconds(s) {\n    return `${s}s`;\n}\nexports.durationFromSeconds = durationFromSeconds;\n/**\n * Utility function to help copy fields from type A to B.\n * As a safety net, catches typos or fields that aren't named the same\n * in A and B, but cannot verify that both Src and Dest have the same type for the same field.\n */\nfunction copyIfPresent(dest, src, ...fields) {\n    if (!src) {\n        return;\n    }\n    for (const field of fields) {\n        if (!Object.prototype.hasOwnProperty.call(src, field)) {\n            continue;\n        }\n        dest[field] = src[field];\n    }\n}\nexports.copyIfPresent = copyIfPresent;\nfunction convertIfPresent(dest, src, destField, srcField, converter = (from) => {\n    return from;\n}) {\n    if (!src) {\n        return;\n    }\n    if (!Object.prototype.hasOwnProperty.call(src, srcField)) {\n        return;\n    }\n    dest[destField] = converter(src[srcField]);\n}\nexports.convertIfPresent = convertIfPresent;\nfunction serviceAccountFromShorthand(serviceAccount) {\n    if (serviceAccount === \"default\") {\n        return null;\n    }\n    else if (serviceAccount instanceof params_1.Expression) {\n        return serviceAccount;\n    }\n    else if (serviceAccount.endsWith(\"@\")) {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(`Unable to determine email for service account '${serviceAccount}' because process.env.GCLOUD_PROJECT is not set.`);\n        }\n        return `${serviceAccount}${process.env.GCLOUD_PROJECT}.iam.gserviceaccount.com`;\n    }\n    else if (serviceAccount.includes(\"@\")) {\n        return serviceAccount;\n    }\n    else {\n        throw new Error(`Invalid option for serviceAccount: '${serviceAccount}'. Valid options are 'default', a service account email, or '{serviceAccountName}@'`);\n    }\n}\nexports.serviceAccountFromShorthand = serviceAccountFromShorthand;\nfunction convertInvoker(invoker) {\n    if (typeof invoker === \"string\") {\n        invoker = [invoker];\n    }\n    if (invoker.length === 0) {\n        throw new Error(\"Invalid option for invoker: Must be a non-empty array.\");\n    }\n    if (invoker.find((inv) => inv.length === 0)) {\n        throw new Error(\"Invalid option for invoker: Must be a non-empty string.\");\n    }\n    if (invoker.length > 1 && invoker.find((inv) => inv === \"public\" || inv === \"private\")) {\n        throw new Error(\"Invalid option for invoker: Cannot have 'public' or 'private' in an array of service accounts.\");\n    }\n    return invoker;\n}\nexports.convertInvoker = convertInvoker;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,QAAQ,2BAA2B,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,aAAa,GAAG,QAAQ,mBAAmB,GAAG,KAAK;AACrJ,MAAM;AACN,4DAA4D,GAC5D,SAAS,oBAAoB,CAAC;IAC1B,OAAO,GAAG,EAAE,CAAC,CAAC;AAClB;AACA,QAAQ,mBAAmB,GAAG;AAC9B;;;;CAIC,GACD,SAAS,cAAc,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM;IACvC,IAAI,CAAC,KAAK;QACN;IACJ;IACA,KAAK,MAAM,SAAS,OAAQ;QACxB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,QAAQ;YACnD;QACJ;QACA,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;IAC5B;AACJ;AACA,QAAQ,aAAa,GAAG;AACxB,SAAS,iBAAiB,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,CAAC;IACnE,OAAO;AACX,CAAC;IACG,IAAI,CAAC,KAAK;QACN;IACJ;IACA,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,WAAW;QACtD;IACJ;IACA,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,CAAC,SAAS;AAC7C;AACA,QAAQ,gBAAgB,GAAG;AAC3B,SAAS,4BAA4B,cAAc;IAC/C,IAAI,mBAAmB,WAAW;QAC9B,OAAO;IACX,OACK,IAAI,0BAA0B,SAAS,UAAU,EAAE;QACpD,OAAO;IACX,OACK,IAAI,eAAe,QAAQ,CAAC,MAAM;QACnC,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC7B,MAAM,IAAI,MAAM,CAAC,+CAA+C,EAAE,eAAe,gDAAgD,CAAC;QACtI;QACA,OAAO,GAAG,iBAAiB,QAAQ,GAAG,CAAC,cAAc,CAAC,wBAAwB,CAAC;IACnF,OACK,IAAI,eAAe,QAAQ,CAAC,MAAM;QACnC,OAAO;IACX,OACK;QACD,MAAM,IAAI,MAAM,CAAC,oCAAoC,EAAE,eAAe,mFAAmF,CAAC;IAC9J;AACJ;AACA,QAAQ,2BAA2B,GAAG;AACtC,SAAS,eAAe,OAAO;IAC3B,IAAI,OAAO,YAAY,UAAU;QAC7B,UAAU;YAAC;SAAQ;IACvB;IACA,IAAI,QAAQ,MAAM,KAAK,GAAG;QACtB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,QAAQ,IAAI,CAAC,CAAC,MAAQ,IAAI,MAAM,KAAK,IAAI;QACzC,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,QAAQ,MAAM,GAAG,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAQ,QAAQ,YAAY,QAAQ,YAAY;QACpF,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/runtime/manifest.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initV2ScheduleTrigger = exports.initV1ScheduleTrigger = exports.initTaskQueueTrigger = exports.initV2Endpoint = exports.initV1Endpoint = exports.stackToWire = void 0;\nconst options_1 = require(\"../common/options\");\nconst params_1 = require(\"../params\");\n/**\n * Returns the JSON representation of a ManifestStack, which has CEL\n * expressions in its options as object types, with its expressions\n * transformed into the actual CEL strings.\n *\n * @alpha\n */\nfunction stackToWire(stack) {\n    const wireStack = stack;\n    const traverse = function traverse(obj) {\n        for (const [key, val] of Object.entries(obj)) {\n            if (val instanceof params_1.Expression) {\n                obj[key] = val.toCEL();\n            }\n            else if (val instanceof options_1.ResetValue) {\n                obj[key] = val.toJSON();\n            }\n            else if (typeof val === \"object\" && val !== null) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                traverse(val);\n            }\n        }\n    };\n    traverse(wireStack.endpoints);\n    return wireStack;\n}\nexports.stackToWire = stackToWire;\nconst RESETTABLE_OPTIONS = {\n    availableMemoryMb: null,\n    timeoutSeconds: null,\n    minInstances: null,\n    maxInstances: null,\n    ingressSettings: null,\n    concurrency: null,\n    serviceAccountEmail: null,\n    vpc: null,\n};\nfunction initEndpoint(resetOptions, ...opts) {\n    const endpoint = {};\n    if (opts.every((opt) => !(opt === null || opt === void 0 ? void 0 : opt.preserveExternalChanges))) {\n        for (const key of Object.keys(resetOptions)) {\n            endpoint[key] = options_1.RESET_VALUE;\n        }\n    }\n    return endpoint;\n}\n/**\n * @internal\n */\nfunction initV1Endpoint(...opts) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { concurrency, ...resetOpts } = RESETTABLE_OPTIONS;\n    return initEndpoint({ ...resetOpts }, ...opts);\n}\nexports.initV1Endpoint = initV1Endpoint;\n/**\n * @internal\n */\nfunction initV2Endpoint(...opts) {\n    return initEndpoint(RESETTABLE_OPTIONS, ...opts);\n}\nexports.initV2Endpoint = initV2Endpoint;\nconst RESETTABLE_RETRY_CONFIG_OPTIONS = {\n    maxAttempts: null,\n    maxDoublings: null,\n    maxBackoffSeconds: null,\n    maxRetrySeconds: null,\n    minBackoffSeconds: null,\n};\nconst RESETTABLE_RATE_LIMITS_OPTIONS = {\n    maxConcurrentDispatches: null,\n    maxDispatchesPerSecond: null,\n};\n/**\n * @internal\n */\nfunction initTaskQueueTrigger(...opts) {\n    const taskQueueTrigger = {\n        retryConfig: {},\n        rateLimits: {},\n    };\n    if (opts.every((opt) => !(opt === null || opt === void 0 ? void 0 : opt.preserveExternalChanges))) {\n        for (const key of Object.keys(RESETTABLE_RETRY_CONFIG_OPTIONS)) {\n            taskQueueTrigger.retryConfig[key] = options_1.RESET_VALUE;\n        }\n        for (const key of Object.keys(RESETTABLE_RATE_LIMITS_OPTIONS)) {\n            taskQueueTrigger.rateLimits[key] = options_1.RESET_VALUE;\n        }\n    }\n    return taskQueueTrigger;\n}\nexports.initTaskQueueTrigger = initTaskQueueTrigger;\nconst RESETTABLE_V1_SCHEDULE_OPTIONS = {\n    retryCount: null,\n    maxDoublings: null,\n    maxRetryDuration: null,\n    maxBackoffDuration: null,\n    minBackoffDuration: null,\n};\nconst RESETTABLE_V2_SCHEDULE_OPTIONS = {\n    retryCount: null,\n    maxDoublings: null,\n    maxRetrySeconds: null,\n    minBackoffSeconds: null,\n    maxBackoffSeconds: null,\n};\nfunction initScheduleTrigger(resetOptions, schedule, ...opts) {\n    let scheduleTrigger = {\n        schedule,\n        retryConfig: {},\n    };\n    if (opts.every((opt) => !(opt === null || opt === void 0 ? void 0 : opt.preserveExternalChanges))) {\n        for (const key of Object.keys(resetOptions)) {\n            scheduleTrigger.retryConfig[key] = options_1.RESET_VALUE;\n        }\n        scheduleTrigger = { ...scheduleTrigger, timeZone: options_1.RESET_VALUE };\n    }\n    return scheduleTrigger;\n}\n/**\n * @internal\n */\nfunction initV1ScheduleTrigger(schedule, ...opts) {\n    return initScheduleTrigger(RESETTABLE_V1_SCHEDULE_OPTIONS, schedule, ...opts);\n}\nexports.initV1ScheduleTrigger = initV1ScheduleTrigger;\n/**\n * @internal\n */\nfunction initV2ScheduleTrigger(schedule, ...opts) {\n    return initScheduleTrigger(RESETTABLE_V2_SCHEDULE_OPTIONS, schedule, ...opts);\n}\nexports.initV2ScheduleTrigger = initV2ScheduleTrigger;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/onInit.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withInit = exports.onInit = void 0;\nconst logger = require(\"../logger\");\nlet initCallback = null;\nlet didInit = false;\n/**\n * Registers a callback that should be run when in a production environment\n * before executing any functions code.\n * Calling this function more than once leads to undefined behavior.\n * @param callback initialization callback to be run before any function executes.\n */\nfunction onInit(callback) {\n    if (initCallback) {\n        logger.warn(\"Setting onInit callback more than once. Only the most recent callback will be called\");\n    }\n    initCallback = callback;\n    didInit = false;\n}\nexports.onInit = onInit;\n/** @internal */\nfunction withInit(func) {\n    return async (...args) => {\n        if (!didInit) {\n            if (initCallback) {\n                await initCallback();\n            }\n            didInit = true;\n        }\n        // Note: This cast is actually inaccurate because it may be a promise, but\n        // it doesn't actually matter because the async function will promisify\n        // non-promises and forward promises.\n        return func(...args);\n    };\n}\nexports.withInit = withInit;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,QAAQ,GAAG,QAAQ,MAAM,GAAG,KAAK;AACzC,MAAM;AACN,IAAI,eAAe;AACnB,IAAI,UAAU;AACd;;;;;CAKC,GACD,SAAS,OAAO,QAAQ;IACpB,IAAI,cAAc;QACd,OAAO,IAAI,CAAC;IAChB;IACA,eAAe;IACf,UAAU;AACd;AACA,QAAQ,MAAM,GAAG;AACjB,cAAc,GACd,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,GAAG;QACb,IAAI,CAAC,SAAS;YACV,IAAI,cAAc;gBACd,MAAM;YACV;YACA,UAAU;QACd;QACA,0EAA0E;QAC1E,uEAAuE;QACvE,qCAAqC;QACrC,OAAO,QAAQ;IACnB;AACJ;AACA,QAAQ,QAAQ,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/change.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Change = exports.applyFieldMask = void 0;\n/** @internal */\nfunction applyFieldMask(sparseBefore, after, fieldMask) {\n    const before = { ...after };\n    const masks = fieldMask.split(\",\");\n    for (const mask of masks) {\n        const parts = mask.split(\".\");\n        const head = parts[0];\n        const tail = parts.slice(1).join(\".\");\n        if (parts.length > 1) {\n            before[head] = applyFieldMask(sparseBefore === null || sparseBefore === void 0 ? void 0 : sparseBefore[head], after[head], tail);\n            continue;\n        }\n        const val = sparseBefore === null || sparseBefore === void 0 ? void 0 : sparseBefore[head];\n        if (typeof val === \"undefined\") {\n            delete before[mask];\n        }\n        else {\n            before[mask] = val;\n        }\n    }\n    return before;\n}\nexports.applyFieldMask = applyFieldMask;\n/**\n * The Cloud Functions interface for events that change state, such as\n * Realtime Database or Cloud Firestore `onWrite` and `onUpdate` events.\n *\n * For more information about the format used to construct `Change` objects, see\n * {@link ChangeJson} below.\n *\n */\nclass Change {\n    /**\n     * Factory method for creating a `Change` from a `before` object and an `after`\n     * object.\n     */\n    static fromObjects(before, after) {\n        return new Change(before, after);\n    }\n    /**\n     * Factory method for creating a `Change` from JSON and an optional customizer\n     * function to be applied to both the `before` and the `after` fields.\n     */\n    static fromJSON(json, customizer = (x) => x) {\n        let before = { ...json.before };\n        if (json.fieldMask) {\n            before = applyFieldMask(before, json.after, json.fieldMask);\n        }\n        return Change.fromObjects(customizer(before || {}), customizer(json.after || {}));\n    }\n    constructor(before, after) {\n        this.before = before;\n        this.after = after;\n    }\n}\nexports.Change = Change;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,cAAc,GAAG,KAAK;AAC/C,cAAc,GACd,SAAS,eAAe,YAAY,EAAE,KAAK,EAAE,SAAS;IAClD,MAAM,SAAS;QAAE,GAAG,KAAK;IAAC;IAC1B,MAAM,QAAQ,UAAU,KAAK,CAAC;IAC9B,KAAK,MAAM,QAAQ,MAAO;QACtB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,MAAM,OAAO,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC;QACjC,IAAI,MAAM,MAAM,GAAG,GAAG;YAClB,MAAM,CAAC,KAAK,GAAG,eAAe,iBAAiB,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE;YAC3H;QACJ;QACA,MAAM,MAAM,iBAAiB,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,YAAY,CAAC,KAAK;QAC1F,IAAI,OAAO,QAAQ,aAAa;YAC5B,OAAO,MAAM,CAAC,KAAK;QACvB,OACK;YACD,MAAM,CAAC,KAAK,GAAG;QACnB;IACJ;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG;AACzB;;;;;;;CAOC,GACD,MAAM;IACF;;;KAGC,GACD,OAAO,YAAY,MAAM,EAAE,KAAK,EAAE;QAC9B,OAAO,IAAI,OAAO,QAAQ;IAC9B;IACA;;;KAGC,GACD,OAAO,SAAS,IAAI,EAAE,aAAa,CAAC,IAAM,CAAC,EAAE;QACzC,IAAI,SAAS;YAAE,GAAG,KAAK,MAAM;QAAC;QAC9B,IAAI,KAAK,SAAS,EAAE;YAChB,SAAS,eAAe,QAAQ,KAAK,KAAK,EAAE,KAAK,SAAS;QAC9D;QACA,OAAO,OAAO,WAAW,CAAC,WAAW,UAAU,CAAC,IAAI,WAAW,KAAK,KAAK,IAAI,CAAC;IAClF;IACA,YAAY,MAAM,EAAE,KAAK,CAAE;QACvB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;IACjB;AACJ;AACA,QAAQ,MAAM,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/cloud-functions.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.optionsToEndpoint = exports.optionsToTrigger = exports.makeCloudFunction = exports.Change = void 0;\nconst logger_1 = require(\"../logger\");\nconst function_configuration_1 = require(\"./function-configuration\");\nconst encoding_1 = require(\"../common/encoding\");\nconst manifest_1 = require(\"../runtime/manifest\");\nconst options_1 = require(\"../common/options\");\nconst types_1 = require(\"../params/types\");\nconst onInit_1 = require(\"../common/onInit\");\nvar change_1 = require(\"../common/change\");\nObject.defineProperty(exports, \"Change\", { enumerable: true, get: function () { return change_1.Change; } });\n/** @internal */\nconst WILDCARD_REGEX = new RegExp(\"{[^/{}]*}\", \"g\");\n/** @internal */\nfunction makeCloudFunction({ contextOnlyHandler, dataConstructor = (raw) => raw.data, eventType, handler, labels = {}, legacyEventType, options = {}, provider, service, triggerResource, }) {\n    handler = (0, onInit_1.withInit)(handler !== null && handler !== void 0 ? handler : contextOnlyHandler);\n    const cloudFunction = (data, context) => {\n        if (legacyEventType && context.eventType === legacyEventType) {\n            /*\n             * v1beta1 event flow has different format for context, transform them to\n             * new format.\n             */\n            context.eventType = provider + \".\" + eventType;\n            context.resource = {\n                service,\n                name: context.resource,\n            };\n        }\n        const event = {\n            data,\n            context,\n        };\n        if (provider === \"google.firebase.database\") {\n            context.authType = _detectAuthType(event);\n            if (context.authType !== \"ADMIN\") {\n                context.auth = _makeAuth(event, context.authType);\n            }\n            else {\n                delete context.auth;\n            }\n        }\n        if (triggerResource() == null) {\n            Object.defineProperty(context, \"params\", {\n                get: () => {\n                    throw new Error(\"context.params is not available when using the handler namespace.\");\n                },\n            });\n        }\n        else {\n            context.params = context.params || _makeParams(context, triggerResource);\n        }\n        let promise;\n        if (labels && labels[\"deployment-scheduled\"]) {\n            // Scheduled function do not have meaningful data, so exclude it\n            promise = contextOnlyHandler(context);\n        }\n        else {\n            const dataOrChange = dataConstructor(event);\n            promise = handler(dataOrChange, context);\n        }\n        if (typeof promise === \"undefined\") {\n            (0, logger_1.warn)(\"Function returned undefined, expected Promise or value\");\n        }\n        return Promise.resolve(promise);\n    };\n    Object.defineProperty(cloudFunction, \"__trigger\", {\n        get: () => {\n            if (triggerResource() == null) {\n                return {};\n            }\n            const trigger = {\n                ...optionsToTrigger(options),\n                eventTrigger: {\n                    resource: triggerResource(),\n                    eventType: legacyEventType || provider + \".\" + eventType,\n                    service,\n                },\n            };\n            if (!!labels && Object.keys(labels).length) {\n                trigger.labels = { ...trigger.labels, ...labels };\n            }\n            return trigger;\n        },\n    });\n    Object.defineProperty(cloudFunction, \"__endpoint\", {\n        get: () => {\n            if (triggerResource() == null) {\n                return undefined;\n            }\n            const endpoint = {\n                platform: \"gcfv1\",\n                ...(0, manifest_1.initV1Endpoint)(options),\n                ...optionsToEndpoint(options),\n            };\n            if (options.schedule) {\n                endpoint.scheduleTrigger = (0, manifest_1.initV1ScheduleTrigger)(options.schedule.schedule, options);\n                (0, encoding_1.copyIfPresent)(endpoint.scheduleTrigger, options.schedule, \"timeZone\");\n                (0, encoding_1.copyIfPresent)(endpoint.scheduleTrigger.retryConfig, options.schedule.retryConfig, \"retryCount\", \"maxDoublings\", \"maxBackoffDuration\", \"maxRetryDuration\", \"minBackoffDuration\");\n            }\n            else {\n                endpoint.eventTrigger = {\n                    eventType: legacyEventType || provider + \".\" + eventType,\n                    eventFilters: {\n                        resource: triggerResource(),\n                    },\n                    retry: !!options.failurePolicy,\n                };\n            }\n            // Note: We intentionally don't make use of labels args here.\n            // labels is used to pass SDK-defined labels to the trigger, which isn't\n            // something we will do in the container contract world.\n            endpoint.labels = { ...endpoint.labels };\n            return endpoint;\n        },\n    });\n    if (options.schedule) {\n        cloudFunction.__requiredAPIs = [\n            {\n                api: \"cloudscheduler.googleapis.com\",\n                reason: \"Needed for scheduled functions.\",\n            },\n        ];\n    }\n    cloudFunction.run = handler || contextOnlyHandler;\n    return cloudFunction;\n}\nexports.makeCloudFunction = makeCloudFunction;\nfunction _makeParams(context, triggerResourceGetter) {\n    var _a, _b, _c;\n    if (context.params) {\n        // In unit testing, user may directly provide `context.params`.\n        return context.params;\n    }\n    if (!context.resource) {\n        // In unit testing, `resource` may be unpopulated for a test event.\n        return {};\n    }\n    const triggerResource = triggerResourceGetter();\n    const wildcards = triggerResource.match(WILDCARD_REGEX);\n    const params = {};\n    // Note: some tests don't set context.resource.name\n    const eventResourceParts = (_c = (_b = (_a = context === null || context === void 0 ? void 0 : context.resource) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.split) === null || _c === void 0 ? void 0 : _c.call(_b, \"/\");\n    if (wildcards && eventResourceParts) {\n        const triggerResourceParts = triggerResource.split(\"/\");\n        for (const wildcard of wildcards) {\n            const wildcardNoBraces = wildcard.slice(1, -1);\n            const position = triggerResourceParts.indexOf(wildcard);\n            params[wildcardNoBraces] = eventResourceParts[position];\n        }\n    }\n    return params;\n}\nfunction _makeAuth(event, authType) {\n    var _a, _b, _c, _d, _e, _f;\n    if (authType === \"UNAUTHENTICATED\") {\n        return null;\n    }\n    return {\n        uid: (_c = (_b = (_a = event.context) === null || _a === void 0 ? void 0 : _a.auth) === null || _b === void 0 ? void 0 : _b.variable) === null || _c === void 0 ? void 0 : _c.uid,\n        token: (_f = (_e = (_d = event.context) === null || _d === void 0 ? void 0 : _d.auth) === null || _e === void 0 ? void 0 : _e.variable) === null || _f === void 0 ? void 0 : _f.token,\n    };\n}\nfunction _detectAuthType(event) {\n    var _a, _b, _c, _d;\n    if ((_b = (_a = event.context) === null || _a === void 0 ? void 0 : _a.auth) === null || _b === void 0 ? void 0 : _b.admin) {\n        return \"ADMIN\";\n    }\n    if ((_d = (_c = event.context) === null || _c === void 0 ? void 0 : _c.auth) === null || _d === void 0 ? void 0 : _d.variable) {\n        return \"USER\";\n    }\n    return \"UNAUTHENTICATED\";\n}\n/** @hidden */\nfunction optionsToTrigger(options) {\n    const trigger = {};\n    (0, encoding_1.copyIfPresent)(trigger, options, \"regions\", \"schedule\", \"minInstances\", \"maxInstances\", \"ingressSettings\", \"vpcConnectorEgressSettings\", \"vpcConnector\", \"labels\", \"secrets\");\n    (0, encoding_1.convertIfPresent)(trigger, options, \"failurePolicy\", \"failurePolicy\", (policy) => {\n        if (policy === false) {\n            return undefined;\n        }\n        else if (policy === true) {\n            return function_configuration_1.DEFAULT_FAILURE_POLICY;\n        }\n        else {\n            return policy;\n        }\n    });\n    (0, encoding_1.convertIfPresent)(trigger, options, \"timeout\", \"timeoutSeconds\", encoding_1.durationFromSeconds);\n    (0, encoding_1.convertIfPresent)(trigger, options, \"availableMemoryMb\", \"memory\", (mem) => {\n        const memoryLookup = {\n            \"128MB\": 128,\n            \"256MB\": 256,\n            \"512MB\": 512,\n            \"1GB\": 1024,\n            \"2GB\": 2048,\n            \"4GB\": 4096,\n            \"8GB\": 8192,\n        };\n        return memoryLookup[mem];\n    });\n    (0, encoding_1.convertIfPresent)(trigger, options, \"serviceAccountEmail\", \"serviceAccount\", encoding_1.serviceAccountFromShorthand);\n    return trigger;\n}\nexports.optionsToTrigger = optionsToTrigger;\nfunction optionsToEndpoint(options) {\n    const endpoint = {};\n    (0, encoding_1.copyIfPresent)(endpoint, options, \"omit\", \"minInstances\", \"maxInstances\", \"ingressSettings\", \"labels\", \"timeoutSeconds\");\n    (0, encoding_1.convertIfPresent)(endpoint, options, \"region\", \"regions\");\n    (0, encoding_1.convertIfPresent)(endpoint, options, \"serviceAccountEmail\", \"serviceAccount\", (sa) => sa);\n    (0, encoding_1.convertIfPresent)(endpoint, options, \"secretEnvironmentVariables\", \"secrets\", (secrets) => secrets.map((secret) => ({ key: secret instanceof types_1.SecretParam ? secret.name : secret })));\n    if ((options === null || options === void 0 ? void 0 : options.vpcConnector) !== undefined) {\n        if (options.vpcConnector === null || options.vpcConnector instanceof options_1.ResetValue) {\n            endpoint.vpc = function_configuration_1.RESET_VALUE;\n        }\n        else {\n            const vpc = { connector: options.vpcConnector };\n            (0, encoding_1.convertIfPresent)(vpc, options, \"egressSettings\", \"vpcConnectorEgressSettings\");\n            endpoint.vpc = vpc;\n        }\n    }\n    (0, encoding_1.convertIfPresent)(endpoint, options, \"availableMemoryMb\", \"memory\", (mem) => {\n        const memoryLookup = {\n            \"128MB\": 128,\n            \"256MB\": 256,\n            \"512MB\": 512,\n            \"1GB\": 1024,\n            \"2GB\": 2048,\n            \"4GB\": 4096,\n            \"8GB\": 8192,\n        };\n        return typeof mem === \"object\" ? mem : memoryLookup[mem];\n    });\n    return endpoint;\n}\nexports.optionsToEndpoint = optionsToEndpoint;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1613, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/analytics.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExportBundleInfo = exports.UserPropertyValue = exports.UserDimensions = exports.AnalyticsEvent = exports.AnalyticsEventBuilder = exports._eventWithOptions = exports.event = exports.service = exports.provider = void 0;\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.analytics\";\n/** @internal */\nexports.service = \"app-measurement.com\";\n/**\n * Registers a function to handle analytics events.\n *\n * @param analyticsEventType Name of the analytics event type to which\n *   this Cloud Function is scoped.\n *\n * @returns Analytics event builder interface.\n */\nfunction event(analyticsEventType) {\n    return _eventWithOptions(analyticsEventType, {});\n}\nexports.event = event;\n/** @internal */\nfunction _eventWithOptions(analyticsEventType, options) {\n    return new AnalyticsEventBuilder(() => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        return \"projects/\" + process.env.GCLOUD_PROJECT + \"/events/\" + analyticsEventType;\n    }, options);\n}\nexports._eventWithOptions = _eventWithOptions;\n/**\n * The Firebase Analytics event builder interface.\n *\n * Access via `functions.analytics.event()`.\n */\nclass AnalyticsEventBuilder {\n    /** @hidden */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /**\n     * Event handler that fires every time a Firebase Analytics event occurs.\n     *\n     * @param handler Event handler that fires every time a Firebase Analytics event\n     *   occurs.\n     *\n     * @returns A function that you can export and deploy.\n     */\n    onLog(handler) {\n        const dataConstructor = (raw) => {\n            return new AnalyticsEvent(raw.data);\n        };\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            eventType: \"event.log\",\n            service: exports.service,\n            legacyEventType: `providers/google.firebase.analytics/eventTypes/event.log`,\n            triggerResource: this.triggerResource,\n            dataConstructor,\n            options: this.options,\n        });\n    }\n}\nexports.AnalyticsEventBuilder = AnalyticsEventBuilder;\n/** Interface representing a Firebase Analytics event that was logged for a specific user. */\nclass AnalyticsEvent {\n    /** @hidden */\n    constructor(wireFormat) {\n        this.params = {}; // In case of absent field, show empty (not absent) map.\n        if (wireFormat.eventDim && wireFormat.eventDim.length > 0) {\n            // If there's an eventDim, there'll always be exactly one.\n            const eventDim = wireFormat.eventDim[0];\n            copyField(eventDim, this, \"name\");\n            copyField(eventDim, this, \"params\", (p) => mapKeys(p, unwrapValue));\n            copyFieldTo(eventDim, this, \"valueInUsd\", \"valueInUSD\");\n            copyFieldTo(eventDim, this, \"date\", \"reportingDate\");\n            copyTimestampToString(eventDim, this, \"timestampMicros\", \"logTime\");\n            copyTimestampToString(eventDim, this, \"previousTimestampMicros\", \"previousLogTime\");\n        }\n        copyFieldTo(wireFormat, this, \"userDim\", \"user\", (dim) => new UserDimensions(dim));\n    }\n}\nexports.AnalyticsEvent = AnalyticsEvent;\n/**\n * Interface representing the user who triggered the events.\n */\nclass UserDimensions {\n    /** @hidden */\n    constructor(wireFormat) {\n        // These are interfaces or primitives, no transformation needed.\n        copyFields(wireFormat, this, [\"userId\", \"deviceInfo\", \"geoInfo\", \"appInfo\"]);\n        // The following fields do need transformations of some sort.\n        copyTimestampToString(wireFormat, this, \"firstOpenTimestampMicros\", \"firstOpenTime\");\n        this.userProperties = {}; // With no entries in the wire format, present an empty (as opposed to absent) map.\n        copyField(wireFormat, this, \"userProperties\", (r) => {\n            const entries = Object.entries(r).map(([k, v]) => [k, new UserPropertyValue(v)]);\n            return Object.fromEntries(entries);\n        });\n        copyField(wireFormat, this, \"bundleInfo\", (r) => new ExportBundleInfo(r));\n        // BUG(36000368) Remove when no longer necessary\n        /* tslint:disable:no-string-literal */\n        if (!this.userId && this.userProperties[\"user_id\"]) {\n            this.userId = this.userProperties[\"user_id\"].value;\n        }\n        /* tslint:enable:no-string-literal */\n    }\n}\nexports.UserDimensions = UserDimensions;\n/** Predefined or custom properties stored on the client side. */\nclass UserPropertyValue {\n    /** @hidden */\n    constructor(wireFormat) {\n        copyField(wireFormat, this, \"value\", unwrapValueAsString);\n        copyTimestampToString(wireFormat, this, \"setTimestampUsec\", \"setTime\");\n    }\n}\nexports.UserPropertyValue = UserPropertyValue;\n/** Interface representing the bundle these events were uploaded to. */\nclass ExportBundleInfo {\n    /** @hidden */\n    constructor(wireFormat) {\n        copyField(wireFormat, this, \"bundleSequenceId\");\n        copyTimestampToMillis(wireFormat, this, \"serverTimestampOffsetMicros\", \"serverTimestampOffset\");\n    }\n}\nexports.ExportBundleInfo = ExportBundleInfo;\n/** @hidden */\nfunction copyFieldTo(from, to, fromField, toField, transform) {\n    if (typeof from[fromField] === \"undefined\") {\n        return;\n    }\n    if (transform) {\n        to[toField] = transform(from[fromField]);\n        return;\n    }\n    to[toField] = from[fromField];\n}\n/** @hidden */\nfunction copyField(from, to, field, transform = (from) => from) {\n    copyFieldTo(from, to, field, field, transform);\n}\n/** @hidden */\nfunction copyFields(from, to, fields) {\n    for (const field of fields) {\n        copyField(from, to, field);\n    }\n}\nfunction mapKeys(obj, transform) {\n    const entries = Object.entries(obj).map(([k, v]) => [k, transform(v)]);\n    return Object.fromEntries(entries);\n}\n// The incoming payload will have fields like:\n// {\n//   'myInt': {\n//     'intValue': '123'\n//   },\n//   'myDouble': {\n//     'doubleValue': 1.0\n//   },\n//   'myFloat': {\n//     'floatValue': 1.1\n//   },\n//   'myString': {\n//     'stringValue': 'hi!'\n//   }\n// }\n//\n// The following method will remove these four types of 'xValue' fields, flattening them\n// to just their values, as a string:\n// {\n//   'myInt': '123',\n//   'myDouble': '1.0',\n//   'myFloat': '1.1',\n//   'myString': 'hi!'\n// }\n//\n// Note that while 'intValue' will have a quoted payload, 'doubleValue' and 'floatValue' will not. This\n// is due to the encoding library, which renders int64 values as strings to avoid loss of precision. This\n// method always returns a string, similarly to avoid loss of precision, unlike the less-conservative\n// 'unwrapValue' method just below.\n/** @hidden */\nfunction unwrapValueAsString(wrapped) {\n    const key = Object.keys(wrapped)[0];\n    return wrapped[key].toString();\n}\n// Ditto as the method above, but returning the values in the idiomatic JavaScript type (string for strings,\n// number for numbers):\n// {\n//   'myInt': 123,\n//   'myDouble': 1.0,\n//   'myFloat': 1.1,\n//   'myString': 'hi!'\n// }\n//\n// The field names in the incoming xValue fields identify the type a value has, which for JavaScript's\n// purposes can be divided into 'number' versus 'string'. This method will render all the numbers as\n// JavaScript's 'number' type, since we prefer using idiomatic types. Note that this may lead to loss\n// in precision for int64 fields, so use with care.\n/** @hidden */\nconst xValueNumberFields = [\"intValue\", \"floatValue\", \"doubleValue\"];\n/** @hidden */\nfunction unwrapValue(wrapped) {\n    const key = Object.keys(wrapped)[0];\n    const value = unwrapValueAsString(wrapped);\n    return xValueNumberFields.includes(key) ? Number(value) : value;\n}\n// The JSON payload delivers timestamp fields as strings of timestamps denoted in microseconds.\n// The JavaScript convention is to use numbers denoted in milliseconds. This method\n// makes it easy to convert a field of one type into the other.\n/** @hidden */\nfunction copyTimestampToMillis(from, to, fromName, toName) {\n    if (from[fromName] !== undefined) {\n        to[toName] = Math.round(from[fromName] / 1000);\n    }\n}\n// The JSON payload delivers timestamp fields as strings of timestamps denoted in microseconds.\n// In our SDK, we'd like to present timestamp as ISO-format strings. This method makes it easy\n// to convert a field of one type into the other.\n/** @hidden */\nfunction copyTimestampToString(from, to, fromName, toName) {\n    if (from[fromName] !== undefined) {\n        to[toName] = new Date(from[fromName] / 1000).toISOString();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/config.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.firebaseConfig = exports.resetCache = void 0;\nconst fs_1 = require(\"fs\");\nconst path = require(\"path\");\nconst logger = require(\"../logger\");\nlet cache = null;\n/**\n * @internal\n * @alpha\n */\nfunction resetCache(newCache = null) {\n    cache = newCache;\n}\nexports.resetCache = resetCache;\n/**\n * Get the fields you need to initialize a Firebase app\n * @alpha\n */\nfunction firebaseConfig() {\n    if (cache) {\n        return cache;\n    }\n    let env = process.env.FIREBASE_CONFIG;\n    if (env) {\n        // Firebase Tools will always use a JSON blob in prod, but docs\n        // explicitly state that the user can set the env to a file:\n        // https://firebase.google.com/docs/admin/setup#initialize-without-parameters\n        if (!env.startsWith(\"{\")) {\n            env = (0, fs_1.readFileSync)(path.join(process.env.PWD, env)).toString(\"utf8\");\n        }\n        cache = JSON.parse(env);\n        return cache;\n    }\n    if (process.env.GCLOUD_PROJECT) {\n        logger.warn(\"Warning, estimating Firebase Config based on GCLOUD_PROJECT. Initializing firebase-admin may fail\");\n        cache = {\n            databaseURL: process.env.DATABASE_URL || `https://${process.env.GCLOUD_PROJECT}.firebaseio.com`,\n            storageBucket: process.env.STORAGE_BUCKET_URL || `${process.env.GCLOUD_PROJECT}.appspot.com`,\n            projectId: process.env.GCLOUD_PROJECT,\n        };\n        return cache;\n    }\n    else {\n        logger.warn(\"Warning, FIREBASE_CONFIG and GCLOUD_PROJECT environment variables are missing. Initializing firebase-admin will fail\");\n    }\n    return null;\n}\nexports.firebaseConfig = firebaseConfig;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,QAAQ,UAAU,GAAG,KAAK;AACnD,MAAM;AACN,MAAM;AACN,MAAM;AACN,IAAI,QAAQ;AACZ;;;CAGC,GACD,SAAS,WAAW,WAAW,IAAI;IAC/B,QAAQ;AACZ;AACA,QAAQ,UAAU,GAAG;AACrB;;;CAGC,GACD,SAAS;IACL,IAAI,OAAO;QACP,OAAO;IACX;IACA,IAAI,MAAM,QAAQ,GAAG,CAAC,eAAe;IACrC,IAAI,KAAK;QACL,+DAA+D;QAC/D,4DAA4D;QAC5D,6EAA6E;QAC7E,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM;YACtB,MAAM,CAAC,GAAG,KAAK,YAAY,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,EAAE,MAAM,QAAQ,CAAC;QAC3E;QACA,QAAQ,KAAK,KAAK,CAAC;QACnB,OAAO;IACX;IACA,IAAI,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC5B,OAAO,IAAI,CAAC;QACZ,QAAQ;YACJ,aAAa,QAAQ,GAAG,CAAC,YAAY,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,cAAc,CAAC,eAAe,CAAC;YAC/F,eAAe,QAAQ,GAAG,CAAC,kBAAkB,IAAI,GAAG,QAAQ,GAAG,CAAC,cAAc,CAAC,YAAY,CAAC;YAC5F,WAAW,QAAQ,GAAG,CAAC,cAAc;QACzC;QACA,OAAO;IACX,OACK;QACD,OAAO,IAAI,CAAC;IAChB;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1910, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/app.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setApp = exports.getApp = void 0;\nconst app_1 = require(\"firebase-admin/app\");\nconst config_1 = require(\"./config\");\nconst APP_NAME = \"__FIREBASE_FUNCTIONS_SDK__\";\nlet cache;\nfunction getApp() {\n    if (typeof cache === \"undefined\") {\n        try {\n            cache = (0, app_1.getApp)( /* default */);\n        }\n        catch {\n            // Default app does not exist. Initialize app.\n            cache = (0, app_1.initializeApp)({\n                ...(0, config_1.firebaseConfig)(),\n                credential: (0, app_1.applicationDefault)(),\n            }, APP_NAME);\n        }\n    }\n    return cache;\n}\nexports.getApp = getApp;\n/**\n * This function allows the Firebase Emulator Suite to override the FirebaseApp instance\n * used by the Firebase Functions SDK. Developers should never call this function for\n * other purposes.\n * N.B. For clarity for use in testing this name has no mention of emulation, but\n * it must be exported from index as app.setEmulatedAdminApp or we break the emulator.\n * We can remove this export when:\n * A) We complete the new emulator and no longer depend on monkeypatching\n * B) We tweak the CLI to look for different APIs to monkeypatch depending on versions.\n * @alpha\n */\nfunction setApp(app) {\n    if ((cache === null || cache === void 0 ? void 0 : cache.name) === APP_NAME) {\n        void (0, app_1.deleteApp)(cache);\n    }\n    cache = app;\n}\nexports.setApp = setApp;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG,KAAK;AACvC,MAAM;AACN,MAAM;AACN,MAAM,WAAW;AACjB,IAAI;AACJ,SAAS;IACL,IAAI,OAAO,UAAU,aAAa;QAC9B,IAAI;YACA,QAAQ,CAAC,GAAG,MAAM,MAAM;QAC5B,EACA,OAAM;YACF,8CAA8C;YAC9C,QAAQ,CAAC,GAAG,MAAM,aAAa,EAAE;gBAC7B,GAAG,CAAC,GAAG,SAAS,cAAc,GAAG;gBACjC,YAAY,CAAC,GAAG,MAAM,kBAAkB;YAC5C,GAAG;QACP;IACJ;IACA,OAAO;AACX;AACA,QAAQ,MAAM,GAAG;AACjB;;;;;;;;;;CAUC,GACD,SAAS,OAAO,GAAG;IACf,IAAI,CAAC,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,UAAU;QACzE,KAAK,CAAC,GAAG,MAAM,SAAS,EAAE;IAC9B;IACA,QAAQ;AACZ;AACA,QAAQ,MAAM,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1977, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/debug.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDebugFeatureEnabled = exports.debugFeatureValue = void 0;\n// Do NOT turn on a debug feature in production.\nconst debugMode = process.env.FIREBASE_DEBUG_MODE === \"true\";\nfunction loadDebugFeatures() {\n    if (!debugMode) {\n        return {};\n    }\n    try {\n        const obj = JSON.parse(process.env.FIREBASE_DEBUG_FEATURES);\n        if (typeof obj !== \"object\") {\n            return {};\n        }\n        return obj;\n    }\n    catch (e) {\n        return {};\n    }\n}\n/* @internal */\nfunction debugFeatureValue(feat) {\n    if (!debugMode) {\n        return;\n    }\n    return loadDebugFeatures()[feat];\n}\nexports.debugFeatureValue = debugFeatureValue;\n/* @internal */\nfunction isDebugFeatureEnabled(feat) {\n    return debugMode && !!debugFeatureValue(feat);\n}\nexports.isDebugFeatureEnabled = isDebugFeatureEnabled;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,qBAAqB,GAAG,QAAQ,iBAAiB,GAAG,KAAK;AACjE,gDAAgD;AAChD,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB,KAAK;AACtD,SAAS;IACL,IAAI,CAAC,WAAW;QACZ,OAAO,CAAC;IACZ;IACA,IAAI;QACA,MAAM,MAAM,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,uBAAuB;QAC1D,IAAI,OAAO,QAAQ,UAAU;YACzB,OAAO,CAAC;QACZ;QACA,OAAO;IACX,EACA,OAAO,GAAG;QACN,OAAO,CAAC;IACZ;AACJ;AACA,aAAa,GACb,SAAS,kBAAkB,IAAI;IAC3B,IAAI,CAAC,WAAW;QACZ;IACJ;IACA,OAAO,mBAAmB,CAAC,KAAK;AACpC;AACA,QAAQ,iBAAiB,GAAG;AAC5B,aAAa,GACb,SAAS,sBAAsB,IAAI;IAC/B,OAAO,aAAa,CAAC,CAAC,kBAAkB;AAC5C;AACA,QAAQ,qBAAqB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2035, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/providers/https.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onCallHandler = exports.checkAuthToken = exports.unsafeDecodeAppCheckToken = exports.unsafeDecodeIdToken = exports.unsafeDecodeToken = exports.decode = exports.encode = exports.isValidRequest = exports.HttpsError = exports.DEFAULT_HEARTBEAT_SECONDS = exports.ORIGINAL_AUTH_HEADER = exports.CALLABLE_AUTH_HEADER = void 0;\nconst cors = require(\"cors\");\nconst logger = require(\"../../logger\");\n// TODO(inlined): Decide whether we want to un-version apps or whether we want a\n// different strategy\nconst app_check_1 = require(\"firebase-admin/app-check\");\nconst auth_1 = require(\"firebase-admin/auth\");\nconst app_1 = require(\"../app\");\nconst debug_1 = require(\"../debug\");\nconst JWT_REGEX = /^[a-zA-Z0-9\\-_=]+?\\.[a-zA-Z0-9\\-_=]+?\\.([a-zA-Z0-9\\-_=]+)?$/;\n/** @internal */\nexports.CALLABLE_AUTH_HEADER = \"x-callable-context-auth\";\n/** @internal */\nexports.ORIGINAL_AUTH_HEADER = \"x-original-auth\";\n/** @internal */\nexports.DEFAULT_HEARTBEAT_SECONDS = 30;\n/**\n * Standard error codes and HTTP statuses for different ways a request can fail,\n * as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a client error code string to\n * to the HTTP format error code string and status, and make sure it's in the\n * supported set.\n */\nconst errorCodeMap = {\n    ok: { canonicalName: \"OK\", status: 200 },\n    cancelled: { canonicalName: \"CANCELLED\", status: 499 },\n    unknown: { canonicalName: \"UNKNOWN\", status: 500 },\n    \"invalid-argument\": { canonicalName: \"INVALID_ARGUMENT\", status: 400 },\n    \"deadline-exceeded\": { canonicalName: \"DEADLINE_EXCEEDED\", status: 504 },\n    \"not-found\": { canonicalName: \"NOT_FOUND\", status: 404 },\n    \"already-exists\": { canonicalName: \"ALREADY_EXISTS\", status: 409 },\n    \"permission-denied\": { canonicalName: \"PERMISSION_DENIED\", status: 403 },\n    unauthenticated: { canonicalName: \"UNAUTHENTICATED\", status: 401 },\n    \"resource-exhausted\": { canonicalName: \"RESOURCE_EXHAUSTED\", status: 429 },\n    \"failed-precondition\": { canonicalName: \"FAILED_PRECONDITION\", status: 400 },\n    aborted: { canonicalName: \"ABORTED\", status: 409 },\n    \"out-of-range\": { canonicalName: \"OUT_OF_RANGE\", status: 400 },\n    unimplemented: { canonicalName: \"UNIMPLEMENTED\", status: 501 },\n    internal: { canonicalName: \"INTERNAL\", status: 500 },\n    unavailable: { canonicalName: \"UNAVAILABLE\", status: 503 },\n    \"data-loss\": { canonicalName: \"DATA_LOSS\", status: 500 },\n};\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nclass HttpsError extends Error {\n    constructor(code, message, details) {\n        super(message);\n        // A sanity check for non-TypeScript consumers.\n        if (code in errorCodeMap === false) {\n            throw new Error(`Unknown error code: ${code}.`);\n        }\n        this.code = code;\n        this.details = details;\n        this.httpErrorCode = errorCodeMap[code];\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     */\n    toJSON() {\n        const { details, httpErrorCode: { canonicalName: status }, message, } = this;\n        return {\n            ...(details === undefined ? {} : { details }),\n            message,\n            status,\n        };\n    }\n}\nexports.HttpsError = HttpsError;\n/** @hidden */\n// Returns true if req is a properly formatted callable request.\nfunction isValidRequest(req) {\n    // The body must not be empty.\n    if (!req.body) {\n        logger.warn(\"Request is missing body.\");\n        return false;\n    }\n    // Make sure it's a POST.\n    if (req.method !== \"POST\") {\n        logger.warn(\"Request has invalid method.\", req.method);\n        return false;\n    }\n    // Check that the Content-Type is JSON.\n    let contentType = (req.header(\"Content-Type\") || \"\").toLowerCase();\n    // If it has a charset, just ignore it for now.\n    const semiColon = contentType.indexOf(\";\");\n    if (semiColon >= 0) {\n        contentType = contentType.slice(0, semiColon).trim();\n    }\n    if (contentType !== \"application/json\") {\n        logger.warn(\"Request has incorrect Content-Type.\", contentType);\n        return false;\n    }\n    // The body must have data.\n    if (typeof req.body.data === \"undefined\") {\n        logger.warn(\"Request body is missing data.\", req.body);\n        return false;\n    }\n    // TODO(klimt): Allow only specific http headers.\n    // Verify that the body does not have any extra fields.\n    const extraKeys = Object.keys(req.body).filter((field) => field !== \"data\");\n    if (extraKeys.length !== 0) {\n        logger.warn(\"Request body has extra fields: \", extraKeys.join(\", \"));\n        return false;\n    }\n    return true;\n}\nexports.isValidRequest = isValidRequest;\n/** @hidden */\nconst LONG_TYPE = \"type.googleapis.com/google.protobuf.Int64Value\";\n/** @hidden */\nconst UNSIGNED_LONG_TYPE = \"type.googleapis.com/google.protobuf.UInt64Value\";\n/**\n * Encodes arbitrary data in our special format for JSON.\n * This is exposed only for testing.\n */\n/** @hidden */\nfunction encode(data) {\n    if (data === null || typeof data === \"undefined\") {\n        return null;\n    }\n    if (data instanceof Number) {\n        data = data.valueOf();\n    }\n    if (Number.isFinite(data)) {\n        // Any number in JS is safe to put directly in JSON and parse as a double\n        // without any loss of precision.\n        return data;\n    }\n    if (typeof data === \"boolean\") {\n        return data;\n    }\n    if (typeof data === \"string\") {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return data.map(encode);\n    }\n    if (typeof data === \"object\" || typeof data === \"function\") {\n        // Sadly we don't have Object.fromEntries in Node 10, so we can't use a single\n        // list comprehension\n        const obj = {};\n        for (const [k, v] of Object.entries(data)) {\n            obj[k] = encode(v);\n        }\n        return obj;\n    }\n    // If we got this far, the data is not encodable.\n    logger.error(\"Data cannot be encoded in JSON.\", data);\n    throw new Error(`Data cannot be encoded in JSON: ${data}`);\n}\nexports.encode = encode;\n/**\n * Decodes our special format for JSON into native types.\n * This is exposed only for testing.\n */\n/** @hidden */\nfunction decode(data) {\n    if (data === null) {\n        return data;\n    }\n    if (data[\"@type\"]) {\n        switch (data[\"@type\"]) {\n            case LONG_TYPE:\n            // Fall through and handle this the same as unsigned.\n            case UNSIGNED_LONG_TYPE: {\n                // Technically, this could work return a valid number for malformed\n                // data if there was a number followed by garbage. But it's just not\n                // worth all the extra code to detect that case.\n                const value = parseFloat(data.value);\n                if (isNaN(value)) {\n                    logger.error(\"Data cannot be decoded from JSON.\", data);\n                    throw new Error(`Data cannot be decoded from JSON: ${data}`);\n                }\n                return value;\n            }\n            default: {\n                logger.error(\"Data cannot be decoded from JSON.\", data);\n                throw new Error(`Data cannot be decoded from JSON: ${data}`);\n            }\n        }\n    }\n    if (Array.isArray(data)) {\n        return data.map(decode);\n    }\n    if (typeof data === \"object\") {\n        const obj = {};\n        for (const [k, v] of Object.entries(data)) {\n            obj[k] = decode(v);\n        }\n        return obj;\n    }\n    // Anything else is safe to return.\n    return data;\n}\nexports.decode = decode;\n/** @internal */\nfunction unsafeDecodeToken(token) {\n    if (!JWT_REGEX.test(token)) {\n        return {};\n    }\n    const components = token.split(\".\").map((s) => Buffer.from(s, \"base64\").toString());\n    let payload = components[1];\n    if (typeof payload === \"string\") {\n        try {\n            const obj = JSON.parse(payload);\n            if (typeof obj === \"object\") {\n                payload = obj;\n            }\n        }\n        catch (e) {\n            // ignore error\n        }\n    }\n    return payload;\n}\nexports.unsafeDecodeToken = unsafeDecodeToken;\n/**\n * Decode, but not verify, a Auth ID token.\n *\n * Do not use in production. Token should always be verified using the Admin SDK.\n *\n * This is exposed only for testing.\n */\n/** @internal */\nfunction unsafeDecodeIdToken(token) {\n    const decoded = unsafeDecodeToken(token);\n    decoded.uid = decoded.sub;\n    return decoded;\n}\nexports.unsafeDecodeIdToken = unsafeDecodeIdToken;\n/**\n * Decode, but not verify, an App Check token.\n *\n * Do not use in production. Token should always be verified using the Admin SDK.\n *\n * This is exposed only for testing.\n */\n/** @internal */\nfunction unsafeDecodeAppCheckToken(token) {\n    const decoded = unsafeDecodeToken(token);\n    decoded.app_id = decoded.sub;\n    return decoded;\n}\nexports.unsafeDecodeAppCheckToken = unsafeDecodeAppCheckToken;\n/**\n * Check and verify tokens included in the requests. Once verified, tokens\n * are injected into the callable context.\n *\n * @param {Request} req - Request sent to the Callable function.\n * @param {CallableContext} ctx - Context to be sent to callable function handler.\n * @returns {CallableTokenStatus} Status of the token verifications.\n */\n/** @internal */\nasync function checkTokens(req, ctx, options) {\n    const verifications = {\n        app: \"INVALID\",\n        auth: \"INVALID\",\n    };\n    [verifications.auth, verifications.app] = await Promise.all([\n        checkAuthToken(req, ctx),\n        checkAppCheckToken(req, ctx, options),\n    ]);\n    const logPayload = {\n        verifications,\n        \"logging.googleapis.com/labels\": {\n            \"firebase-log-type\": \"callable-request-verification\",\n        },\n    };\n    const errs = [];\n    if (verifications.app === \"INVALID\") {\n        errs.push(\"AppCheck token was rejected.\");\n    }\n    if (verifications.auth === \"INVALID\") {\n        errs.push(\"Auth token was rejected.\");\n    }\n    if (errs.length === 0) {\n        logger.debug(\"Callable request verification passed\", logPayload);\n    }\n    else {\n        logger.warn(`Callable request verification failed: ${errs.join(\" \")}`, logPayload);\n    }\n    return verifications;\n}\n/** @interanl */\nasync function checkAuthToken(req, ctx) {\n    const authorization = req.header(\"Authorization\");\n    if (!authorization) {\n        return \"MISSING\";\n    }\n    const match = authorization.match(/^Bearer (.*)$/i);\n    if (!match) {\n        return \"INVALID\";\n    }\n    const idToken = match[1];\n    try {\n        let authToken;\n        if ((0, debug_1.isDebugFeatureEnabled)(\"skipTokenVerification\")) {\n            authToken = unsafeDecodeIdToken(idToken);\n        }\n        else {\n            authToken = await (0, auth_1.getAuth)((0, app_1.getApp)()).verifyIdToken(idToken);\n        }\n        ctx.auth = {\n            uid: authToken.uid,\n            token: authToken,\n        };\n        return \"VALID\";\n    }\n    catch (err) {\n        logger.warn(\"Failed to validate auth token.\", err);\n        return \"INVALID\";\n    }\n}\nexports.checkAuthToken = checkAuthToken;\n/** @internal */\nasync function checkAppCheckToken(req, ctx, options) {\n    var _a;\n    const appCheckToken = req.header(\"X-Firebase-AppCheck\");\n    if (!appCheckToken) {\n        return \"MISSING\";\n    }\n    try {\n        let appCheckData;\n        if ((0, debug_1.isDebugFeatureEnabled)(\"skipTokenVerification\")) {\n            const decodedToken = unsafeDecodeAppCheckToken(appCheckToken);\n            appCheckData = { appId: decodedToken.app_id, token: decodedToken };\n            if (options.consumeAppCheckToken) {\n                appCheckData.alreadyConsumed = false;\n            }\n        }\n        else {\n            const appCheck = (0, app_check_1.getAppCheck)((0, app_1.getApp)());\n            if (options.consumeAppCheckToken) {\n                if (((_a = appCheck.verifyToken) === null || _a === void 0 ? void 0 : _a.length) === 1) {\n                    const errorMsg = \"Unsupported version of the Admin SDK.\" +\n                        \" App Check token will not be consumed.\" +\n                        \" Please upgrade the firebase-admin to the latest version.\";\n                    logger.error(errorMsg);\n                    throw new HttpsError(\"internal\", \"Internal Error\");\n                }\n                appCheckData = await (0, app_check_1.getAppCheck)((0, app_1.getApp)()).verifyToken(appCheckToken, { consume: true });\n            }\n            else {\n                appCheckData = await (0, app_check_1.getAppCheck)((0, app_1.getApp)()).verifyToken(appCheckToken);\n            }\n        }\n        ctx.app = appCheckData;\n        return \"VALID\";\n    }\n    catch (err) {\n        logger.warn(\"Failed to validate AppCheck token.\", err);\n        if (err instanceof HttpsError) {\n            throw err;\n        }\n        return \"INVALID\";\n    }\n}\n/** @internal */\nfunction onCallHandler(options, handler, version) {\n    const wrapped = wrapOnCallHandler(options, handler, version);\n    return (req, res) => {\n        return new Promise((resolve) => {\n            res.on(\"finish\", resolve);\n            cors(options.cors)(req, res, () => {\n                resolve(wrapped(req, res));\n            });\n        });\n    };\n}\nexports.onCallHandler = onCallHandler;\nfunction encodeSSE(data) {\n    return `data: ${JSON.stringify(data)}\\n\\n`;\n}\n/** @internal */\nfunction wrapOnCallHandler(options, handler, version) {\n    return async (req, res) => {\n        var _a;\n        const abortController = new AbortController();\n        let heartbeatInterval = null;\n        const heartbeatSeconds = options.heartbeatSeconds === undefined ? exports.DEFAULT_HEARTBEAT_SECONDS : options.heartbeatSeconds;\n        const clearScheduledHeartbeat = () => {\n            if (heartbeatInterval) {\n                clearTimeout(heartbeatInterval);\n                heartbeatInterval = null;\n            }\n        };\n        const scheduleHeartbeat = () => {\n            clearScheduledHeartbeat();\n            if (!abortController.signal.aborted) {\n                heartbeatInterval = setTimeout(() => {\n                    if (!abortController.signal.aborted) {\n                        res.write(\": ping\\n\\n\");\n                        scheduleHeartbeat();\n                    }\n                }, heartbeatSeconds * 1000);\n            }\n        };\n        res.on(\"close\", () => {\n            clearScheduledHeartbeat();\n            abortController.abort();\n        });\n        try {\n            if (!isValidRequest(req)) {\n                logger.error(\"Invalid request, unable to process.\");\n                throw new HttpsError(\"invalid-argument\", \"Bad Request\");\n            }\n            const context = { rawRequest: req };\n            // TODO(colerogers): yank this when we release a breaking change of the CLI that removes\n            // our monkey-patching code referenced below and increases the minimum supported SDK version.\n            //\n            // Note: This code is needed to fix v1 callable functions in the emulator with a monorepo setup.\n            // The original monkey-patched code lived in the functionsEmulatorRuntime\n            // (link: https://github.com/firebase/firebase-tools/blob/accea7abda3cc9fa6bb91368e4895faf95281c60/src/emulator/functionsEmulatorRuntime.ts#L480)\n            // and was not compatible with how monorepos separate out packages (see https://github.com/firebase/firebase-tools/issues/5210).\n            if ((0, debug_1.isDebugFeatureEnabled)(\"skipTokenVerification\") && version === \"gcfv1\") {\n                const authContext = context.rawRequest.header(exports.CALLABLE_AUTH_HEADER);\n                if (authContext) {\n                    logger.debug(\"Callable functions auth override\", {\n                        key: exports.CALLABLE_AUTH_HEADER,\n                        value: authContext,\n                    });\n                    context.auth = JSON.parse(decodeURIComponent(authContext));\n                    delete context.rawRequest.headers[exports.CALLABLE_AUTH_HEADER];\n                }\n                const originalAuth = context.rawRequest.header(exports.ORIGINAL_AUTH_HEADER);\n                if (originalAuth) {\n                    context.rawRequest.headers[\"authorization\"] = originalAuth;\n                    delete context.rawRequest.headers[exports.ORIGINAL_AUTH_HEADER];\n                }\n            }\n            const tokenStatus = await checkTokens(req, context, options);\n            if (tokenStatus.auth === \"INVALID\") {\n                throw new HttpsError(\"unauthenticated\", \"Unauthenticated\");\n            }\n            if (tokenStatus.app === \"INVALID\") {\n                if (options.enforceAppCheck) {\n                    throw new HttpsError(\"unauthenticated\", \"Unauthenticated\");\n                }\n                else {\n                    logger.warn(\"Allowing request with invalid AppCheck token because enforcement is disabled\");\n                }\n            }\n            if (tokenStatus.app === \"MISSING\" && options.enforceAppCheck) {\n                throw new HttpsError(\"unauthenticated\", \"Unauthenticated\");\n            }\n            const instanceId = req.header(\"Firebase-Instance-ID-Token\");\n            if (instanceId) {\n                // Validating the token requires an http request, so we don't do it.\n                // If the user wants to use it for something, it will be validated then.\n                // Currently, the only real use case for this token is for sending\n                // pushes with FCM. In that case, the FCM APIs will validate the token.\n                context.instanceIdToken = req.header(\"Firebase-Instance-ID-Token\");\n            }\n            const acceptsStreaming = req.header(\"accept\") === \"text/event-stream\";\n            if (acceptsStreaming && version === \"gcfv1\") {\n                // streaming responses are not supported in v1 callable\n                throw new HttpsError(\"invalid-argument\", \"Unsupported Accept header 'text/event-stream'\");\n            }\n            const data = decode(req.body.data);\n            if (options.authPolicy) {\n                const authorized = await options.authPolicy((_a = context.auth) !== null && _a !== void 0 ? _a : null, data);\n                if (!authorized) {\n                    throw new HttpsError(\"permission-denied\", \"Permission Denied\");\n                }\n            }\n            let result;\n            if (version === \"gcfv1\") {\n                result = await handler(data, context);\n            }\n            else {\n                const arg = {\n                    ...context,\n                    data,\n                    acceptsStreaming,\n                };\n                const responseProxy = {\n                    sendChunk(chunk) {\n                        // if client doesn't accept sse-protocol, response.write() is no-op.\n                        if (!acceptsStreaming) {\n                            return Promise.resolve(false);\n                        }\n                        // if connection is already closed, response.write() is no-op.\n                        if (abortController.signal.aborted) {\n                            return Promise.resolve(false);\n                        }\n                        const formattedData = encodeSSE({ message: chunk });\n                        let resolve;\n                        let reject;\n                        const p = new Promise((res, rej) => {\n                            resolve = res;\n                            reject = rej;\n                        });\n                        const wrote = res.write(formattedData, (error) => {\n                            if (error) {\n                                reject(error);\n                                return;\n                            }\n                            resolve(wrote);\n                        });\n                        // Reset heartbeat timer after successful write\n                        if (wrote && heartbeatInterval !== null && heartbeatSeconds > 0) {\n                            scheduleHeartbeat();\n                        }\n                        return p;\n                    },\n                    signal: abortController.signal,\n                };\n                if (acceptsStreaming) {\n                    // SSE always responds with 200\n                    res.status(200);\n                    if (heartbeatSeconds !== null && heartbeatSeconds > 0) {\n                        scheduleHeartbeat();\n                    }\n                }\n                // For some reason the type system isn't picking up that the handler\n                // is a one argument function.\n                result = await handler(arg, responseProxy);\n                clearScheduledHeartbeat();\n            }\n            if (!abortController.signal.aborted) {\n                // Encode the result as JSON to preserve types like Dates.\n                result = encode(result);\n                // If there was some result, encode it in the body.\n                const responseBody = { result };\n                if (acceptsStreaming) {\n                    res.write(encodeSSE(responseBody));\n                    res.end();\n                }\n                else {\n                    res.status(200).send(responseBody);\n                }\n            }\n            else {\n                res.end();\n            }\n        }\n        catch (err) {\n            if (!abortController.signal.aborted) {\n                let httpErr = err;\n                if (!(err instanceof HttpsError)) {\n                    // This doesn't count as an 'explicit' error.\n                    logger.error(\"Unhandled error\", err);\n                    httpErr = new HttpsError(\"internal\", \"INTERNAL\");\n                }\n                const { status } = httpErr.httpErrorCode;\n                const body = { error: httpErr.toJSON() };\n                if (version === \"gcfv2\" && req.header(\"accept\") === \"text/event-stream\") {\n                    res.write(encodeSSE(body));\n                    res.end();\n                }\n                else {\n                    res.status(status).send(body);\n                }\n            }\n            else {\n                res.end();\n            }\n        }\n        finally {\n            clearScheduledHeartbeat();\n        }\n    };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2659, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/providers/identity.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapHandler = exports.getUpdateMask = exports.validateAuthResponse = exports.parseAuthEventContext = exports.generateResponsePayload = exports.parseAuthUserRecord = exports.parseMultiFactor = exports.parseDate = exports.parseProviderData = exports.parseMetadata = exports.isValidRequest = exports.userRecordConstructor = exports.UserRecordMetadata = exports.HttpsError = void 0;\nconst auth = require(\"firebase-admin/auth\");\nconst logger = require(\"../../logger\");\nconst app_1 = require(\"../app\");\nconst debug_1 = require(\"../debug\");\nconst https_1 = require(\"./https\");\nObject.defineProperty(exports, \"HttpsError\", { enumerable: true, get: function () { return https_1.HttpsError; } });\nconst DISALLOWED_CUSTOM_CLAIMS = [\n    \"acr\",\n    \"amr\",\n    \"at_hash\",\n    \"aud\",\n    \"auth_time\",\n    \"azp\",\n    \"cnf\",\n    \"c_hash\",\n    \"exp\",\n    \"iat\",\n    \"iss\",\n    \"jti\",\n    \"nbf\",\n    \"nonce\",\n    \"firebase\",\n];\nconst CLAIMS_MAX_PAYLOAD_SIZE = 1000;\nconst EVENT_MAPPING = {\n    beforeCreate: \"providers/cloud.auth/eventTypes/user.beforeCreate\",\n    beforeSignIn: \"providers/cloud.auth/eventTypes/user.beforeSignIn\",\n    beforeSendEmail: \"providers/cloud.auth/eventTypes/user.beforeSendEmail\",\n    beforeSendSms: \"providers/cloud.auth/eventTypes/user.beforeSendSms\",\n};\n/**\n * Helper class to create the user metadata in a `UserRecord` object.\n */\nclass UserRecordMetadata {\n    constructor(creationTime, lastSignInTime) {\n        this.creationTime = creationTime;\n        this.lastSignInTime = lastSignInTime;\n    }\n    /** Returns a plain JavaScript object with the properties of UserRecordMetadata. */\n    toJSON() {\n        return {\n            creationTime: this.creationTime,\n            lastSignInTime: this.lastSignInTime,\n        };\n    }\n}\nexports.UserRecordMetadata = UserRecordMetadata;\n/**\n * Helper function that creates a `UserRecord` class from data sent over the wire.\n * @param wireData data sent over the wire\n * @returns an instance of `UserRecord` with correct toJSON functions\n */\nfunction userRecordConstructor(wireData) {\n    // Falsey values from the wire format proto get lost when converted to JSON, this adds them back.\n    const falseyValues = {\n        email: null,\n        emailVerified: false,\n        displayName: null,\n        photoURL: null,\n        phoneNumber: null,\n        disabled: false,\n        providerData: [],\n        customClaims: {},\n        passwordSalt: null,\n        passwordHash: null,\n        tokensValidAfterTime: null,\n    };\n    const record = { ...falseyValues, ...wireData };\n    const meta = record.metadata;\n    if (meta) {\n        record.metadata = new UserRecordMetadata(meta.createdAt || meta.creationTime, meta.lastSignedInAt || meta.lastSignInTime);\n    }\n    else {\n        record.metadata = new UserRecordMetadata(null, null);\n    }\n    record.toJSON = () => {\n        const { uid, email, emailVerified, displayName, photoURL, phoneNumber, disabled, passwordHash, passwordSalt, tokensValidAfterTime, } = record;\n        const json = {\n            uid,\n            email,\n            emailVerified,\n            displayName,\n            photoURL,\n            phoneNumber,\n            disabled,\n            passwordHash,\n            passwordSalt,\n            tokensValidAfterTime,\n        };\n        json.metadata = record.metadata.toJSON();\n        json.customClaims = JSON.parse(JSON.stringify(record.customClaims));\n        json.providerData = record.providerData.map((entry) => {\n            const newEntry = { ...entry };\n            newEntry.toJSON = () => entry;\n            return newEntry;\n        });\n        return json;\n    };\n    return record;\n}\nexports.userRecordConstructor = userRecordConstructor;\n/**\n * Checks for a valid identity platform web request, otherwise throws an HttpsError.\n * @internal\n */\nfunction isValidRequest(req) {\n    var _a, _b;\n    if (req.method !== \"POST\") {\n        logger.warn(`Request has invalid method \"${req.method}\".`);\n        return false;\n    }\n    const contentType = (req.header(\"Content-Type\") || \"\").toLowerCase();\n    if (!contentType.includes(\"application/json\")) {\n        logger.warn(\"Request has invalid header Content-Type.\");\n        return false;\n    }\n    if (!((_b = (_a = req.body) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.jwt)) {\n        logger.warn(\"Request has an invalid body.\");\n        return false;\n    }\n    return true;\n}\nexports.isValidRequest = isValidRequest;\n/**\n * Decode, but not verify, an Auth Blocking token.\n *\n * Do not use in production. Token should always be verified using the Admin SDK.\n *\n * This is exposed only for testing.\n */\nfunction unsafeDecodeAuthBlockingToken(token) {\n    const decoded = (0, https_1.unsafeDecodeToken)(token);\n    decoded.uid = decoded.sub;\n    return decoded;\n}\n/**\n * Helper function to parse the decoded metadata object into a `UserMetaData` object\n * @internal\n */\nfunction parseMetadata(metadata) {\n    const creationTime = (metadata === null || metadata === void 0 ? void 0 : metadata.creation_time)\n        ? new Date(metadata.creation_time).toUTCString()\n        : null;\n    const lastSignInTime = (metadata === null || metadata === void 0 ? void 0 : metadata.last_sign_in_time)\n        ? new Date(metadata.last_sign_in_time).toUTCString()\n        : null;\n    return {\n        creationTime,\n        lastSignInTime,\n    };\n}\nexports.parseMetadata = parseMetadata;\n/**\n * Helper function to parse the decoded user info array into an `AuthUserInfo` array.\n * @internal\n */\nfunction parseProviderData(providerData) {\n    const providers = [];\n    for (const provider of providerData) {\n        providers.push({\n            uid: provider.uid,\n            displayName: provider.display_name,\n            email: provider.email,\n            photoURL: provider.photo_url,\n            providerId: provider.provider_id,\n            phoneNumber: provider.phone_number,\n        });\n    }\n    return providers;\n}\nexports.parseProviderData = parseProviderData;\n/**\n * Helper function to parse the date into a UTC string.\n * @internal\n */\nfunction parseDate(tokensValidAfterTime) {\n    if (!tokensValidAfterTime) {\n        return null;\n    }\n    tokensValidAfterTime = tokensValidAfterTime * 1000;\n    try {\n        const date = new Date(tokensValidAfterTime);\n        if (!isNaN(date.getTime())) {\n            return date.toUTCString();\n        }\n    }\n    catch {\n        // ignore error\n    }\n    return null;\n}\nexports.parseDate = parseDate;\n/**\n * Helper function to parse the decoded enrolled factors into a valid MultiFactorSettings\n * @internal\n */\nfunction parseMultiFactor(multiFactor) {\n    if (!multiFactor) {\n        return null;\n    }\n    const parsedEnrolledFactors = [];\n    for (const factor of multiFactor.enrolled_factors || []) {\n        if (!factor.uid) {\n            throw new https_1.HttpsError(\"internal\", \"INTERNAL ASSERT FAILED: Invalid multi-factor info response\");\n        }\n        const enrollmentTime = factor.enrollment_time\n            ? new Date(factor.enrollment_time).toUTCString()\n            : null;\n        parsedEnrolledFactors.push({\n            uid: factor.uid,\n            factorId: factor.phone_number ? factor.factor_id || \"phone\" : factor.factor_id,\n            displayName: factor.display_name,\n            enrollmentTime,\n            phoneNumber: factor.phone_number,\n        });\n    }\n    if (parsedEnrolledFactors.length > 0) {\n        return {\n            enrolledFactors: parsedEnrolledFactors,\n        };\n    }\n    return null;\n}\nexports.parseMultiFactor = parseMultiFactor;\n/**\n * Parses the decoded user record into a valid UserRecord for use in the handler\n * @internal\n */\nfunction parseAuthUserRecord(decodedJWTUserRecord) {\n    if (!decodedJWTUserRecord.uid) {\n        throw new https_1.HttpsError(\"internal\", \"INTERNAL ASSERT FAILED: Invalid user response\");\n    }\n    const disabled = decodedJWTUserRecord.disabled || false;\n    const metadata = parseMetadata(decodedJWTUserRecord.metadata);\n    const providerData = parseProviderData(decodedJWTUserRecord.provider_data);\n    const tokensValidAfterTime = parseDate(decodedJWTUserRecord.tokens_valid_after_time);\n    const multiFactor = parseMultiFactor(decodedJWTUserRecord.multi_factor);\n    return {\n        uid: decodedJWTUserRecord.uid,\n        email: decodedJWTUserRecord.email,\n        emailVerified: decodedJWTUserRecord.email_verified,\n        displayName: decodedJWTUserRecord.display_name,\n        photoURL: decodedJWTUserRecord.photo_url,\n        phoneNumber: decodedJWTUserRecord.phone_number,\n        disabled,\n        metadata,\n        providerData,\n        passwordHash: decodedJWTUserRecord.password_hash,\n        passwordSalt: decodedJWTUserRecord.password_salt,\n        customClaims: decodedJWTUserRecord.custom_claims,\n        tenantId: decodedJWTUserRecord.tenant_id,\n        tokensValidAfterTime,\n        multiFactor,\n    };\n}\nexports.parseAuthUserRecord = parseAuthUserRecord;\n/** Helper to get the `AdditionalUserInfo` from the decoded JWT */\nfunction parseAdditionalUserInfo(decodedJWT) {\n    let profile;\n    let username;\n    if (decodedJWT.raw_user_info) {\n        try {\n            profile = JSON.parse(decodedJWT.raw_user_info);\n        }\n        catch (err) {\n            logger.debug(`Parse Error: ${err.message}`);\n        }\n    }\n    if (profile) {\n        if (decodedJWT.sign_in_method === \"github.com\") {\n            username = profile.login;\n        }\n        if (decodedJWT.sign_in_method === \"twitter.com\") {\n            username = profile.screen_name;\n        }\n    }\n    return {\n        providerId: decodedJWT.sign_in_method === \"emailLink\" ? \"password\" : decodedJWT.sign_in_method,\n        profile,\n        username,\n        isNewUser: decodedJWT.event_type === \"beforeCreate\" ? true : false,\n        recaptchaScore: decodedJWT.recaptcha_score,\n        email: decodedJWT.email,\n        phoneNumber: decodedJWT.phone_number,\n    };\n}\n/**\n * Helper to generate a response from the blocking function to the Firebase Auth backend.\n * @internal\n */\nfunction generateResponsePayload(authResponse) {\n    if (!authResponse) {\n        return {};\n    }\n    const { recaptchaActionOverride, ...formattedAuthResponse } = authResponse;\n    const result = {};\n    const updateMask = getUpdateMask(formattedAuthResponse);\n    if (updateMask.length !== 0) {\n        result.userRecord = {\n            ...formattedAuthResponse,\n            updateMask,\n        };\n    }\n    if (recaptchaActionOverride !== undefined) {\n        result.recaptchaActionOverride = recaptchaActionOverride;\n    }\n    return result;\n}\nexports.generateResponsePayload = generateResponsePayload;\n/** Helper to get the Credential from the decoded JWT */\nfunction parseAuthCredential(decodedJWT, time) {\n    if (!decodedJWT.sign_in_attributes &&\n        !decodedJWT.oauth_id_token &&\n        !decodedJWT.oauth_access_token &&\n        !decodedJWT.oauth_refresh_token) {\n        return null;\n    }\n    return {\n        claims: decodedJWT.sign_in_attributes,\n        idToken: decodedJWT.oauth_id_token,\n        accessToken: decodedJWT.oauth_access_token,\n        refreshToken: decodedJWT.oauth_refresh_token,\n        expirationTime: decodedJWT.oauth_expires_in\n            ? new Date(time + decodedJWT.oauth_expires_in * 1000).toUTCString()\n            : undefined,\n        secret: decodedJWT.oauth_token_secret,\n        providerId: decodedJWT.sign_in_method === \"emailLink\" ? \"password\" : decodedJWT.sign_in_method,\n        signInMethod: decodedJWT.sign_in_method,\n    };\n}\n/**\n * Parses the decoded jwt into a valid AuthEventContext for use in the handler\n * @internal\n */\nfunction parseAuthEventContext(decodedJWT, projectId, time = new Date().getTime()) {\n    const eventType = (EVENT_MAPPING[decodedJWT.event_type] || decodedJWT.event_type) +\n        (decodedJWT.sign_in_method ? `:${decodedJWT.sign_in_method}` : \"\");\n    return {\n        locale: decodedJWT.locale,\n        ipAddress: decodedJWT.ip_address,\n        userAgent: decodedJWT.user_agent,\n        eventId: decodedJWT.event_id,\n        eventType,\n        authType: decodedJWT.user_record ? \"USER\" : \"UNAUTHENTICATED\",\n        resource: {\n            // TODO(colerogers): figure out the correct service\n            service: \"identitytoolkit.googleapis.com\",\n            name: decodedJWT.tenant_id\n                ? `projects/${projectId}/tenants/${decodedJWT.tenant_id}`\n                : `projects/${projectId}`,\n        },\n        timestamp: new Date(decodedJWT.iat * 1000).toUTCString(),\n        additionalUserInfo: parseAdditionalUserInfo(decodedJWT),\n        credential: parseAuthCredential(decodedJWT, time),\n        emailType: decodedJWT.email_type,\n        smsType: decodedJWT.sms_type,\n        params: {},\n    };\n}\nexports.parseAuthEventContext = parseAuthEventContext;\n/**\n * Checks the handler response for invalid customClaims & sessionClaims objects\n * @internal\n */\nfunction validateAuthResponse(eventType, authRequest) {\n    if (!authRequest) {\n        authRequest = {};\n    }\n    if (authRequest.customClaims) {\n        const invalidClaims = DISALLOWED_CUSTOM_CLAIMS.filter((claim) => authRequest.customClaims.hasOwnProperty(claim));\n        if (invalidClaims.length > 0) {\n            throw new https_1.HttpsError(\"invalid-argument\", `The customClaims claims \"${invalidClaims.join(\",\")}\" are reserved and cannot be specified.`);\n        }\n        if (JSON.stringify(authRequest.customClaims).length > CLAIMS_MAX_PAYLOAD_SIZE) {\n            throw new https_1.HttpsError(\"invalid-argument\", `The customClaims payload should not exceed ${CLAIMS_MAX_PAYLOAD_SIZE} characters.`);\n        }\n    }\n    if (eventType === \"beforeSignIn\" && authRequest.sessionClaims) {\n        const invalidClaims = DISALLOWED_CUSTOM_CLAIMS.filter((claim) => authRequest.sessionClaims.hasOwnProperty(claim));\n        if (invalidClaims.length > 0) {\n            throw new https_1.HttpsError(\"invalid-argument\", `The sessionClaims claims \"${invalidClaims.join(\",\")}\" are reserved and cannot be specified.`);\n        }\n        if (JSON.stringify(authRequest.sessionClaims).length >\n            CLAIMS_MAX_PAYLOAD_SIZE) {\n            throw new https_1.HttpsError(\"invalid-argument\", `The sessionClaims payload should not exceed ${CLAIMS_MAX_PAYLOAD_SIZE} characters.`);\n        }\n        const combinedClaims = {\n            ...authRequest.customClaims,\n            ...authRequest.sessionClaims,\n        };\n        if (JSON.stringify(combinedClaims).length > CLAIMS_MAX_PAYLOAD_SIZE) {\n            throw new https_1.HttpsError(\"invalid-argument\", `The customClaims and sessionClaims payloads should not exceed ${CLAIMS_MAX_PAYLOAD_SIZE} characters combined.`);\n        }\n    }\n}\nexports.validateAuthResponse = validateAuthResponse;\n/**\n * Helper function to generate the update mask for the identity platform changed values\n * @internal\n */\nfunction getUpdateMask(authResponse) {\n    if (!authResponse) {\n        return \"\";\n    }\n    const updateMask = [];\n    for (const key in authResponse) {\n        if (authResponse.hasOwnProperty(key) && typeof authResponse[key] !== \"undefined\") {\n            updateMask.push(key);\n        }\n    }\n    return updateMask.join(\",\");\n}\nexports.getUpdateMask = getUpdateMask;\n/** @internal */\nfunction wrapHandler(eventType, handler) {\n    return async (req, res) => {\n        try {\n            const projectId = process.env.GCLOUD_PROJECT;\n            if (!isValidRequest(req)) {\n                logger.error(\"Invalid request, unable to process\");\n                throw new https_1.HttpsError(\"invalid-argument\", \"Bad Request\");\n            }\n            if (!auth.getAuth((0, app_1.getApp)())._verifyAuthBlockingToken) {\n                throw new Error(\"Cannot validate Auth Blocking token. Please update Firebase Admin SDK to >= v10.1.0\");\n            }\n            const decodedPayload = (0, debug_1.isDebugFeatureEnabled)(\"skipTokenVerification\")\n                ? unsafeDecodeAuthBlockingToken(req.body.data.jwt)\n                : handler.platform === \"gcfv1\"\n                    ? await auth.getAuth((0, app_1.getApp)())._verifyAuthBlockingToken(req.body.data.jwt)\n                    : await auth.getAuth((0, app_1.getApp)())._verifyAuthBlockingToken(req.body.data.jwt, \"run.app\");\n            let authUserRecord;\n            if (decodedPayload.event_type === \"beforeCreate\" ||\n                decodedPayload.event_type === \"beforeSignIn\") {\n                authUserRecord = parseAuthUserRecord(decodedPayload.user_record);\n            }\n            const authEventContext = parseAuthEventContext(decodedPayload, projectId);\n            let authResponse;\n            if (handler.platform === \"gcfv1\") {\n                authResponse = authUserRecord\n                    ? (await handler(authUserRecord, authEventContext)) || undefined\n                    : (await handler(authEventContext)) || undefined;\n            }\n            else {\n                authResponse =\n                    (await handler({\n                        ...authEventContext,\n                        data: authUserRecord,\n                    })) || undefined;\n            }\n            validateAuthResponse(eventType, authResponse);\n            const result = generateResponsePayload(authResponse);\n            res.status(200);\n            res.setHeader(\"Content-Type\", \"application/json\");\n            res.send(JSON.stringify(result));\n        }\n        catch (err) {\n            let httpErr = err;\n            if (!(httpErr instanceof https_1.HttpsError)) {\n                // This doesn't count as an 'explicit' error.\n                logger.error(\"Unhandled error\", err);\n                httpErr = new https_1.HttpsError(\"internal\", \"An unexpected error occurred.\");\n            }\n            const { status } = httpErr.httpErrorCode;\n            const body = { error: httpErr.toJSON() };\n            res.setHeader(\"Content-Type\", \"application/json\");\n            res.status(status).send(body);\n        }\n    };\n}\nexports.wrapHandler = wrapHandler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/auth.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserBuilder = exports._userWithOptions = exports.user = exports.service = exports.provider = exports.HttpsError = exports.userRecordConstructor = exports.UserRecordMetadata = void 0;\nconst identity_1 = require(\"../../common/providers/identity\");\nObject.defineProperty(exports, \"HttpsError\", { enumerable: true, get: function () { return identity_1.HttpsError; } });\nObject.defineProperty(exports, \"userRecordConstructor\", { enumerable: true, get: function () { return identity_1.userRecordConstructor; } });\nObject.defineProperty(exports, \"UserRecordMetadata\", { enumerable: true, get: function () { return identity_1.UserRecordMetadata; } });\nconst cloud_functions_1 = require(\"../cloud-functions\");\nconst manifest_1 = require(\"../../runtime/manifest\");\n/** @internal */\nexports.provider = \"google.firebase.auth\";\n/** @internal */\nexports.service = \"firebaseauth.googleapis.com\";\n/**\n * Handles events related to Firebase Auth users events.\n *\n * @param userOptions - Resource level options\n * @returns UserBuilder - Builder used to create functions for Firebase Auth user lifecycle events\n *\n * @public\n */\nfunction user(userOptions) {\n    return _userWithOptions({}, userOptions || {});\n}\nexports.user = user;\n/** @internal */\nfunction _userWithOptions(options, userOptions) {\n    return new UserBuilder(() => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        return \"projects/\" + process.env.GCLOUD_PROJECT;\n    }, options, userOptions);\n}\nexports._userWithOptions = _userWithOptions;\n/**\n * Builder used to create functions for Firebase Auth user lifecycle events.\n * @public\n */\nclass UserBuilder {\n    static dataConstructor(raw) {\n        return (0, identity_1.userRecordConstructor)(raw.data);\n    }\n    /* @internal */\n    constructor(triggerResource, options, userOptions) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n        this.userOptions = userOptions;\n    }\n    /**\n     * Responds to the creation of a Firebase Auth user.\n     *\n     * @param handler Event handler that responds to the creation of a Firebase Auth user.\n     *\n     * @public\n     */\n    onCreate(handler) {\n        return this.onOperation(handler, \"user.create\");\n    }\n    /**\n     * Responds to the deletion of a Firebase Auth user.\n     *\n     * @param handler Event handler that responds to the deletion of a Firebase Auth user.\n     *\n     * @public\n     */\n    onDelete(handler) {\n        return this.onOperation(handler, \"user.delete\");\n    }\n    /**\n     * Blocks request to create a Firebase Auth user.\n     *\n     * @param handler Event handler that blocks creation of a Firebase Auth user.\n     *\n     * @public\n     */\n    beforeCreate(handler) {\n        return this.beforeOperation(handler, \"beforeCreate\");\n    }\n    /**\n     * Blocks request to sign-in a Firebase Auth user.\n     *\n     * @param handler Event handler that blocks sign-in of a Firebase Auth user.\n     *\n     * @public\n     */\n    beforeSignIn(handler) {\n        return this.beforeOperation(handler, \"beforeSignIn\");\n    }\n    beforeEmail(handler) {\n        return this.beforeOperation(handler, \"beforeSendEmail\");\n    }\n    beforeSms(handler) {\n        return this.beforeOperation(handler, \"beforeSendSms\");\n    }\n    onOperation(handler, eventType) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            eventType,\n            service: exports.service,\n            triggerResource: this.triggerResource,\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            dataConstructor: UserBuilder.dataConstructor,\n            legacyEventType: `providers/firebase.auth/eventTypes/${eventType}`,\n            options: this.options,\n        });\n    }\n    beforeOperation(handler, eventType) {\n        var _a, _b, _c, _d, _e, _f;\n        const accessToken = ((_b = (_a = this.userOptions) === null || _a === void 0 ? void 0 : _a.blockingOptions) === null || _b === void 0 ? void 0 : _b.accessToken) || false;\n        const idToken = ((_d = (_c = this.userOptions) === null || _c === void 0 ? void 0 : _c.blockingOptions) === null || _d === void 0 ? void 0 : _d.idToken) || false;\n        const refreshToken = ((_f = (_e = this.userOptions) === null || _e === void 0 ? void 0 : _e.blockingOptions) === null || _f === void 0 ? void 0 : _f.refreshToken) || false;\n        const annotatedHandler = Object.assign(handler, { platform: \"gcfv1\" });\n        const func = (0, identity_1.wrapHandler)(eventType, annotatedHandler);\n        const legacyEventType = `providers/cloud.auth/eventTypes/user.${eventType}`;\n        func.__trigger = {\n            labels: {},\n            ...(0, cloud_functions_1.optionsToTrigger)(this.options),\n            blockingTrigger: {\n                eventType: legacyEventType,\n                options: {\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                },\n            },\n        };\n        func.__endpoint = {\n            platform: \"gcfv1\",\n            labels: {},\n            ...(0, manifest_1.initV1Endpoint)(this.options),\n            ...(0, cloud_functions_1.optionsToEndpoint)(this.options),\n            blockingTrigger: {\n                eventType: legacyEventType,\n                options: {\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                },\n            },\n        };\n        func.__requiredAPIs = [\n            {\n                api: \"identitytoolkit.googleapis.com\",\n                reason: \"Needed for auth blocking functions\",\n            },\n        ];\n        func.run = handler;\n        return func;\n    }\n}\nexports.UserBuilder = UserBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3315, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/utilities/path.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPath = exports.pathParts = exports.normalizePath = void 0;\n/** @hidden\n * Removes leading and trailing slashes from a path.\n *\n * @param path A path to normalize, in POSIX format.\n */\nfunction normalizePath(path) {\n    if (!path) {\n        return \"\";\n    }\n    return path.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n}\nexports.normalizePath = normalizePath;\n/**\n * Normalizes a given path and splits it into an array of segments.\n *\n * @param path A path to split, in POSIX format.\n */\nfunction pathParts(path) {\n    if (!path || path === \"\" || path === \"/\") {\n        return [];\n    }\n    return normalizePath(path).split(\"/\");\n}\nexports.pathParts = pathParts;\n/**\n * Normalizes given paths and joins these together using a POSIX separator.\n *\n * @param base A first path segment, in POSIX format.\n * @param child A second path segment, in POSIX format.\n */\nfunction joinPath(base, child) {\n    return pathParts(base).concat(pathParts(child)).join(\"/\");\n}\nexports.joinPath = joinPath;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,QAAQ,GAAG,QAAQ,SAAS,GAAG,QAAQ,aAAa,GAAG,KAAK;AACpE;;;;CAIC,GACD,SAAS,cAAc,IAAI;IACvB,IAAI,CAAC,MAAM;QACP,OAAO;IACX;IACA,OAAO,KAAK,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO;AAClD;AACA,QAAQ,aAAa,GAAG;AACxB;;;;CAIC,GACD,SAAS,UAAU,IAAI;IACnB,IAAI,CAAC,QAAQ,SAAS,MAAM,SAAS,KAAK;QACtC,OAAO,EAAE;IACb;IACA,OAAO,cAAc,MAAM,KAAK,CAAC;AACrC;AACA,QAAQ,SAAS,GAAG;AACpB;;;;;CAKC,GACD,SAAS,SAAS,IAAI,EAAE,KAAK;IACzB,OAAO,UAAU,MAAM,MAAM,CAAC,UAAU,QAAQ,IAAI,CAAC;AACzD;AACA,QAAQ,QAAQ,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3356, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/providers/database.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataSnapshot = void 0;\nconst database = require(\"firebase-admin/database\");\nconst config_1 = require(\"../../common/config\");\nconst path_1 = require(\"../../common/utilities/path\");\n/**\n * Interface representing a Firebase Realtime database data snapshot.\n */\nclass DataSnapshot {\n    constructor(data, path, // path is undefined for the database root\n    app, instance) {\n        this.app = app;\n        const config = (0, config_1.firebaseConfig)();\n        if (instance) {\n            // SDK always supplies instance, but user's unit tests may not\n            this.instance = instance;\n        }\n        else if (app) {\n            this.instance = app.options.databaseURL;\n        }\n        else if (config.databaseURL) {\n            this.instance = config.databaseURL;\n        }\n        else if (process.env.GCLOUD_PROJECT) {\n            this.instance = \"https://\" + process.env.GCLOUD_PROJECT + \"-default-rtdb.firebaseio.com\";\n        }\n        this._path = path;\n        this._data = data;\n    }\n    /**\n     * Returns a [`Reference`](/docs/reference/admin/node/admin.database.Reference)\n     * to the database location where the triggering write occurred. Has\n     * full read and write access.\n     */\n    get ref() {\n        if (!this.app) {\n            // may be unpopulated in user's unit tests\n            throw new Error(\"Please supply a Firebase app in the constructor for DataSnapshot\" +\n                \" in order to use the .ref method.\");\n        }\n        if (!this._ref) {\n            let db;\n            if (this.instance) {\n                db = database.getDatabaseWithUrl(this.instance, this.app);\n            }\n            else {\n                db = database.getDatabase(this.app);\n            }\n            this._ref = db.ref(this._fullPath());\n        }\n        return this._ref;\n    }\n    /**\n     * The key (last part of the path) of the location of this `DataSnapshot`.\n     *\n     * The last token in a database location is considered its key. For example,\n     * \"ada\" is the key for the `/users/ada/` node. Accessing the key on any\n     * `DataSnapshot` returns the key for the location that generated it.\n     * However, accessing the key on the root URL of a database returns `null`.\n     */\n    get key() {\n        const segments = (0, path_1.pathParts)(this._fullPath());\n        const last = segments[segments.length - 1];\n        return !last || last === \"\" ? null : last;\n    }\n    /**\n     * Extracts a JavaScript value from a `DataSnapshot`.\n     *\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n     * scalar type (string, number, or boolean), an array, or an object. It may also\n     * return `null`, indicating that the `DataSnapshot` is empty (contains no\n     * data).\n     *\n     * @return The snapshot's contents as a JavaScript value (Object,\n     *   Array, string, number, boolean, or `null`).\n     */\n    val() {\n        const parts = (0, path_1.pathParts)(this._childPath);\n        let source = this._data;\n        if (source === null) {\n            return null;\n        }\n        if (parts.length) {\n            for (const part of parts) {\n                if (source[part] === undefined) {\n                    return null;\n                }\n                source = source[part];\n            }\n        }\n        const node = source !== null && source !== void 0 ? source : null;\n        return this._checkAndConvertToArray(node);\n    }\n    /**\n     * Exports the entire contents of the `DataSnapshot` as a JavaScript object.\n     *\n     * @return The contents of the `DataSnapshot` as a JavaScript value\n     *   (Object, Array, string, number, boolean, or `null`).\n     */\n    exportVal() {\n        return this.val();\n    }\n    /**\n     * Gets the priority value of the data in this `DataSnapshot`.\n     *\n     * As an alternative to using priority, applications can order collections by\n     * ordinary properties. See [Sorting and filtering\n     * data](/docs/database/web/lists-of-data#sorting_and_filtering_data).\n     *\n     * @return The priority value of the data.\n     */\n    getPriority() {\n        return 0;\n    }\n    /**\n     * Returns `true` if this `DataSnapshot` contains any data. It is slightly more\n     * efficient than using `snapshot.val() !== null`.\n     *\n     * @return `true` if this `DataSnapshot` contains any data; otherwise, `false`.\n     */\n    exists() {\n        const val = this.val();\n        if (typeof val === \"undefined\" || val === null) {\n            return false;\n        }\n        if (typeof val === \"object\" && Object.keys(val).length === 0) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Gets a `DataSnapshot` for the location at the specified relative path.\n     *\n     * The relative path can either be a simple child name (for example, \"ada\") or\n     * a deeper slash-separated path (for example, \"ada/name/first\").\n     *\n     * @param path A relative path from this location to the desired child\n     *   location.\n     * @return The specified child location.\n     */\n    child(childPath) {\n        if (!childPath) {\n            return this;\n        }\n        return this._dup(childPath);\n    }\n    /**\n     * Enumerates the `DataSnapshot`s of the children items.\n     *\n     * Because of the way JavaScript objects work, the ordering of data in the\n     * JavaScript object returned by `val()` is not guaranteed to match the ordering\n     * on the server nor the ordering of `child_added` events. That is where\n     * `forEach()` comes in handy. It guarantees the children of a `DataSnapshot`\n     * can be iterated in their query order.\n     *\n     * If no explicit `orderBy*()` method is used, results are returned\n     * ordered by key (unless priorities are used, in which case, results are\n     * returned by priority).\n     *\n     * @param action A function that is called for each child `DataSnapshot`.\n     *   The callback can return `true` to cancel further enumeration.\n     *\n     * @return `true` if enumeration was canceled due to your callback\n     *   returning `true`.\n     */\n    forEach(action) {\n        const val = this.val() || {};\n        if (typeof val === \"object\") {\n            return Object.keys(val).some((key) => action(this.child(key)) === true);\n        }\n        return false;\n    }\n    /**\n     * Returns `true` if the specified child path has (non-`null`) data.\n     *\n     * @param path A relative path to the location of a potential child.\n     * @return `true` if data exists at the specified child path; otherwise,\n     *   `false`.\n     */\n    hasChild(childPath) {\n        return this.child(childPath).exists();\n    }\n    /**\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\n     * properties.\n     *\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n     * children. If it does, you can enumerate them using `forEach()`. If it\n     * doesn't, then either this snapshot contains a primitive value (which can be\n     * retrieved with `val()`) or it is empty (in which case, `val()` returns\n     * `null`).\n     *\n     * @return `true` if this snapshot has any children; else `false`.\n     */\n    hasChildren() {\n        const val = this.val();\n        return val !== null && typeof val === \"object\" && Object.keys(val).length > 0;\n    }\n    /**\n     * Returns the number of child properties of this `DataSnapshot`.\n     *\n     * @return Number of child properties of this `DataSnapshot`.\n     */\n    numChildren() {\n        const val = this.val();\n        return val !== null && typeof val === \"object\" ? Object.keys(val).length : 0;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @return A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return this.val();\n    }\n    /** Recursive function to check if keys are numeric & convert node object to array if they are\n     *\n     * @hidden\n     */\n    _checkAndConvertToArray(node) {\n        if (node === null || typeof node === \"undefined\") {\n            return null;\n        }\n        if (typeof node !== \"object\") {\n            return node;\n        }\n        const obj = {};\n        let numKeys = 0;\n        let maxKey = 0;\n        let allIntegerKeys = true;\n        for (const key in node) {\n            if (!node.hasOwnProperty(key)) {\n                continue;\n            }\n            const childNode = node[key];\n            const v = this._checkAndConvertToArray(childNode);\n            if (v === null) {\n                // Empty child node\n                continue;\n            }\n            obj[key] = v;\n            numKeys++;\n            const integerRegExp = /^(0|[1-9]\\d*)$/;\n            if (allIntegerKeys && integerRegExp.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            }\n            else {\n                allIntegerKeys = false;\n            }\n        }\n        if (numKeys === 0) {\n            // Empty node\n            return null;\n        }\n        if (allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            const array = [];\n            for (const key of Object.keys(obj)) {\n                array[key] = obj[key];\n            }\n            return array;\n        }\n        return obj;\n    }\n    /** @hidden */\n    _dup(childPath) {\n        const dup = new DataSnapshot(this._data, undefined, this.app, this.instance);\n        [dup._path, dup._childPath] = [this._path, this._childPath];\n        if (childPath) {\n            dup._childPath = (0, path_1.joinPath)(dup._childPath, childPath);\n        }\n        return dup;\n    }\n    /** @hidden */\n    _fullPath() {\n        return (this._path || \"\") + \"/\" + (this._childPath || \"\");\n    }\n}\nexports.DataSnapshot = DataSnapshot;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3643, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/utilities/utils.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyChange = void 0;\nfunction isObject(obj) {\n    return typeof obj === \"object\" && !!obj;\n}\n/** @hidden */\nfunction applyChange(src, dest) {\n    // if not mergeable, don't merge\n    if (!isObject(dest) || !isObject(src)) {\n        return dest;\n    }\n    return merge(src, dest);\n}\nexports.applyChange = applyChange;\nfunction merge(src, dest) {\n    const res = {};\n    const keys = new Set([...Object.keys(src), ...Object.keys(dest)]);\n    for (const key of keys.values()) {\n        if (key in dest) {\n            if (dest[key] === null) {\n                continue;\n            }\n            res[key] = applyChange(src[key], dest[key]);\n        }\n        else if (src[key] !== null) {\n            res[key] = src[key];\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG,KAAK;AAC3B,SAAS,SAAS,GAAG;IACjB,OAAO,OAAO,QAAQ,YAAY,CAAC,CAAC;AACxC;AACA,YAAY,GACZ,SAAS,YAAY,GAAG,EAAE,IAAI;IAC1B,gCAAgC;IAChC,IAAI,CAAC,SAAS,SAAS,CAAC,SAAS,MAAM;QACnC,OAAO;IACX;IACA,OAAO,MAAM,KAAK;AACtB;AACA,QAAQ,WAAW,GAAG;AACtB,SAAS,MAAM,GAAG,EAAE,IAAI;IACpB,MAAM,MAAM,CAAC;IACb,MAAM,OAAO,IAAI,IAAI;WAAI,OAAO,IAAI,CAAC;WAAS,OAAO,IAAI,CAAC;KAAM;IAChE,KAAK,MAAM,OAAO,KAAK,MAAM,GAAI;QAC7B,IAAI,OAAO,MAAM;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM;gBACpB;YACJ;YACA,GAAG,CAAC,IAAI,GAAG,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;QAC9C,OACK,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM;YACxB,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QACvB;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3703, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/database.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractInstanceAndPath = exports.RefBuilder = exports._refWithOptions = exports.InstanceBuilder = exports._instanceWithOptions = exports.ref = exports.instance = exports.service = exports.provider = exports.DataSnapshot = void 0;\nconst app_1 = require(\"../../common/app\");\nconst config_1 = require(\"../../common/config\");\nconst database_1 = require(\"../../common/providers/database\");\nObject.defineProperty(exports, \"DataSnapshot\", { enumerable: true, get: function () { return database_1.DataSnapshot; } });\nconst path_1 = require(\"../../common/utilities/path\");\nconst utils_1 = require(\"../../common/utilities/utils\");\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.firebase.database\";\n/** @internal */\nexports.service = \"firebaseio.com\";\nconst databaseURLRegex = new RegExp(\"^https://([^.]+).\");\nconst emulatorDatabaseURLRegex = new RegExp(\"^http://.*ns=([^&]+)\");\n/**\n * Registers a function that triggers on events from a specific\n * Firebase Realtime Database instance.\n *\n * @remarks\n * Use this method together with `ref` to specify the instance on which to\n * watch for database events. For example: `firebase.database.instance('my-app-db-2').ref('/foo/bar')`\n *\n * Note that `functions.database.ref` used without `instance` watches the\n * *default* instance for events.\n *\n * @param instance The instance name of the database instance\n *   to watch for write events.\n * @returns Firebase Realtime Database instance builder interface.\n */\nfunction instance(instance) {\n    return _instanceWithOptions(instance, {});\n}\nexports.instance = instance;\n/**\n * Registers a function that triggers on Firebase Realtime Database write\n * events.\n *\n * @remarks\n * This method behaves very similarly to the method of the same name in the\n * client and Admin Firebase SDKs. Any change to the Database that affects the\n * data at or below the provided `path` will fire an event in Cloud Functions.\n *\n * There are three important differences between listening to a Realtime\n * Database event in Cloud Functions and using the Realtime Database in the\n * client and Admin SDKs:\n *\n * 1. Cloud Functions allows wildcards in the `path` name. Any `path` component\n *    in curly brackets (`{}`) is a wildcard that matches all strings. The value\n *    that matched a certain invocation of a Cloud Function is returned as part\n *    of the [`EventContext.params`](cloud_functions_eventcontext.html#params object. For\n *    example, `ref(\"messages/{messageId}\")` matches changes at\n *    `/messages/message1` or `/messages/message2`, resulting in\n *    `event.params.messageId` being set to `\"message1\"` or `\"message2\"`,\n *    respectively.\n *\n * 2. Cloud Functions do not fire an event for data that already existed before\n *    the Cloud Function was deployed.\n *\n * 3. Cloud Function events have access to more information, including a\n *    snapshot of the previous event data and information about the user who\n *    triggered the Cloud Function.\n *\n * @param path The path within the Database to watch for write events.\n * @returns Firebase Realtime Database builder interface.\n */\nfunction ref(path) {\n    return _refWithOptions(path, {});\n}\nexports.ref = ref;\n/** @internal */\nfunction _instanceWithOptions(instance, options) {\n    return new InstanceBuilder(instance, options);\n}\nexports._instanceWithOptions = _instanceWithOptions;\n/**\n * The Firebase Realtime Database instance builder interface.\n *\n * Access via [`database.instance()`](providers_database_.html#instance).\n */\nclass InstanceBuilder {\n    constructor(instance, options) {\n        this.instance = instance;\n        this.options = options;\n    }\n    /**\n     * @returns Firebase Realtime Database reference builder interface.\n     */\n    ref(path) {\n        const normalized = (0, path_1.normalizePath)(path);\n        return new RefBuilder(() => `projects/_/instances/${this.instance}/refs/${normalized}`, this.options);\n    }\n}\nexports.InstanceBuilder = InstanceBuilder;\n/** @internal */\nfunction _refWithOptions(path, options) {\n    const resourceGetter = () => {\n        const normalized = (0, path_1.normalizePath)(path);\n        const databaseURL = (0, config_1.firebaseConfig)().databaseURL;\n        if (!databaseURL) {\n            throw new Error(\"Missing expected firebase config value databaseURL, \" +\n                \"config is actually\" +\n                JSON.stringify((0, config_1.firebaseConfig)()) +\n                \"\\n If you are unit testing, please set process.env.FIREBASE_CONFIG\");\n        }\n        let instance;\n        const prodMatch = databaseURL.match(databaseURLRegex);\n        if (prodMatch) {\n            instance = prodMatch[1];\n        }\n        else {\n            const emulatorMatch = databaseURL.match(emulatorDatabaseURLRegex);\n            if (emulatorMatch) {\n                instance = emulatorMatch[1];\n            }\n        }\n        if (!instance) {\n            throw new Error(\"Invalid value for config firebase.databaseURL: \" + databaseURL);\n        }\n        return `projects/_/instances/${instance}/refs/${normalized}`;\n    };\n    return new RefBuilder(resourceGetter, options);\n}\nexports._refWithOptions = _refWithOptions;\n/**\n * The Firebase Realtime Database reference builder interface.\n *\n * Access via [`functions.database.ref()`](functions.database#.ref).\n */\nclass RefBuilder {\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n        this.changeConstructor = (raw) => {\n            const [dbInstance, path] = extractInstanceAndPath(raw.context.resource.name, raw.context.domain);\n            const before = new database_1.DataSnapshot(raw.data.data, path, (0, app_1.getApp)(), dbInstance);\n            const after = new database_1.DataSnapshot((0, utils_1.applyChange)(raw.data.data, raw.data.delta), path, (0, app_1.getApp)(), dbInstance);\n            return {\n                before,\n                after,\n            };\n        };\n    }\n    /**\n     * Event handler that fires every time a Firebase Realtime Database write\n     * of any kind (creation, update, or delete) occurs.\n     *\n     * @param handler Event handler that runs every time a Firebase Realtime Database\n     *   write occurs.\n     * @returns A function that you can export and deploy.\n     */\n    onWrite(handler) {\n        return this.onOperation(handler, \"ref.write\", this.changeConstructor);\n    }\n    /**\n     * Event handler that fires every time data is updated in\n     * Firebase Realtime Database.\n     *\n     * @param handler Event handler which is run every time a Firebase Realtime Database\n     *   write occurs.\n     * @returns A function which you can export and deploy.\n     */\n    onUpdate(handler) {\n        return this.onOperation(handler, \"ref.update\", this.changeConstructor);\n    }\n    /**\n     * Event handler that fires every time new data is created in\n     * Firebase Realtime Database.\n     *\n     * @param handler Event handler that runs every time new data is created in\n     *   Firebase Realtime Database.\n     * @returns A function that you can export and deploy.\n     */\n    onCreate(handler) {\n        const dataConstructor = (raw) => {\n            const [dbInstance, path] = extractInstanceAndPath(raw.context.resource.name, raw.context.domain);\n            return new database_1.DataSnapshot(raw.data.delta, path, (0, app_1.getApp)(), dbInstance);\n        };\n        return this.onOperation(handler, \"ref.create\", dataConstructor);\n    }\n    /**\n     * Event handler that fires every time data is deleted from\n     * Firebase Realtime Database.\n     *\n     * @param handler Event handler that runs every time data is deleted from\n     *   Firebase Realtime Database.\n     * @returns A function that you can export and deploy.\n     */\n    onDelete(handler) {\n        const dataConstructor = (raw) => {\n            const [dbInstance, path] = extractInstanceAndPath(raw.context.resource.name, raw.context.domain);\n            return new database_1.DataSnapshot(raw.data.data, path, (0, app_1.getApp)(), dbInstance);\n        };\n        return this.onOperation(handler, \"ref.delete\", dataConstructor);\n    }\n    onOperation(handler, eventType, dataConstructor) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            service: exports.service,\n            eventType,\n            legacyEventType: `providers/${exports.provider}/eventTypes/${eventType}`,\n            triggerResource: this.triggerResource,\n            dataConstructor,\n            options: this.options,\n        });\n    }\n}\nexports.RefBuilder = RefBuilder;\nconst resourceRegex = /^projects\\/([^/]+)\\/instances\\/([a-zA-Z0-9-]+)\\/refs(\\/.+)?/;\n/**\n * Utility function to extract database reference from resource string\n *\n * @param optional database domain override for the original of the source database.\n *    It defaults to `firebaseio.com`.\n *    Multi-region RTDB will be served from different domains.\n *    Since region is not part of the resource name, it is provided through context.\n *\n * @internal\n */\nfunction extractInstanceAndPath(resource, domain = \"firebaseio.com\") {\n    const match = resource.match(new RegExp(resourceRegex));\n    if (!match) {\n        throw new Error(`Unexpected resource string for Firebase Realtime Database event: ${resource}. ` +\n            'Expected string in the format of \"projects/_/instances/{firebaseioSubdomain}/refs/{ref=**}\"');\n    }\n    const [, project, dbInstanceName, path] = match;\n    if (project !== \"_\") {\n        throw new Error(`Expect project to be '_' in a Firebase Realtime Database event`);\n    }\n    const emuHost = process.env.FIREBASE_DATABASE_EMULATOR_HOST;\n    if (emuHost) {\n        const dbInstance = `http://${emuHost}/?ns=${dbInstanceName}`;\n        return [dbInstance, path];\n    }\n    else {\n        const dbInstance = \"https://\" + dbInstanceName + \".\" + domain;\n        return [dbInstance, path];\n    }\n}\nexports.extractInstanceAndPath = extractInstanceAndPath;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3964, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/protos/compiledFirestore.js"],"sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.google = (function() {\n\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    var google = {};\n\n    google.protobuf = (function() {\n\n        /**\n         * Namespace protobuf.\n         * @memberof google\n         * @namespace\n         */\n        var protobuf = {};\n\n        protobuf.Struct = (function() {\n\n            /**\n             * Properties of a Struct.\n             * @memberof google.protobuf\n             * @interface IStruct\n             * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields\n             */\n\n            /**\n             * Constructs a new Struct.\n             * @memberof google.protobuf\n             * @classdesc Represents a Struct.\n             * @implements IStruct\n             * @constructor\n             * @param {google.protobuf.IStruct=} [properties] Properties to set\n             */\n            function Struct(properties) {\n                this.fields = {};\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Struct fields.\n             * @member {Object.<string,google.protobuf.IValue>} fields\n             * @memberof google.protobuf.Struct\n             * @instance\n             */\n            Struct.prototype.fields = $util.emptyObject;\n\n            /**\n             * Creates a new Struct instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {google.protobuf.IStruct=} [properties] Properties to set\n             * @returns {google.protobuf.Struct} Struct instance\n             */\n            Struct.create = function create(properties) {\n                return new Struct(properties);\n            };\n\n            /**\n             * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {google.protobuf.IStruct} message Struct message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Struct.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.fields != null && Object.hasOwnProperty.call(message, \"fields\"))\n                    for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {\n                        writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                        $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                    }\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {google.protobuf.IStruct} message Struct message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Struct.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Struct message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Struct} Struct\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Struct.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key, value;\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            if (message.fields === $util.emptyObject)\n                                message.fields = {};\n                            var end2 = reader.uint32() + reader.pos;\n                            key = \"\";\n                            value = null;\n                            while (reader.pos < end2) {\n                                var tag2 = reader.uint32();\n                                switch (tag2 >>> 3) {\n                                case 1:\n                                    key = reader.string();\n                                    break;\n                                case 2:\n                                    value = $root.google.protobuf.Value.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag2 & 7);\n                                    break;\n                                }\n                            }\n                            message.fields[key] = value;\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Struct message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Struct} Struct\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Struct.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Struct message.\n             * @function verify\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Struct.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.fields != null && message.hasOwnProperty(\"fields\")) {\n                    if (!$util.isObject(message.fields))\n                        return \"fields: object expected\";\n                    var key = Object.keys(message.fields);\n                    for (var i = 0; i < key.length; ++i) {\n                        var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);\n                        if (error)\n                            return \"fields.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Struct message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Struct} Struct\n             */\n            Struct.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Struct)\n                    return object;\n                var message = new $root.google.protobuf.Struct();\n                if (object.fields) {\n                    if (typeof object.fields !== \"object\")\n                        throw TypeError(\".google.protobuf.Struct.fields: object expected\");\n                    message.fields = {};\n                    for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n                        if (typeof object.fields[keys[i]] !== \"object\")\n                            throw TypeError(\".google.protobuf.Struct.fields: object expected\");\n                        message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Struct message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {google.protobuf.Struct} message Struct\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Struct.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.objects || options.defaults)\n                    object.fields = {};\n                var keys2;\n                if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n                    object.fields = {};\n                    for (var j = 0; j < keys2.length; ++j)\n                        object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Struct to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Struct\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Struct.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Struct\n             * @function getTypeUrl\n             * @memberof google.protobuf.Struct\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Struct.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.protobuf.Struct\";\n            };\n\n            return Struct;\n        })();\n\n        protobuf.Value = (function() {\n\n            /**\n             * Properties of a Value.\n             * @memberof google.protobuf\n             * @interface IValue\n             * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue\n             * @property {number|null} [numberValue] Value numberValue\n             * @property {string|null} [stringValue] Value stringValue\n             * @property {boolean|null} [boolValue] Value boolValue\n             * @property {google.protobuf.IStruct|null} [structValue] Value structValue\n             * @property {google.protobuf.IListValue|null} [listValue] Value listValue\n             */\n\n            /**\n             * Constructs a new Value.\n             * @memberof google.protobuf\n             * @classdesc Represents a Value.\n             * @implements IValue\n             * @constructor\n             * @param {google.protobuf.IValue=} [properties] Properties to set\n             */\n            function Value(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Value nullValue.\n             * @member {google.protobuf.NullValue|null|undefined} nullValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.nullValue = null;\n\n            /**\n             * Value numberValue.\n             * @member {number|null|undefined} numberValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.numberValue = null;\n\n            /**\n             * Value stringValue.\n             * @member {string|null|undefined} stringValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.stringValue = null;\n\n            /**\n             * Value boolValue.\n             * @member {boolean|null|undefined} boolValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.boolValue = null;\n\n            /**\n             * Value structValue.\n             * @member {google.protobuf.IStruct|null|undefined} structValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.structValue = null;\n\n            /**\n             * Value listValue.\n             * @member {google.protobuf.IListValue|null|undefined} listValue\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Value.prototype.listValue = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Value kind.\n             * @member {\"nullValue\"|\"numberValue\"|\"stringValue\"|\"boolValue\"|\"structValue\"|\"listValue\"|undefined} kind\n             * @memberof google.protobuf.Value\n             * @instance\n             */\n            Object.defineProperty(Value.prototype, \"kind\", {\n                get: $util.oneOfGetter($oneOfFields = [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Value instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {google.protobuf.IValue=} [properties] Properties to set\n             * @returns {google.protobuf.Value} Value instance\n             */\n            Value.create = function create(properties) {\n                return new Value(properties);\n            };\n\n            /**\n             * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {google.protobuf.IValue} message Value message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Value.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nullValue != null && Object.hasOwnProperty.call(message, \"nullValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);\n                if (message.numberValue != null && Object.hasOwnProperty.call(message, \"numberValue\"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);\n                if (message.stringValue != null && Object.hasOwnProperty.call(message, \"stringValue\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);\n                if (message.boolValue != null && Object.hasOwnProperty.call(message, \"boolValue\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);\n                if (message.structValue != null && Object.hasOwnProperty.call(message, \"structValue\"))\n                    $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.listValue != null && Object.hasOwnProperty.call(message, \"listValue\"))\n                    $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {google.protobuf.IValue} message Value message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Value.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Value message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Value} Value\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Value.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.nullValue = reader.int32();\n                            break;\n                        }\n                    case 2: {\n                            message.numberValue = reader.double();\n                            break;\n                        }\n                    case 3: {\n                            message.stringValue = reader.string();\n                            break;\n                        }\n                    case 4: {\n                            message.boolValue = reader.bool();\n                            break;\n                        }\n                    case 5: {\n                            message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 6: {\n                            message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Value message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Value} Value\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Value.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Value message.\n             * @function verify\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Value.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n                    properties.kind = 1;\n                    switch (message.nullValue) {\n                    default:\n                        return \"nullValue: enum value expected\";\n                    case 0:\n                        break;\n                    }\n                }\n                if (message.numberValue != null && message.hasOwnProperty(\"numberValue\")) {\n                    if (properties.kind === 1)\n                        return \"kind: multiple values\";\n                    properties.kind = 1;\n                    if (typeof message.numberValue !== \"number\")\n                        return \"numberValue: number expected\";\n                }\n                if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n                    if (properties.kind === 1)\n                        return \"kind: multiple values\";\n                    properties.kind = 1;\n                    if (!$util.isString(message.stringValue))\n                        return \"stringValue: string expected\";\n                }\n                if (message.boolValue != null && message.hasOwnProperty(\"boolValue\")) {\n                    if (properties.kind === 1)\n                        return \"kind: multiple values\";\n                    properties.kind = 1;\n                    if (typeof message.boolValue !== \"boolean\")\n                        return \"boolValue: boolean expected\";\n                }\n                if (message.structValue != null && message.hasOwnProperty(\"structValue\")) {\n                    if (properties.kind === 1)\n                        return \"kind: multiple values\";\n                    properties.kind = 1;\n                    {\n                        var error = $root.google.protobuf.Struct.verify(message.structValue);\n                        if (error)\n                            return \"structValue.\" + error;\n                    }\n                }\n                if (message.listValue != null && message.hasOwnProperty(\"listValue\")) {\n                    if (properties.kind === 1)\n                        return \"kind: multiple values\";\n                    properties.kind = 1;\n                    {\n                        var error = $root.google.protobuf.ListValue.verify(message.listValue);\n                        if (error)\n                            return \"listValue.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Value message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Value} Value\n             */\n            Value.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Value)\n                    return object;\n                var message = new $root.google.protobuf.Value();\n                switch (object.nullValue) {\n                default:\n                    if (typeof object.nullValue === \"number\") {\n                        message.nullValue = object.nullValue;\n                        break;\n                    }\n                    break;\n                case \"NULL_VALUE\":\n                case 0:\n                    message.nullValue = 0;\n                    break;\n                }\n                if (object.numberValue != null)\n                    message.numberValue = Number(object.numberValue);\n                if (object.stringValue != null)\n                    message.stringValue = String(object.stringValue);\n                if (object.boolValue != null)\n                    message.boolValue = Boolean(object.boolValue);\n                if (object.structValue != null) {\n                    if (typeof object.structValue !== \"object\")\n                        throw TypeError(\".google.protobuf.Value.structValue: object expected\");\n                    message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);\n                }\n                if (object.listValue != null) {\n                    if (typeof object.listValue !== \"object\")\n                        throw TypeError(\".google.protobuf.Value.listValue: object expected\");\n                    message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Value message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {google.protobuf.Value} message Value\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Value.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n                    object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] === undefined ? message.nullValue : $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;\n                    if (options.oneofs)\n                        object.kind = \"nullValue\";\n                }\n                if (message.numberValue != null && message.hasOwnProperty(\"numberValue\")) {\n                    object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;\n                    if (options.oneofs)\n                        object.kind = \"numberValue\";\n                }\n                if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n                    object.stringValue = message.stringValue;\n                    if (options.oneofs)\n                        object.kind = \"stringValue\";\n                }\n                if (message.boolValue != null && message.hasOwnProperty(\"boolValue\")) {\n                    object.boolValue = message.boolValue;\n                    if (options.oneofs)\n                        object.kind = \"boolValue\";\n                }\n                if (message.structValue != null && message.hasOwnProperty(\"structValue\")) {\n                    object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);\n                    if (options.oneofs)\n                        object.kind = \"structValue\";\n                }\n                if (message.listValue != null && message.hasOwnProperty(\"listValue\")) {\n                    object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);\n                    if (options.oneofs)\n                        object.kind = \"listValue\";\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Value to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Value\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Value.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Value\n             * @function getTypeUrl\n             * @memberof google.protobuf.Value\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.protobuf.Value\";\n            };\n\n            return Value;\n        })();\n\n        /**\n         * NullValue enum.\n         * @name google.protobuf.NullValue\n         * @enum {number}\n         * @property {number} NULL_VALUE=0 NULL_VALUE value\n         */\n        protobuf.NullValue = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"NULL_VALUE\"] = 0;\n            return values;\n        })();\n\n        protobuf.ListValue = (function() {\n\n            /**\n             * Properties of a ListValue.\n             * @memberof google.protobuf\n             * @interface IListValue\n             * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values\n             */\n\n            /**\n             * Constructs a new ListValue.\n             * @memberof google.protobuf\n             * @classdesc Represents a ListValue.\n             * @implements IListValue\n             * @constructor\n             * @param {google.protobuf.IListValue=} [properties] Properties to set\n             */\n            function ListValue(properties) {\n                this.values = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ListValue values.\n             * @member {Array.<google.protobuf.IValue>} values\n             * @memberof google.protobuf.ListValue\n             * @instance\n             */\n            ListValue.prototype.values = $util.emptyArray;\n\n            /**\n             * Creates a new ListValue instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {google.protobuf.IListValue=} [properties] Properties to set\n             * @returns {google.protobuf.ListValue} ListValue instance\n             */\n            ListValue.create = function create(properties) {\n                return new ListValue(properties);\n            };\n\n            /**\n             * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {google.protobuf.IListValue} message ListValue message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ListValue.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.values != null && message.values.length)\n                    for (var i = 0; i < message.values.length; ++i)\n                        $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {google.protobuf.IListValue} message ListValue message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ListValue.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ListValue message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.ListValue} ListValue\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ListValue.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            if (!(message.values && message.values.length))\n                                message.values = [];\n                            message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ListValue message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.ListValue} ListValue\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ListValue.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ListValue message.\n             * @function verify\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ListValue.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.values != null && message.hasOwnProperty(\"values\")) {\n                    if (!Array.isArray(message.values))\n                        return \"values: array expected\";\n                    for (var i = 0; i < message.values.length; ++i) {\n                        var error = $root.google.protobuf.Value.verify(message.values[i]);\n                        if (error)\n                            return \"values.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ListValue message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.ListValue} ListValue\n             */\n            ListValue.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.ListValue)\n                    return object;\n                var message = new $root.google.protobuf.ListValue();\n                if (object.values) {\n                    if (!Array.isArray(object.values))\n                        throw TypeError(\".google.protobuf.ListValue.values: array expected\");\n                    message.values = [];\n                    for (var i = 0; i < object.values.length; ++i) {\n                        if (typeof object.values[i] !== \"object\")\n                            throw TypeError(\".google.protobuf.ListValue.values: object expected\");\n                        message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ListValue message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {google.protobuf.ListValue} message ListValue\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ListValue.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.values = [];\n                if (message.values && message.values.length) {\n                    object.values = [];\n                    for (var j = 0; j < message.values.length; ++j)\n                        object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ListValue to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.ListValue\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ListValue.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for ListValue\n             * @function getTypeUrl\n             * @memberof google.protobuf.ListValue\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            ListValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.protobuf.ListValue\";\n            };\n\n            return ListValue;\n        })();\n\n        protobuf.Timestamp = (function() {\n\n            /**\n             * Properties of a Timestamp.\n             * @memberof google.protobuf\n             * @interface ITimestamp\n             * @property {number|Long|null} [seconds] Timestamp seconds\n             * @property {number|null} [nanos] Timestamp nanos\n             */\n\n            /**\n             * Constructs a new Timestamp.\n             * @memberof google.protobuf\n             * @classdesc Represents a Timestamp.\n             * @implements ITimestamp\n             * @constructor\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             */\n            function Timestamp(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Timestamp seconds.\n             * @member {number|Long} seconds\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Timestamp nanos.\n             * @member {number} nanos\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             */\n            Timestamp.prototype.nanos = 0;\n\n            /**\n             * Creates a new Timestamp instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n             * @returns {google.protobuf.Timestamp} Timestamp instance\n             */\n            Timestamp.create = function create(properties) {\n                return new Timestamp(properties);\n            };\n\n            /**\n             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.seconds != null && Object.hasOwnProperty.call(message, \"seconds\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);\n                if (message.nanos != null && Object.hasOwnProperty.call(message, \"nanos\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.seconds = reader.int64();\n                            break;\n                        }\n                    case 2: {\n                            message.nanos = reader.int32();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Timestamp message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Timestamp} Timestamp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timestamp.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Timestamp message.\n             * @function verify\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Timestamp.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))\n                        return \"seconds: integer|Long expected\";\n                if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                    if (!$util.isInteger(message.nanos))\n                        return \"nanos: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Timestamp} Timestamp\n             */\n            Timestamp.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Timestamp)\n                    return object;\n                var message = new $root.google.protobuf.Timestamp();\n                if (object.seconds != null)\n                    if ($util.Long)\n                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;\n                    else if (typeof object.seconds === \"string\")\n                        message.seconds = parseInt(object.seconds, 10);\n                    else if (typeof object.seconds === \"number\")\n                        message.seconds = object.seconds;\n                    else if (typeof object.seconds === \"object\")\n                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n                if (object.nanos != null)\n                    message.nanos = object.nanos | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {google.protobuf.Timestamp} message Timestamp\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Timestamp.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.seconds = options.longs === String ? \"0\" : 0;\n                    object.nanos = 0;\n                }\n                if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                    if (typeof message.seconds === \"number\")\n                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;\n                    else\n                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n                if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                    object.nanos = message.nanos;\n                return object;\n            };\n\n            /**\n             * Converts this Timestamp to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Timestamp\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Timestamp.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Timestamp\n             * @function getTypeUrl\n             * @memberof google.protobuf.Timestamp\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.protobuf.Timestamp\";\n            };\n\n            return Timestamp;\n        })();\n\n        protobuf.Any = (function() {\n\n            /**\n             * Properties of an Any.\n             * @memberof google.protobuf\n             * @interface IAny\n             * @property {string|null} [typeUrl] Any typeUrl\n             * @property {Uint8Array|null} [value] Any value\n             */\n\n            /**\n             * Constructs a new Any.\n             * @memberof google.protobuf\n             * @classdesc Represents an Any.\n             * @implements IAny\n             * @constructor\n             * @param {google.protobuf.IAny=} [properties] Properties to set\n             */\n            function Any(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Any typeUrl.\n             * @member {string} typeUrl\n             * @memberof google.protobuf.Any\n             * @instance\n             */\n            Any.prototype.typeUrl = \"\";\n\n            /**\n             * Any value.\n             * @member {Uint8Array} value\n             * @memberof google.protobuf.Any\n             * @instance\n             */\n            Any.prototype.value = $util.newBuffer([]);\n\n            /**\n             * Creates a new Any instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {google.protobuf.IAny=} [properties] Properties to set\n             * @returns {google.protobuf.Any} Any instance\n             */\n            Any.create = function create(properties) {\n                return new Any(properties);\n            };\n\n            /**\n             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {google.protobuf.IAny} message Any message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Any.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.typeUrl != null && Object.hasOwnProperty.call(message, \"typeUrl\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.typeUrl);\n                if (message.value != null && Object.hasOwnProperty.call(message, \"value\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {google.protobuf.IAny} message Any message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Any.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Any message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Any} Any\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Any.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.typeUrl = reader.string();\n                            break;\n                        }\n                    case 2: {\n                            message.value = reader.bytes();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Any message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Any} Any\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Any.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Any message.\n             * @function verify\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Any.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.typeUrl != null && message.hasOwnProperty(\"typeUrl\"))\n                    if (!$util.isString(message.typeUrl))\n                        return \"typeUrl: string expected\";\n                if (message.value != null && message.hasOwnProperty(\"value\"))\n                    if (!(message.value && typeof message.value.length === \"number\" || $util.isString(message.value)))\n                        return \"value: buffer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Any message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Any} Any\n             */\n            Any.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Any)\n                    return object;\n                var message = new $root.google.protobuf.Any();\n                if (object.typeUrl != null)\n                    message.typeUrl = String(object.typeUrl);\n                if (object.value != null)\n                    if (typeof object.value === \"string\")\n                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);\n                    else if (object.value.length >= 0)\n                        message.value = object.value;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Any message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {google.protobuf.Any} message Any\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Any.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.typeUrl = \"\";\n                    if (options.bytes === String)\n                        object.value = \"\";\n                    else {\n                        object.value = [];\n                        if (options.bytes !== Array)\n                            object.value = $util.newBuffer(object.value);\n                    }\n                }\n                if (message.typeUrl != null && message.hasOwnProperty(\"typeUrl\"))\n                    object.typeUrl = message.typeUrl;\n                if (message.value != null && message.hasOwnProperty(\"value\"))\n                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n                return object;\n            };\n\n            /**\n             * Converts this Any to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Any\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Any.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Any\n             * @function getTypeUrl\n             * @memberof google.protobuf.Any\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.protobuf.Any\";\n            };\n\n            return Any;\n        })();\n\n        return protobuf;\n    })();\n\n    google.events = (function() {\n\n        /**\n         * Namespace events.\n         * @memberof google\n         * @namespace\n         */\n        var events = {};\n\n        events.cloud = (function() {\n\n            /**\n             * Namespace cloud.\n             * @memberof google.events\n             * @namespace\n             */\n            var cloud = {};\n\n            cloud.firestore = (function() {\n\n                /**\n                 * Namespace firestore.\n                 * @memberof google.events.cloud\n                 * @namespace\n                 */\n                var firestore = {};\n\n                firestore.v1 = (function() {\n\n                    /**\n                     * Namespace v1.\n                     * @memberof google.events.cloud.firestore\n                     * @namespace\n                     */\n                    var v1 = {};\n\n                    v1.DocumentEventData = (function() {\n\n                        /**\n                         * Properties of a DocumentEventData.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IDocumentEventData\n                         * @property {google.events.cloud.firestore.v1.IDocument|null} [value] DocumentEventData value\n                         * @property {google.events.cloud.firestore.v1.IDocument|null} [oldValue] DocumentEventData oldValue\n                         * @property {google.events.cloud.firestore.v1.IDocumentMask|null} [updateMask] DocumentEventData updateMask\n                         */\n\n                        /**\n                         * Constructs a new DocumentEventData.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents a DocumentEventData.\n                         * @implements IDocumentEventData\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IDocumentEventData=} [properties] Properties to set\n                         */\n                        function DocumentEventData(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * DocumentEventData value.\n                         * @member {google.events.cloud.firestore.v1.IDocument|null|undefined} value\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @instance\n                         */\n                        DocumentEventData.prototype.value = null;\n\n                        /**\n                         * DocumentEventData oldValue.\n                         * @member {google.events.cloud.firestore.v1.IDocument|null|undefined} oldValue\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @instance\n                         */\n                        DocumentEventData.prototype.oldValue = null;\n\n                        /**\n                         * DocumentEventData updateMask.\n                         * @member {google.events.cloud.firestore.v1.IDocumentMask|null|undefined} updateMask\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @instance\n                         */\n                        DocumentEventData.prototype.updateMask = null;\n\n                        /**\n                         * Creates a new DocumentEventData instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentEventData=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.DocumentEventData} DocumentEventData instance\n                         */\n                        DocumentEventData.create = function create(properties) {\n                            return new DocumentEventData(properties);\n                        };\n\n                        /**\n                         * Encodes the specified DocumentEventData message. Does not implicitly {@link google.events.cloud.firestore.v1.DocumentEventData.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentEventData} message DocumentEventData message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DocumentEventData.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.value != null && Object.hasOwnProperty.call(message, \"value\"))\n                                $root.google.events.cloud.firestore.v1.Document.encode(message.value, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.oldValue != null && Object.hasOwnProperty.call(message, \"oldValue\"))\n                                $root.google.events.cloud.firestore.v1.Document.encode(message.oldValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.updateMask != null && Object.hasOwnProperty.call(message, \"updateMask\"))\n                                $root.google.events.cloud.firestore.v1.DocumentMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified DocumentEventData message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.DocumentEventData.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentEventData} message DocumentEventData message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DocumentEventData.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a DocumentEventData message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.DocumentEventData} DocumentEventData\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DocumentEventData.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.DocumentEventData();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1: {\n                                        message.value = $root.google.events.cloud.firestore.v1.Document.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 2: {\n                                        message.oldValue = $root.google.events.cloud.firestore.v1.Document.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 3: {\n                                        message.updateMask = $root.google.events.cloud.firestore.v1.DocumentMask.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a DocumentEventData message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.DocumentEventData} DocumentEventData\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DocumentEventData.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a DocumentEventData message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        DocumentEventData.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.value != null && message.hasOwnProperty(\"value\")) {\n                                var error = $root.google.events.cloud.firestore.v1.Document.verify(message.value);\n                                if (error)\n                                    return \"value.\" + error;\n                            }\n                            if (message.oldValue != null && message.hasOwnProperty(\"oldValue\")) {\n                                var error = $root.google.events.cloud.firestore.v1.Document.verify(message.oldValue);\n                                if (error)\n                                    return \"oldValue.\" + error;\n                            }\n                            if (message.updateMask != null && message.hasOwnProperty(\"updateMask\")) {\n                                var error = $root.google.events.cloud.firestore.v1.DocumentMask.verify(message.updateMask);\n                                if (error)\n                                    return \"updateMask.\" + error;\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a DocumentEventData message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.DocumentEventData} DocumentEventData\n                         */\n                        DocumentEventData.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.DocumentEventData)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.DocumentEventData();\n                            if (object.value != null) {\n                                if (typeof object.value !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.DocumentEventData.value: object expected\");\n                                message.value = $root.google.events.cloud.firestore.v1.Document.fromObject(object.value);\n                            }\n                            if (object.oldValue != null) {\n                                if (typeof object.oldValue !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.DocumentEventData.oldValue: object expected\");\n                                message.oldValue = $root.google.events.cloud.firestore.v1.Document.fromObject(object.oldValue);\n                            }\n                            if (object.updateMask != null) {\n                                if (typeof object.updateMask !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.DocumentEventData.updateMask: object expected\");\n                                message.updateMask = $root.google.events.cloud.firestore.v1.DocumentMask.fromObject(object.updateMask);\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a DocumentEventData message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.DocumentEventData} message DocumentEventData\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        DocumentEventData.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.value = null;\n                                object.oldValue = null;\n                                object.updateMask = null;\n                            }\n                            if (message.value != null && message.hasOwnProperty(\"value\"))\n                                object.value = $root.google.events.cloud.firestore.v1.Document.toObject(message.value, options);\n                            if (message.oldValue != null && message.hasOwnProperty(\"oldValue\"))\n                                object.oldValue = $root.google.events.cloud.firestore.v1.Document.toObject(message.oldValue, options);\n                            if (message.updateMask != null && message.hasOwnProperty(\"updateMask\"))\n                                object.updateMask = $root.google.events.cloud.firestore.v1.DocumentMask.toObject(message.updateMask, options);\n                            return object;\n                        };\n\n                        /**\n                         * Converts this DocumentEventData to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        DocumentEventData.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for DocumentEventData\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.DocumentEventData\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        DocumentEventData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.DocumentEventData\";\n                        };\n\n                        return DocumentEventData;\n                    })();\n\n                    v1.DocumentMask = (function() {\n\n                        /**\n                         * Properties of a DocumentMask.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IDocumentMask\n                         * @property {Array.<string>|null} [fieldPaths] DocumentMask fieldPaths\n                         */\n\n                        /**\n                         * Constructs a new DocumentMask.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents a DocumentMask.\n                         * @implements IDocumentMask\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IDocumentMask=} [properties] Properties to set\n                         */\n                        function DocumentMask(properties) {\n                            this.fieldPaths = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * DocumentMask fieldPaths.\n                         * @member {Array.<string>} fieldPaths\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @instance\n                         */\n                        DocumentMask.prototype.fieldPaths = $util.emptyArray;\n\n                        /**\n                         * Creates a new DocumentMask instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentMask=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.DocumentMask} DocumentMask instance\n                         */\n                        DocumentMask.create = function create(properties) {\n                            return new DocumentMask(properties);\n                        };\n\n                        /**\n                         * Encodes the specified DocumentMask message. Does not implicitly {@link google.events.cloud.firestore.v1.DocumentMask.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentMask} message DocumentMask message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DocumentMask.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.fieldPaths != null && message.fieldPaths.length)\n                                for (var i = 0; i < message.fieldPaths.length; ++i)\n                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.fieldPaths[i]);\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified DocumentMask message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.DocumentMask.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocumentMask} message DocumentMask message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DocumentMask.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a DocumentMask message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.DocumentMask} DocumentMask\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DocumentMask.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.DocumentMask();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1: {\n                                        if (!(message.fieldPaths && message.fieldPaths.length))\n                                            message.fieldPaths = [];\n                                        message.fieldPaths.push(reader.string());\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a DocumentMask message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.DocumentMask} DocumentMask\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DocumentMask.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a DocumentMask message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        DocumentMask.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.fieldPaths != null && message.hasOwnProperty(\"fieldPaths\")) {\n                                if (!Array.isArray(message.fieldPaths))\n                                    return \"fieldPaths: array expected\";\n                                for (var i = 0; i < message.fieldPaths.length; ++i)\n                                    if (!$util.isString(message.fieldPaths[i]))\n                                        return \"fieldPaths: string[] expected\";\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a DocumentMask message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.DocumentMask} DocumentMask\n                         */\n                        DocumentMask.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.DocumentMask)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.DocumentMask();\n                            if (object.fieldPaths) {\n                                if (!Array.isArray(object.fieldPaths))\n                                    throw TypeError(\".google.events.cloud.firestore.v1.DocumentMask.fieldPaths: array expected\");\n                                message.fieldPaths = [];\n                                for (var i = 0; i < object.fieldPaths.length; ++i)\n                                    message.fieldPaths[i] = String(object.fieldPaths[i]);\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a DocumentMask message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.DocumentMask} message DocumentMask\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        DocumentMask.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.fieldPaths = [];\n                            if (message.fieldPaths && message.fieldPaths.length) {\n                                object.fieldPaths = [];\n                                for (var j = 0; j < message.fieldPaths.length; ++j)\n                                    object.fieldPaths[j] = message.fieldPaths[j];\n                            }\n                            return object;\n                        };\n\n                        /**\n                         * Converts this DocumentMask to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        DocumentMask.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for DocumentMask\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.DocumentMask\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        DocumentMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.DocumentMask\";\n                        };\n\n                        return DocumentMask;\n                    })();\n\n                    v1.Document = (function() {\n\n                        /**\n                         * Properties of a Document.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IDocument\n                         * @property {string|null} [name] Document name\n                         * @property {Object.<string,google.events.cloud.firestore.v1.IValue>|null} [fields] Document fields\n                         * @property {google.protobuf.ITimestamp|null} [createTime] Document createTime\n                         * @property {google.protobuf.ITimestamp|null} [updateTime] Document updateTime\n                         */\n\n                        /**\n                         * Constructs a new Document.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents a Document.\n                         * @implements IDocument\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IDocument=} [properties] Properties to set\n                         */\n                        function Document(properties) {\n                            this.fields = {};\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * Document name.\n                         * @member {string} name\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.name = \"\";\n\n                        /**\n                         * Document fields.\n                         * @member {Object.<string,google.events.cloud.firestore.v1.IValue>} fields\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.fields = $util.emptyObject;\n\n                        /**\n                         * Document createTime.\n                         * @member {google.protobuf.ITimestamp|null|undefined} createTime\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.createTime = null;\n\n                        /**\n                         * Document updateTime.\n                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.updateTime = null;\n\n                        /**\n                         * Creates a new Document instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocument=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.Document} Document instance\n                         */\n                        Document.create = function create(properties) {\n                            return new Document(properties);\n                        };\n\n                        /**\n                         * Encodes the specified Document message. Does not implicitly {@link google.events.cloud.firestore.v1.Document.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                            if (message.fields != null && Object.hasOwnProperty.call(message, \"fields\"))\n                                for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {\n                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                                    $root.google.events.cloud.firestore.v1.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                                }\n                            if (message.createTime != null && Object.hasOwnProperty.call(message, \"createTime\"))\n                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.updateTime != null && Object.hasOwnProperty.call(message, \"updateTime\"))\n                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.Document.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a Document message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.Document(), key, value;\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1: {\n                                        message.name = reader.string();\n                                        break;\n                                    }\n                                case 2: {\n                                        if (message.fields === $util.emptyObject)\n                                            message.fields = {};\n                                        var end2 = reader.uint32() + reader.pos;\n                                        key = \"\";\n                                        value = null;\n                                        while (reader.pos < end2) {\n                                            var tag2 = reader.uint32();\n                                            switch (tag2 >>> 3) {\n                                            case 1:\n                                                key = reader.string();\n                                                break;\n                                            case 2:\n                                                value = $root.google.events.cloud.firestore.v1.Value.decode(reader, reader.uint32());\n                                                break;\n                                            default:\n                                                reader.skipType(tag2 & 7);\n                                                break;\n                                            }\n                                        }\n                                        message.fields[key] = value;\n                                        break;\n                                    }\n                                case 3: {\n                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 4: {\n                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a Document message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a Document message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Document.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                if (!$util.isString(message.name))\n                                    return \"name: string expected\";\n                            if (message.fields != null && message.hasOwnProperty(\"fields\")) {\n                                if (!$util.isObject(message.fields))\n                                    return \"fields: object expected\";\n                                var key = Object.keys(message.fields);\n                                for (var i = 0; i < key.length; ++i) {\n                                    var error = $root.google.events.cloud.firestore.v1.Value.verify(message.fields[key[i]]);\n                                    if (error)\n                                        return \"fields.\" + error;\n                                }\n                            }\n                            if (message.createTime != null && message.hasOwnProperty(\"createTime\")) {\n                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);\n                                if (error)\n                                    return \"createTime.\" + error;\n                            }\n                            if (message.updateTime != null && message.hasOwnProperty(\"updateTime\")) {\n                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);\n                                if (error)\n                                    return \"updateTime.\" + error;\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a Document message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.Document} Document\n                         */\n                        Document.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.Document)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.Document();\n                            if (object.name != null)\n                                message.name = String(object.name);\n                            if (object.fields) {\n                                if (typeof object.fields !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Document.fields: object expected\");\n                                message.fields = {};\n                                for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n                                    if (typeof object.fields[keys[i]] !== \"object\")\n                                        throw TypeError(\".google.events.cloud.firestore.v1.Document.fields: object expected\");\n                                    message.fields[keys[i]] = $root.google.events.cloud.firestore.v1.Value.fromObject(object.fields[keys[i]]);\n                                }\n                            }\n                            if (object.createTime != null) {\n                                if (typeof object.createTime !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Document.createTime: object expected\");\n                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);\n                            }\n                            if (object.updateTime != null) {\n                                if (typeof object.updateTime !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Document.updateTime: object expected\");\n                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a Document message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.Document} message Document\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Document.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.objects || options.defaults)\n                                object.fields = {};\n                            if (options.defaults) {\n                                object.name = \"\";\n                                object.createTime = null;\n                                object.updateTime = null;\n                            }\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                object.name = message.name;\n                            var keys2;\n                            if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n                                object.fields = {};\n                                for (var j = 0; j < keys2.length; ++j)\n                                    object.fields[keys2[j]] = $root.google.events.cloud.firestore.v1.Value.toObject(message.fields[keys2[j]], options);\n                            }\n                            if (message.createTime != null && message.hasOwnProperty(\"createTime\"))\n                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);\n                            if (message.updateTime != null && message.hasOwnProperty(\"updateTime\"))\n                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);\n                            return object;\n                        };\n\n                        /**\n                         * Converts this Document to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Document.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for Document\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.Document\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.Document\";\n                        };\n\n                        return Document;\n                    })();\n\n                    v1.Value = (function() {\n\n                        /**\n                         * Properties of a Value.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IValue\n                         * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue\n                         * @property {boolean|null} [booleanValue] Value booleanValue\n                         * @property {number|Long|null} [integerValue] Value integerValue\n                         * @property {number|null} [doubleValue] Value doubleValue\n                         * @property {google.protobuf.ITimestamp|null} [timestampValue] Value timestampValue\n                         * @property {string|null} [stringValue] Value stringValue\n                         * @property {Uint8Array|null} [bytesValue] Value bytesValue\n                         * @property {string|null} [referenceValue] Value referenceValue\n                         * @property {google.type.ILatLng|null} [geoPointValue] Value geoPointValue\n                         * @property {google.events.cloud.firestore.v1.IArrayValue|null} [arrayValue] Value arrayValue\n                         * @property {google.events.cloud.firestore.v1.IMapValue|null} [mapValue] Value mapValue\n                         */\n\n                        /**\n                         * Constructs a new Value.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents a Value.\n                         * @implements IValue\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IValue=} [properties] Properties to set\n                         */\n                        function Value(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * Value nullValue.\n                         * @member {google.protobuf.NullValue|null|undefined} nullValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.nullValue = null;\n\n                        /**\n                         * Value booleanValue.\n                         * @member {boolean|null|undefined} booleanValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.booleanValue = null;\n\n                        /**\n                         * Value integerValue.\n                         * @member {number|Long|null|undefined} integerValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.integerValue = null;\n\n                        /**\n                         * Value doubleValue.\n                         * @member {number|null|undefined} doubleValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.doubleValue = null;\n\n                        /**\n                         * Value timestampValue.\n                         * @member {google.protobuf.ITimestamp|null|undefined} timestampValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.timestampValue = null;\n\n                        /**\n                         * Value stringValue.\n                         * @member {string|null|undefined} stringValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.stringValue = null;\n\n                        /**\n                         * Value bytesValue.\n                         * @member {Uint8Array|null|undefined} bytesValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.bytesValue = null;\n\n                        /**\n                         * Value referenceValue.\n                         * @member {string|null|undefined} referenceValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.referenceValue = null;\n\n                        /**\n                         * Value geoPointValue.\n                         * @member {google.type.ILatLng|null|undefined} geoPointValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.geoPointValue = null;\n\n                        /**\n                         * Value arrayValue.\n                         * @member {google.events.cloud.firestore.v1.IArrayValue|null|undefined} arrayValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.arrayValue = null;\n\n                        /**\n                         * Value mapValue.\n                         * @member {google.events.cloud.firestore.v1.IMapValue|null|undefined} mapValue\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Value.prototype.mapValue = null;\n\n                        // OneOf field names bound to virtual getters and setters\n                        var $oneOfFields;\n\n                        /**\n                         * Value valueType.\n                         * @member {\"nullValue\"|\"booleanValue\"|\"integerValue\"|\"doubleValue\"|\"timestampValue\"|\"stringValue\"|\"bytesValue\"|\"referenceValue\"|\"geoPointValue\"|\"arrayValue\"|\"mapValue\"|undefined} valueType\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         */\n                        Object.defineProperty(Value.prototype, \"valueType\", {\n                            get: $util.oneOfGetter($oneOfFields = [\"nullValue\", \"booleanValue\", \"integerValue\", \"doubleValue\", \"timestampValue\", \"stringValue\", \"bytesValue\", \"referenceValue\", \"geoPointValue\", \"arrayValue\", \"mapValue\"]),\n                            set: $util.oneOfSetter($oneOfFields)\n                        });\n\n                        /**\n                         * Creates a new Value instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IValue=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.Value} Value instance\n                         */\n                        Value.create = function create(properties) {\n                            return new Value(properties);\n                        };\n\n                        /**\n                         * Encodes the specified Value message. Does not implicitly {@link google.events.cloud.firestore.v1.Value.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IValue} message Value message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Value.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.booleanValue != null && Object.hasOwnProperty.call(message, \"booleanValue\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.booleanValue);\n                            if (message.integerValue != null && Object.hasOwnProperty.call(message, \"integerValue\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.integerValue);\n                            if (message.doubleValue != null && Object.hasOwnProperty.call(message, \"doubleValue\"))\n                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.doubleValue);\n                            if (message.referenceValue != null && Object.hasOwnProperty.call(message, \"referenceValue\"))\n                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.referenceValue);\n                            if (message.mapValue != null && Object.hasOwnProperty.call(message, \"mapValue\"))\n                                $root.google.events.cloud.firestore.v1.MapValue.encode(message.mapValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            if (message.geoPointValue != null && Object.hasOwnProperty.call(message, \"geoPointValue\"))\n                                $root.google.type.LatLng.encode(message.geoPointValue, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                            if (message.arrayValue != null && Object.hasOwnProperty.call(message, \"arrayValue\"))\n                                $root.google.events.cloud.firestore.v1.ArrayValue.encode(message.arrayValue, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                            if (message.timestampValue != null && Object.hasOwnProperty.call(message, \"timestampValue\"))\n                                $root.google.protobuf.Timestamp.encode(message.timestampValue, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                            if (message.nullValue != null && Object.hasOwnProperty.call(message, \"nullValue\"))\n                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.nullValue);\n                            if (message.stringValue != null && Object.hasOwnProperty.call(message, \"stringValue\"))\n                                writer.uint32(/* id 17, wireType 2 =*/138).string(message.stringValue);\n                            if (message.bytesValue != null && Object.hasOwnProperty.call(message, \"bytesValue\"))\n                                writer.uint32(/* id 18, wireType 2 =*/146).bytes(message.bytesValue);\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified Value message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.Value.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IValue} message Value message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Value.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a Value message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.Value} Value\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Value.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.Value();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 11: {\n                                        message.nullValue = reader.int32();\n                                        break;\n                                    }\n                                case 1: {\n                                        message.booleanValue = reader.bool();\n                                        break;\n                                    }\n                                case 2: {\n                                        message.integerValue = reader.int64();\n                                        break;\n                                    }\n                                case 3: {\n                                        message.doubleValue = reader.double();\n                                        break;\n                                    }\n                                case 10: {\n                                        message.timestampValue = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 17: {\n                                        message.stringValue = reader.string();\n                                        break;\n                                    }\n                                case 18: {\n                                        message.bytesValue = reader.bytes();\n                                        break;\n                                    }\n                                case 5: {\n                                        message.referenceValue = reader.string();\n                                        break;\n                                    }\n                                case 8: {\n                                        message.geoPointValue = $root.google.type.LatLng.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 9: {\n                                        message.arrayValue = $root.google.events.cloud.firestore.v1.ArrayValue.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                case 6: {\n                                        message.mapValue = $root.google.events.cloud.firestore.v1.MapValue.decode(reader, reader.uint32());\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a Value message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.Value} Value\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Value.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a Value message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Value.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            var properties = {};\n                            if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n                                properties.valueType = 1;\n                                switch (message.nullValue) {\n                                default:\n                                    return \"nullValue: enum value expected\";\n                                case 0:\n                                    break;\n                                }\n                            }\n                            if (message.booleanValue != null && message.hasOwnProperty(\"booleanValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (typeof message.booleanValue !== \"boolean\")\n                                    return \"booleanValue: boolean expected\";\n                            }\n                            if (message.integerValue != null && message.hasOwnProperty(\"integerValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (!$util.isInteger(message.integerValue) && !(message.integerValue && $util.isInteger(message.integerValue.low) && $util.isInteger(message.integerValue.high)))\n                                    return \"integerValue: integer|Long expected\";\n                            }\n                            if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (typeof message.doubleValue !== \"number\")\n                                    return \"doubleValue: number expected\";\n                            }\n                            if (message.timestampValue != null && message.hasOwnProperty(\"timestampValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                {\n                                    var error = $root.google.protobuf.Timestamp.verify(message.timestampValue);\n                                    if (error)\n                                        return \"timestampValue.\" + error;\n                                }\n                            }\n                            if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (!$util.isString(message.stringValue))\n                                    return \"stringValue: string expected\";\n                            }\n                            if (message.bytesValue != null && message.hasOwnProperty(\"bytesValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (!(message.bytesValue && typeof message.bytesValue.length === \"number\" || $util.isString(message.bytesValue)))\n                                    return \"bytesValue: buffer expected\";\n                            }\n                            if (message.referenceValue != null && message.hasOwnProperty(\"referenceValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                if (!$util.isString(message.referenceValue))\n                                    return \"referenceValue: string expected\";\n                            }\n                            if (message.geoPointValue != null && message.hasOwnProperty(\"geoPointValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                {\n                                    var error = $root.google.type.LatLng.verify(message.geoPointValue);\n                                    if (error)\n                                        return \"geoPointValue.\" + error;\n                                }\n                            }\n                            if (message.arrayValue != null && message.hasOwnProperty(\"arrayValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                {\n                                    var error = $root.google.events.cloud.firestore.v1.ArrayValue.verify(message.arrayValue);\n                                    if (error)\n                                        return \"arrayValue.\" + error;\n                                }\n                            }\n                            if (message.mapValue != null && message.hasOwnProperty(\"mapValue\")) {\n                                if (properties.valueType === 1)\n                                    return \"valueType: multiple values\";\n                                properties.valueType = 1;\n                                {\n                                    var error = $root.google.events.cloud.firestore.v1.MapValue.verify(message.mapValue);\n                                    if (error)\n                                        return \"mapValue.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.Value} Value\n                         */\n                        Value.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.Value)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.Value();\n                            switch (object.nullValue) {\n                            default:\n                                if (typeof object.nullValue === \"number\") {\n                                    message.nullValue = object.nullValue;\n                                    break;\n                                }\n                                break;\n                            case \"NULL_VALUE\":\n                            case 0:\n                                message.nullValue = 0;\n                                break;\n                            }\n                            if (object.booleanValue != null)\n                                message.booleanValue = Boolean(object.booleanValue);\n                            if (object.integerValue != null)\n                                if ($util.Long)\n                                    (message.integerValue = $util.Long.fromValue(object.integerValue)).unsigned = false;\n                                else if (typeof object.integerValue === \"string\")\n                                    message.integerValue = parseInt(object.integerValue, 10);\n                                else if (typeof object.integerValue === \"number\")\n                                    message.integerValue = object.integerValue;\n                                else if (typeof object.integerValue === \"object\")\n                                    message.integerValue = new $util.LongBits(object.integerValue.low >>> 0, object.integerValue.high >>> 0).toNumber();\n                            if (object.doubleValue != null)\n                                message.doubleValue = Number(object.doubleValue);\n                            if (object.timestampValue != null) {\n                                if (typeof object.timestampValue !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Value.timestampValue: object expected\");\n                                message.timestampValue = $root.google.protobuf.Timestamp.fromObject(object.timestampValue);\n                            }\n                            if (object.stringValue != null)\n                                message.stringValue = String(object.stringValue);\n                            if (object.bytesValue != null)\n                                if (typeof object.bytesValue === \"string\")\n                                    $util.base64.decode(object.bytesValue, message.bytesValue = $util.newBuffer($util.base64.length(object.bytesValue)), 0);\n                                else if (object.bytesValue.length >= 0)\n                                    message.bytesValue = object.bytesValue;\n                            if (object.referenceValue != null)\n                                message.referenceValue = String(object.referenceValue);\n                            if (object.geoPointValue != null) {\n                                if (typeof object.geoPointValue !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Value.geoPointValue: object expected\");\n                                message.geoPointValue = $root.google.type.LatLng.fromObject(object.geoPointValue);\n                            }\n                            if (object.arrayValue != null) {\n                                if (typeof object.arrayValue !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Value.arrayValue: object expected\");\n                                message.arrayValue = $root.google.events.cloud.firestore.v1.ArrayValue.fromObject(object.arrayValue);\n                            }\n                            if (object.mapValue != null) {\n                                if (typeof object.mapValue !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.Value.mapValue: object expected\");\n                                message.mapValue = $root.google.events.cloud.firestore.v1.MapValue.fromObject(object.mapValue);\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a Value message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.Value} message Value\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Value.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (message.booleanValue != null && message.hasOwnProperty(\"booleanValue\")) {\n                                object.booleanValue = message.booleanValue;\n                                if (options.oneofs)\n                                    object.valueType = \"booleanValue\";\n                            }\n                            if (message.integerValue != null && message.hasOwnProperty(\"integerValue\")) {\n                                if (typeof message.integerValue === \"number\")\n                                    object.integerValue = options.longs === String ? String(message.integerValue) : message.integerValue;\n                                else\n                                    object.integerValue = options.longs === String ? $util.Long.prototype.toString.call(message.integerValue) : options.longs === Number ? new $util.LongBits(message.integerValue.low >>> 0, message.integerValue.high >>> 0).toNumber() : message.integerValue;\n                                if (options.oneofs)\n                                    object.valueType = \"integerValue\";\n                            }\n                            if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) {\n                                object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                                if (options.oneofs)\n                                    object.valueType = \"doubleValue\";\n                            }\n                            if (message.referenceValue != null && message.hasOwnProperty(\"referenceValue\")) {\n                                object.referenceValue = message.referenceValue;\n                                if (options.oneofs)\n                                    object.valueType = \"referenceValue\";\n                            }\n                            if (message.mapValue != null && message.hasOwnProperty(\"mapValue\")) {\n                                object.mapValue = $root.google.events.cloud.firestore.v1.MapValue.toObject(message.mapValue, options);\n                                if (options.oneofs)\n                                    object.valueType = \"mapValue\";\n                            }\n                            if (message.geoPointValue != null && message.hasOwnProperty(\"geoPointValue\")) {\n                                object.geoPointValue = $root.google.type.LatLng.toObject(message.geoPointValue, options);\n                                if (options.oneofs)\n                                    object.valueType = \"geoPointValue\";\n                            }\n                            if (message.arrayValue != null && message.hasOwnProperty(\"arrayValue\")) {\n                                object.arrayValue = $root.google.events.cloud.firestore.v1.ArrayValue.toObject(message.arrayValue, options);\n                                if (options.oneofs)\n                                    object.valueType = \"arrayValue\";\n                            }\n                            if (message.timestampValue != null && message.hasOwnProperty(\"timestampValue\")) {\n                                object.timestampValue = $root.google.protobuf.Timestamp.toObject(message.timestampValue, options);\n                                if (options.oneofs)\n                                    object.valueType = \"timestampValue\";\n                            }\n                            if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n                                object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] === undefined ? message.nullValue : $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;\n                                if (options.oneofs)\n                                    object.valueType = \"nullValue\";\n                            }\n                            if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n                                object.stringValue = message.stringValue;\n                                if (options.oneofs)\n                                    object.valueType = \"stringValue\";\n                            }\n                            if (message.bytesValue != null && message.hasOwnProperty(\"bytesValue\")) {\n                                object.bytesValue = options.bytes === String ? $util.base64.encode(message.bytesValue, 0, message.bytesValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.bytesValue) : message.bytesValue;\n                                if (options.oneofs)\n                                    object.valueType = \"bytesValue\";\n                            }\n                            return object;\n                        };\n\n                        /**\n                         * Converts this Value to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Value.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for Value\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.Value\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.Value\";\n                        };\n\n                        return Value;\n                    })();\n\n                    v1.ArrayValue = (function() {\n\n                        /**\n                         * Properties of an ArrayValue.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IArrayValue\n                         * @property {Array.<google.events.cloud.firestore.v1.IValue>|null} [values] ArrayValue values\n                         */\n\n                        /**\n                         * Constructs a new ArrayValue.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents an ArrayValue.\n                         * @implements IArrayValue\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IArrayValue=} [properties] Properties to set\n                         */\n                        function ArrayValue(properties) {\n                            this.values = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * ArrayValue values.\n                         * @member {Array.<google.events.cloud.firestore.v1.IValue>} values\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @instance\n                         */\n                        ArrayValue.prototype.values = $util.emptyArray;\n\n                        /**\n                         * Creates a new ArrayValue instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IArrayValue=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.ArrayValue} ArrayValue instance\n                         */\n                        ArrayValue.create = function create(properties) {\n                            return new ArrayValue(properties);\n                        };\n\n                        /**\n                         * Encodes the specified ArrayValue message. Does not implicitly {@link google.events.cloud.firestore.v1.ArrayValue.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IArrayValue} message ArrayValue message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ArrayValue.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.values != null && message.values.length)\n                                for (var i = 0; i < message.values.length; ++i)\n                                    $root.google.events.cloud.firestore.v1.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified ArrayValue message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.ArrayValue.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IArrayValue} message ArrayValue message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ArrayValue.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes an ArrayValue message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.ArrayValue} ArrayValue\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ArrayValue.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.ArrayValue();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1: {\n                                        if (!(message.values && message.values.length))\n                                            message.values = [];\n                                        message.values.push($root.google.events.cloud.firestore.v1.Value.decode(reader, reader.uint32()));\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes an ArrayValue message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.ArrayValue} ArrayValue\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ArrayValue.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies an ArrayValue message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ArrayValue.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.values != null && message.hasOwnProperty(\"values\")) {\n                                if (!Array.isArray(message.values))\n                                    return \"values: array expected\";\n                                for (var i = 0; i < message.values.length; ++i) {\n                                    var error = $root.google.events.cloud.firestore.v1.Value.verify(message.values[i]);\n                                    if (error)\n                                        return \"values.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates an ArrayValue message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.ArrayValue} ArrayValue\n                         */\n                        ArrayValue.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.ArrayValue)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.ArrayValue();\n                            if (object.values) {\n                                if (!Array.isArray(object.values))\n                                    throw TypeError(\".google.events.cloud.firestore.v1.ArrayValue.values: array expected\");\n                                message.values = [];\n                                for (var i = 0; i < object.values.length; ++i) {\n                                    if (typeof object.values[i] !== \"object\")\n                                        throw TypeError(\".google.events.cloud.firestore.v1.ArrayValue.values: object expected\");\n                                    message.values[i] = $root.google.events.cloud.firestore.v1.Value.fromObject(object.values[i]);\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from an ArrayValue message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.ArrayValue} message ArrayValue\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ArrayValue.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.values = [];\n                            if (message.values && message.values.length) {\n                                object.values = [];\n                                for (var j = 0; j < message.values.length; ++j)\n                                    object.values[j] = $root.google.events.cloud.firestore.v1.Value.toObject(message.values[j], options);\n                            }\n                            return object;\n                        };\n\n                        /**\n                         * Converts this ArrayValue to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ArrayValue.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for ArrayValue\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.ArrayValue\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        ArrayValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.ArrayValue\";\n                        };\n\n                        return ArrayValue;\n                    })();\n\n                    v1.MapValue = (function() {\n\n                        /**\n                         * Properties of a MapValue.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @interface IMapValue\n                         * @property {Object.<string,google.events.cloud.firestore.v1.IValue>|null} [fields] MapValue fields\n                         */\n\n                        /**\n                         * Constructs a new MapValue.\n                         * @memberof google.events.cloud.firestore.v1\n                         * @classdesc Represents a MapValue.\n                         * @implements IMapValue\n                         * @constructor\n                         * @param {google.events.cloud.firestore.v1.IMapValue=} [properties] Properties to set\n                         */\n                        function MapValue(properties) {\n                            this.fields = {};\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * MapValue fields.\n                         * @member {Object.<string,google.events.cloud.firestore.v1.IValue>} fields\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @instance\n                         */\n                        MapValue.prototype.fields = $util.emptyObject;\n\n                        /**\n                         * Creates a new MapValue instance using the specified properties.\n                         * @function create\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IMapValue=} [properties] Properties to set\n                         * @returns {google.events.cloud.firestore.v1.MapValue} MapValue instance\n                         */\n                        MapValue.create = function create(properties) {\n                            return new MapValue(properties);\n                        };\n\n                        /**\n                         * Encodes the specified MapValue message. Does not implicitly {@link google.events.cloud.firestore.v1.MapValue.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IMapValue} message MapValue message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        MapValue.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.fields != null && Object.hasOwnProperty.call(message, \"fields\"))\n                                for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {\n                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                                    $root.google.events.cloud.firestore.v1.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                                }\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified MapValue message, length delimited. Does not implicitly {@link google.events.cloud.firestore.v1.MapValue.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.IMapValue} message MapValue message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        MapValue.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a MapValue message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.events.cloud.firestore.v1.MapValue} MapValue\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        MapValue.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.events.cloud.firestore.v1.MapValue(), key, value;\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1: {\n                                        if (message.fields === $util.emptyObject)\n                                            message.fields = {};\n                                        var end2 = reader.uint32() + reader.pos;\n                                        key = \"\";\n                                        value = null;\n                                        while (reader.pos < end2) {\n                                            var tag2 = reader.uint32();\n                                            switch (tag2 >>> 3) {\n                                            case 1:\n                                                key = reader.string();\n                                                break;\n                                            case 2:\n                                                value = $root.google.events.cloud.firestore.v1.Value.decode(reader, reader.uint32());\n                                                break;\n                                            default:\n                                                reader.skipType(tag2 & 7);\n                                                break;\n                                            }\n                                        }\n                                        message.fields[key] = value;\n                                        break;\n                                    }\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a MapValue message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.events.cloud.firestore.v1.MapValue} MapValue\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        MapValue.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a MapValue message.\n                         * @function verify\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        MapValue.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.fields != null && message.hasOwnProperty(\"fields\")) {\n                                if (!$util.isObject(message.fields))\n                                    return \"fields: object expected\";\n                                var key = Object.keys(message.fields);\n                                for (var i = 0; i < key.length; ++i) {\n                                    var error = $root.google.events.cloud.firestore.v1.Value.verify(message.fields[key[i]]);\n                                    if (error)\n                                        return \"fields.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a MapValue message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.events.cloud.firestore.v1.MapValue} MapValue\n                         */\n                        MapValue.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.events.cloud.firestore.v1.MapValue)\n                                return object;\n                            var message = new $root.google.events.cloud.firestore.v1.MapValue();\n                            if (object.fields) {\n                                if (typeof object.fields !== \"object\")\n                                    throw TypeError(\".google.events.cloud.firestore.v1.MapValue.fields: object expected\");\n                                message.fields = {};\n                                for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n                                    if (typeof object.fields[keys[i]] !== \"object\")\n                                        throw TypeError(\".google.events.cloud.firestore.v1.MapValue.fields: object expected\");\n                                    message.fields[keys[i]] = $root.google.events.cloud.firestore.v1.Value.fromObject(object.fields[keys[i]]);\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a MapValue message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {google.events.cloud.firestore.v1.MapValue} message MapValue\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        MapValue.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.objects || options.defaults)\n                                object.fields = {};\n                            var keys2;\n                            if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n                                object.fields = {};\n                                for (var j = 0; j < keys2.length; ++j)\n                                    object.fields[keys2[j]] = $root.google.events.cloud.firestore.v1.Value.toObject(message.fields[keys2[j]], options);\n                            }\n                            return object;\n                        };\n\n                        /**\n                         * Converts this MapValue to JSON.\n                         * @function toJSON\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        MapValue.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        /**\n                         * Gets the default type url for MapValue\n                         * @function getTypeUrl\n                         * @memberof google.events.cloud.firestore.v1.MapValue\n                         * @static\n                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                         * @returns {string} The default type url\n                         */\n                        MapValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                            if (typeUrlPrefix === undefined) {\n                                typeUrlPrefix = \"type.googleapis.com\";\n                            }\n                            return typeUrlPrefix + \"/google.events.cloud.firestore.v1.MapValue\";\n                        };\n\n                        return MapValue;\n                    })();\n\n                    return v1;\n                })();\n\n                return firestore;\n            })();\n\n            return cloud;\n        })();\n\n        return events;\n    })();\n\n    google.type = (function() {\n\n        /**\n         * Namespace type.\n         * @memberof google\n         * @namespace\n         */\n        var type = {};\n\n        type.LatLng = (function() {\n\n            /**\n             * Properties of a LatLng.\n             * @memberof google.type\n             * @interface ILatLng\n             * @property {number|null} [latitude] LatLng latitude\n             * @property {number|null} [longitude] LatLng longitude\n             */\n\n            /**\n             * Constructs a new LatLng.\n             * @memberof google.type\n             * @classdesc Represents a LatLng.\n             * @implements ILatLng\n             * @constructor\n             * @param {google.type.ILatLng=} [properties] Properties to set\n             */\n            function LatLng(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * LatLng latitude.\n             * @member {number} latitude\n             * @memberof google.type.LatLng\n             * @instance\n             */\n            LatLng.prototype.latitude = 0;\n\n            /**\n             * LatLng longitude.\n             * @member {number} longitude\n             * @memberof google.type.LatLng\n             * @instance\n             */\n            LatLng.prototype.longitude = 0;\n\n            /**\n             * Creates a new LatLng instance using the specified properties.\n             * @function create\n             * @memberof google.type.LatLng\n             * @static\n             * @param {google.type.ILatLng=} [properties] Properties to set\n             * @returns {google.type.LatLng} LatLng instance\n             */\n            LatLng.create = function create(properties) {\n                return new LatLng(properties);\n            };\n\n            /**\n             * Encodes the specified LatLng message. Does not implicitly {@link google.type.LatLng.verify|verify} messages.\n             * @function encode\n             * @memberof google.type.LatLng\n             * @static\n             * @param {google.type.ILatLng} message LatLng message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            LatLng.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.latitude != null && Object.hasOwnProperty.call(message, \"latitude\"))\n                    writer.uint32(/* id 1, wireType 1 =*/9).double(message.latitude);\n                if (message.longitude != null && Object.hasOwnProperty.call(message, \"longitude\"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.longitude);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified LatLng message, length delimited. Does not implicitly {@link google.type.LatLng.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.type.LatLng\n             * @static\n             * @param {google.type.ILatLng} message LatLng message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            LatLng.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a LatLng message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.type.LatLng\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.type.LatLng} LatLng\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            LatLng.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.LatLng();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.latitude = reader.double();\n                            break;\n                        }\n                    case 2: {\n                            message.longitude = reader.double();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a LatLng message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.type.LatLng\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.type.LatLng} LatLng\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            LatLng.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a LatLng message.\n             * @function verify\n             * @memberof google.type.LatLng\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            LatLng.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.latitude != null && message.hasOwnProperty(\"latitude\"))\n                    if (typeof message.latitude !== \"number\")\n                        return \"latitude: number expected\";\n                if (message.longitude != null && message.hasOwnProperty(\"longitude\"))\n                    if (typeof message.longitude !== \"number\")\n                        return \"longitude: number expected\";\n                return null;\n            };\n\n            /**\n             * Creates a LatLng message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.type.LatLng\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.type.LatLng} LatLng\n             */\n            LatLng.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.type.LatLng)\n                    return object;\n                var message = new $root.google.type.LatLng();\n                if (object.latitude != null)\n                    message.latitude = Number(object.latitude);\n                if (object.longitude != null)\n                    message.longitude = Number(object.longitude);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a LatLng message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.type.LatLng\n             * @static\n             * @param {google.type.LatLng} message LatLng\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            LatLng.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.latitude = 0;\n                    object.longitude = 0;\n                }\n                if (message.latitude != null && message.hasOwnProperty(\"latitude\"))\n                    object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;\n                if (message.longitude != null && message.hasOwnProperty(\"longitude\"))\n                    object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;\n                return object;\n            };\n\n            /**\n             * Converts this LatLng to JSON.\n             * @function toJSON\n             * @memberof google.type.LatLng\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            LatLng.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for LatLng\n             * @function getTypeUrl\n             * @memberof google.type.LatLng\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            LatLng.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/google.type.LatLng\";\n            };\n\n            return LatLng;\n        })();\n\n        return type;\n    })();\n\n    return google;\n})();\n\nmodule.exports = $root;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6847, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/utilities/encoder.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dateToTimestampProto = void 0;\nfunction dateToTimestampProto(timeString) {\n    if (typeof timeString === \"undefined\") {\n        return;\n    }\n    const date = new Date(timeString);\n    const seconds = Math.floor(date.getTime() / 1000);\n    let nanos = 0;\n    if (timeString.length > 20) {\n        const nanoString = timeString.substring(20, timeString.length - 1);\n        const trailingZeroes = 9 - nanoString.length;\n        nanos = parseInt(nanoString, 10) * Math.pow(10, trailingZeroes);\n    }\n    return { seconds, nanos };\n}\nexports.dateToTimestampProto = dateToTimestampProto;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,SAAS,qBAAqB,UAAU;IACpC,IAAI,OAAO,eAAe,aAAa;QACnC;IACJ;IACA,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,OAAO,KAAK;IAC5C,IAAI,QAAQ;IACZ,IAAI,WAAW,MAAM,GAAG,IAAI;QACxB,MAAM,aAAa,WAAW,SAAS,CAAC,IAAI,WAAW,MAAM,GAAG;QAChE,MAAM,iBAAiB,IAAI,WAAW,MAAM;QAC5C,QAAQ,SAAS,YAAY,MAAM,KAAK,GAAG,CAAC,IAAI;IACpD;IACA,OAAO;QAAE;QAAS;IAAM;AAC5B;AACA,QAAQ,oBAAoB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6896, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/providers/firestore.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2023 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBeforeSnapshotFromJson = exports.createSnapshotFromJson = exports.createBeforeSnapshotFromProtobuf = exports.createSnapshotFromProtobuf = void 0;\nconst firestore = require(\"firebase-admin/firestore\");\nconst logger = require(\"../../logger\");\nconst app_1 = require(\"../../common/app\");\nconst compiledFirestore_1 = require(\"../../../protos/compiledFirestore\");\nconst encoder_1 = require(\"../../common/utilities/encoder\");\n/** static-complied protobufs */\nconst DocumentEventData = compiledFirestore_1.google.events.cloud.firestore.v1.DocumentEventData;\nlet firestoreInstance;\n/** @hidden */\nfunction _getValueProto(data, resource, valueFieldName) {\n    const value = data === null || data === void 0 ? void 0 : data[valueFieldName];\n    if (typeof value === \"undefined\" ||\n        value === null ||\n        (typeof value === \"object\" && !Object.keys(value).length)) {\n        // Firestore#snapshot_ takes resource string instead of proto for a non-existent snapshot\n        return resource;\n    }\n    const proto = {\n        fields: (value === null || value === void 0 ? void 0 : value.fields) || {},\n        createTime: (0, encoder_1.dateToTimestampProto)(value === null || value === void 0 ? void 0 : value.createTime),\n        updateTime: (0, encoder_1.dateToTimestampProto)(value === null || value === void 0 ? void 0 : value.updateTime),\n        name: (value === null || value === void 0 ? void 0 : value.name) || resource,\n    };\n    return proto;\n}\n/** @internal */\nfunction createSnapshotFromProtobuf(data, path, databaseId) {\n    if (!firestoreInstance) {\n        firestoreInstance = firestore.getFirestore((0, app_1.getApp)(), databaseId);\n    }\n    try {\n        const dataBuffer = Buffer.from(data);\n        const firestoreDecoded = DocumentEventData.decode(dataBuffer);\n        return firestoreInstance.snapshot_(firestoreDecoded.value || path, null, \"protobufJS\");\n    }\n    catch (err) {\n        logger.error(\"Failed to decode protobuf and create a snapshot.\");\n        throw err;\n    }\n}\nexports.createSnapshotFromProtobuf = createSnapshotFromProtobuf;\n/** @internal */\nfunction createBeforeSnapshotFromProtobuf(data, path, databaseId) {\n    if (!firestoreInstance) {\n        firestoreInstance = firestore.getFirestore((0, app_1.getApp)(), databaseId);\n    }\n    try {\n        const dataBuffer = Buffer.from(data);\n        const firestoreDecoded = DocumentEventData.decode(dataBuffer);\n        return firestoreInstance.snapshot_(firestoreDecoded.oldValue || path, null, \"protobufJS\");\n    }\n    catch (err) {\n        logger.error(\"Failed to decode protobuf and create a before snapshot.\");\n        throw err;\n    }\n}\nexports.createBeforeSnapshotFromProtobuf = createBeforeSnapshotFromProtobuf;\n/** @internal */\nfunction createSnapshotFromJson(data, source, createTime, updateTime, databaseId) {\n    if (!firestoreInstance) {\n        firestoreInstance = databaseId\n            ? firestore.getFirestore((0, app_1.getApp)(), databaseId)\n            : firestore.getFirestore((0, app_1.getApp)());\n    }\n    const valueProto = _getValueProto(data, source, \"value\");\n    let timeString = createTime || updateTime;\n    if (!timeString) {\n        logger.warn(\"Snapshot has no readTime. Using now()\");\n        timeString = new Date().toISOString();\n    }\n    const readTime = (0, encoder_1.dateToTimestampProto)(timeString);\n    return firestoreInstance.snapshot_(valueProto, readTime, \"json\");\n}\nexports.createSnapshotFromJson = createSnapshotFromJson;\n/** @internal */\nfunction createBeforeSnapshotFromJson(data, source, createTime, updateTime, databaseId) {\n    if (!firestoreInstance) {\n        firestoreInstance = databaseId\n            ? firestore.getFirestore((0, app_1.getApp)(), databaseId)\n            : firestore.getFirestore((0, app_1.getApp)());\n    }\n    const oldValueProto = _getValueProto(data, source, \"oldValue\");\n    const oldReadTime = (0, encoder_1.dateToTimestampProto)(createTime || updateTime);\n    return firestoreInstance.snapshot_(oldValueProto, oldReadTime, \"json\");\n}\nexports.createBeforeSnapshotFromJson = createBeforeSnapshotFromJson;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6999, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/firestore.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentBuilder = exports.beforeSnapshotConstructor = exports.snapshotConstructor = exports.NamespaceBuilder = exports.DatabaseBuilder = exports._documentWithOptions = exports._namespaceWithOptions = exports._databaseWithOptions = exports.database = exports.namespace = exports.document = exports.defaultDatabase = exports.service = exports.provider = void 0;\nconst path_1 = require(\"path\");\nconst change_1 = require(\"../../common/change\");\nconst firestore_1 = require(\"../../common/providers/firestore\");\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.firestore\";\n/** @internal */\nexports.service = \"firestore.googleapis.com\";\n/** @internal */\nexports.defaultDatabase = \"(default)\";\n/**\n * Select the Firestore document to listen to for events.\n * @param path Full database path to listen to. This includes the name of\n * the collection that the document is a part of. For example, if the\n * collection is named \"users\" and the document is named \"Ada\", then the\n * path is \"/users/Ada\".\n */\nfunction document(path) {\n    return _documentWithOptions(path, {});\n}\nexports.document = document;\n// Multiple namespaces are not yet supported by Firestore.\nfunction namespace(namespace) {\n    return _namespaceWithOptions(namespace, {});\n}\nexports.namespace = namespace;\n// Multiple databases are not yet supported by Firestore.\nfunction database(database) {\n    return _databaseWithOptions(database, {});\n}\nexports.database = database;\n/** @internal */\nfunction _databaseWithOptions(database = exports.defaultDatabase, options) {\n    return new DatabaseBuilder(database, options);\n}\nexports._databaseWithOptions = _databaseWithOptions;\n/** @internal */\nfunction _namespaceWithOptions(namespace, options) {\n    return _databaseWithOptions(exports.defaultDatabase, options).namespace(namespace);\n}\nexports._namespaceWithOptions = _namespaceWithOptions;\n/** @internal */\nfunction _documentWithOptions(path, options) {\n    return _databaseWithOptions(exports.defaultDatabase, options).document(path);\n}\nexports._documentWithOptions = _documentWithOptions;\nclass DatabaseBuilder {\n    constructor(database, options) {\n        this.database = database;\n        this.options = options;\n    }\n    namespace(namespace) {\n        return new NamespaceBuilder(this.database, this.options, namespace);\n    }\n    document(path) {\n        return new NamespaceBuilder(this.database, this.options).document(path);\n    }\n}\nexports.DatabaseBuilder = DatabaseBuilder;\nclass NamespaceBuilder {\n    constructor(database, options, namespace) {\n        this.database = database;\n        this.options = options;\n        this.namespace = namespace;\n    }\n    document(path) {\n        return new DocumentBuilder(() => {\n            if (!process.env.GCLOUD_PROJECT) {\n                throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n            }\n            const database = path_1.posix.join(\"projects\", process.env.GCLOUD_PROJECT, \"databases\", this.database);\n            return path_1.posix.join(database, this.namespace ? `documents@${this.namespace}` : \"documents\", path);\n        }, this.options);\n    }\n}\nexports.NamespaceBuilder = NamespaceBuilder;\nfunction snapshotConstructor(event) {\n    var _a, _b, _c, _d;\n    return (0, firestore_1.createSnapshotFromJson)(event.data, event.context.resource.name, (_b = (_a = event === null || event === void 0 ? void 0 : event.data) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.readTime, (_d = (_c = event === null || event === void 0 ? void 0 : event.data) === null || _c === void 0 ? void 0 : _c.value) === null || _d === void 0 ? void 0 : _d.updateTime);\n}\nexports.snapshotConstructor = snapshotConstructor;\n// TODO remove this function when wire format changes to new format\nfunction beforeSnapshotConstructor(event) {\n    var _a, _b;\n    return (0, firestore_1.createBeforeSnapshotFromJson)(event.data, event.context.resource.name, (_b = (_a = event === null || event === void 0 ? void 0 : event.data) === null || _a === void 0 ? void 0 : _a.oldValue) === null || _b === void 0 ? void 0 : _b.readTime, undefined);\n}\nexports.beforeSnapshotConstructor = beforeSnapshotConstructor;\nfunction changeConstructor(raw) {\n    return change_1.Change.fromObjects(beforeSnapshotConstructor(raw), snapshotConstructor(raw));\n}\nclass DocumentBuilder {\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n        // TODO what validation do we want to do here?\n    }\n    /** Respond to all document writes (creates, updates, or deletes). */\n    onWrite(handler) {\n        return this.onOperation(handler, \"document.write\", changeConstructor);\n    }\n    /** Respond only to document updates. */\n    onUpdate(handler) {\n        return this.onOperation(handler, \"document.update\", changeConstructor);\n    }\n    /** Respond only to document creations. */\n    onCreate(handler) {\n        return this.onOperation(handler, \"document.create\", snapshotConstructor);\n    }\n    /** Respond only to document deletions. */\n    onDelete(handler) {\n        return this.onOperation(handler, \"document.delete\", beforeSnapshotConstructor);\n    }\n    onOperation(handler, eventType, dataConstructor) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            eventType,\n            service: exports.service,\n            triggerResource: this.triggerResource,\n            legacyEventType: `providers/cloud.firestore/eventTypes/${eventType}`,\n            dataConstructor,\n            options: this.options,\n        });\n    }\n}\nexports.DocumentBuilder = DocumentBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v2/trace.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapTraceContext = void 0;\nconst trace_1 = require(\"../common/trace\");\nfunction wrapTraceContext(handler) {\n    return (...args) => {\n        let traceParent;\n        if (args.length === 1) {\n            traceParent = (0, trace_1.extractTraceContext)(args[0]);\n        }\n        else {\n            traceParent = (0, trace_1.extractTraceContext)(args[0].headers);\n        }\n        if (!traceParent) {\n            // eslint-disable-next-line prefer-spread\n            return handler.apply(null, args);\n        }\n        return trace_1.traceContext.run(traceParent, handler, ...args);\n    };\n}\nexports.wrapTraceContext = wrapTraceContext;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,gBAAgB,GAAG,KAAK;AAChC,MAAM;AACN,SAAS,iBAAiB,OAAO;IAC7B,OAAO,CAAC,GAAG;QACP,IAAI;QACJ,IAAI,KAAK,MAAM,KAAK,GAAG;YACnB,cAAc,CAAC,GAAG,QAAQ,mBAAmB,EAAE,IAAI,CAAC,EAAE;QAC1D,OACK;YACD,cAAc,CAAC,GAAG,QAAQ,mBAAmB,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO;QAClE;QACA,IAAI,CAAC,aAAa;YACd,yCAAyC;YACzC,OAAO,QAAQ,KAAK,CAAC,MAAM;QAC/B;QACA,OAAO,QAAQ,YAAY,CAAC,GAAG,CAAC,aAAa,YAAY;IAC7D;AACJ;AACA,QAAQ,gBAAgB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/https.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._onCallWithOptions = exports._onRequestWithOptions = exports.onCall = exports.onRequest = exports.HttpsError = void 0;\nconst encoding_1 = require(\"../../common/encoding\");\nconst https_1 = require(\"../../common/providers/https\");\nObject.defineProperty(exports, \"HttpsError\", { enumerable: true, get: function () { return https_1.HttpsError; } });\nconst cloud_functions_1 = require(\"../cloud-functions\");\nconst manifest_1 = require(\"../../runtime/manifest\");\nconst onInit_1 = require(\"../../common/onInit\");\nconst trace_1 = require(\"../../v2/trace\");\n/**\n * Handle HTTP requests.\n * @param handler A function that takes a request and response object,\n * same signature as an Express app.\n */\nfunction onRequest(handler) {\n    return _onRequestWithOptions(handler, {});\n}\nexports.onRequest = onRequest;\n/**\n * Declares a callable method for clients to call using a Firebase SDK.\n * @param handler A method that takes a data and context and returns a value.\n */\nfunction onCall(handler) {\n    return _onCallWithOptions(handler, {});\n}\nexports.onCall = onCall;\n/** @internal */\nfunction _onRequestWithOptions(handler, options) {\n    // lets us add __endpoint without altering handler:\n    const cloudFunction = (req, res) => {\n        return (0, trace_1.wrapTraceContext)((0, onInit_1.withInit)(handler))(req, res);\n    };\n    cloudFunction.__trigger = {\n        ...(0, cloud_functions_1.optionsToTrigger)(options),\n        httpsTrigger: {},\n    };\n    (0, encoding_1.convertIfPresent)(cloudFunction.__trigger.httpsTrigger, options, \"invoker\", \"invoker\", encoding_1.convertInvoker);\n    // TODO parse the options\n    cloudFunction.__endpoint = {\n        platform: \"gcfv1\",\n        ...(0, manifest_1.initV1Endpoint)(options),\n        ...(0, cloud_functions_1.optionsToEndpoint)(options),\n        httpsTrigger: {},\n    };\n    (0, encoding_1.convertIfPresent)(cloudFunction.__endpoint.httpsTrigger, options, \"invoker\", \"invoker\", encoding_1.convertInvoker);\n    return cloudFunction;\n}\nexports._onRequestWithOptions = _onRequestWithOptions;\n/** @internal */\nfunction _onCallWithOptions(handler, options) {\n    // fix the length of handler to make the call to handler consistent\n    // in the onCallHandler\n    const fixedLen = (data, context) => {\n        return (0, onInit_1.withInit)(handler)(data, context);\n    };\n    const func = (0, trace_1.wrapTraceContext)((0, https_1.onCallHandler)({\n        enforceAppCheck: options.enforceAppCheck,\n        consumeAppCheckToken: options.consumeAppCheckToken,\n        cors: { origin: true, methods: \"POST\" },\n    }, fixedLen, \"gcfv1\"));\n    func.__trigger = {\n        labels: {},\n        ...(0, cloud_functions_1.optionsToTrigger)(options),\n        httpsTrigger: {},\n    };\n    func.__trigger.labels[\"deployment-callable\"] = \"true\";\n    func.__endpoint = {\n        platform: \"gcfv1\",\n        labels: {},\n        ...(0, manifest_1.initV1Endpoint)(options),\n        ...(0, cloud_functions_1.optionsToEndpoint)(options),\n        callableTrigger: {},\n    };\n    func.run = fixedLen;\n    return func;\n}\nexports._onCallWithOptions = _onCallWithOptions;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,kBAAkB,GAAG,QAAQ,qBAAqB,GAAG,QAAQ,MAAM,GAAG,QAAQ,SAAS,GAAG,QAAQ,UAAU,GAAG,KAAK;AAC5H,MAAM;AACN,MAAM;AACN,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,QAAQ,UAAU;IAAE;AAAE;AACjH,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;;CAIC,GACD,SAAS,UAAU,OAAO;IACtB,OAAO,sBAAsB,SAAS,CAAC;AAC3C;AACA,QAAQ,SAAS,GAAG;AACpB;;;CAGC,GACD,SAAS,OAAO,OAAO;IACnB,OAAO,mBAAmB,SAAS,CAAC;AACxC;AACA,QAAQ,MAAM,GAAG;AACjB,cAAc,GACd,SAAS,sBAAsB,OAAO,EAAE,OAAO;IAC3C,mDAAmD;IACnD,MAAM,gBAAgB,CAAC,KAAK;QACxB,OAAO,CAAC,GAAG,QAAQ,gBAAgB,EAAE,CAAC,GAAG,SAAS,QAAQ,EAAE,UAAU,KAAK;IAC/E;IACA,cAAc,SAAS,GAAG;QACtB,GAAG,CAAC,GAAG,kBAAkB,gBAAgB,EAAE,QAAQ;QACnD,cAAc,CAAC;IACnB;IACA,CAAC,GAAG,WAAW,gBAAgB,EAAE,cAAc,SAAS,CAAC,YAAY,EAAE,SAAS,WAAW,WAAW,WAAW,cAAc;IAC/H,yBAAyB;IACzB,cAAc,UAAU,GAAG;QACvB,UAAU;QACV,GAAG,CAAC,GAAG,WAAW,cAAc,EAAE,QAAQ;QAC1C,GAAG,CAAC,GAAG,kBAAkB,iBAAiB,EAAE,QAAQ;QACpD,cAAc,CAAC;IACnB;IACA,CAAC,GAAG,WAAW,gBAAgB,EAAE,cAAc,UAAU,CAAC,YAAY,EAAE,SAAS,WAAW,WAAW,WAAW,cAAc;IAChI,OAAO;AACX;AACA,QAAQ,qBAAqB,GAAG;AAChC,cAAc,GACd,SAAS,mBAAmB,OAAO,EAAE,OAAO;IACxC,mEAAmE;IACnE,uBAAuB;IACvB,MAAM,WAAW,CAAC,MAAM;QACpB,OAAO,CAAC,GAAG,SAAS,QAAQ,EAAE,SAAS,MAAM;IACjD;IACA,MAAM,OAAO,CAAC,GAAG,QAAQ,gBAAgB,EAAE,CAAC,GAAG,QAAQ,aAAa,EAAE;QAClE,iBAAiB,QAAQ,eAAe;QACxC,sBAAsB,QAAQ,oBAAoB;QAClD,MAAM;YAAE,QAAQ;YAAM,SAAS;QAAO;IAC1C,GAAG,UAAU;IACb,KAAK,SAAS,GAAG;QACb,QAAQ,CAAC;QACT,GAAG,CAAC,GAAG,kBAAkB,gBAAgB,EAAE,QAAQ;QACnD,cAAc,CAAC;IACnB;IACA,KAAK,SAAS,CAAC,MAAM,CAAC,sBAAsB,GAAG;IAC/C,KAAK,UAAU,GAAG;QACd,UAAU;QACV,QAAQ,CAAC;QACT,GAAG,CAAC,GAAG,WAAW,cAAc,EAAE,QAAQ;QAC1C,GAAG,CAAC,GAAG,kBAAkB,iBAAiB,EAAE,QAAQ;QACpD,iBAAiB,CAAC;IACtB;IACA,KAAK,GAAG,GAAG;IACX,OAAO;AACX;AACA,QAAQ,kBAAkB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7282, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/pubsub.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.ScheduleBuilder = exports._scheduleWithOptions = exports.schedule = exports.TopicBuilder = exports._topicWithOptions = exports.topic = exports.service = exports.provider = void 0;\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.pubsub\";\n/** @internal */\nexports.service = \"pubsub.googleapis.com\";\n/**\n * Registers a Cloud Function triggered when a Google Cloud Pub/Sub message\n * is sent to a specified topic.\n *\n * @param topic - The Pub/Sub topic to watch for message events.\n * @returns Pub/Sub topic builder interface.\n */\nfunction topic(topic) {\n    return _topicWithOptions(topic, {});\n}\nexports.topic = topic;\n/** @internal */\nfunction _topicWithOptions(topic, options) {\n    if (topic.indexOf(\"/\") !== -1) {\n        throw new Error(\"Topic name may not have a /\");\n    }\n    return new TopicBuilder(() => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        return `projects/${process.env.GCLOUD_PROJECT}/topics/${topic}`;\n    }, options);\n}\nexports._topicWithOptions = _topicWithOptions;\n/**\n * The Google Cloud Pub/Sub topic builder.\n *\n * Access via `functions.pubsub.topic()`.\n */\nclass TopicBuilder {\n    /** @hidden */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /**\n     * Event handler that fires every time a Cloud Pub/Sub message is\n     * published.\n     *\n     * @param handler - Event handler that runs every time a Cloud Pub/Sub message\n     *   is published.\n     * @returns A function that you can export and deploy.\n     */\n    onPublish(handler) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            service: exports.service,\n            triggerResource: this.triggerResource,\n            eventType: \"topic.publish\",\n            dataConstructor: (raw) => new Message(raw.data),\n            options: this.options,\n        });\n    }\n}\nexports.TopicBuilder = TopicBuilder;\n/**\n * Registers a Cloud Function to run at specified times.\n *\n * @param schedule - The schedule, in Unix Crontab or AppEngine syntax.\n * @returns ScheduleBuilder interface.\n */\nfunction schedule(schedule) {\n    return _scheduleWithOptions(schedule, {});\n}\nexports.schedule = schedule;\n/** @internal */\nfunction _scheduleWithOptions(schedule, options) {\n    const triggerResource = () => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        // The CLI will append the correct topic name based on region and function name\n        return `projects/${process.env.GCLOUD_PROJECT}/topics`;\n    };\n    return new ScheduleBuilder(triggerResource, {\n        ...options,\n        schedule: { schedule },\n    });\n}\nexports._scheduleWithOptions = _scheduleWithOptions;\n/**\n * The builder for scheduled functions, which are powered by\n * Google Pub/Sub and Cloud Scheduler. Describes the Cloud Scheduler\n * job that is deployed to trigger a scheduled function at the provided\n * frequency. For more information, see\n * [Schedule functions](/docs/functions/schedule-functions).\n *\n * Access via `functions.pubsub.schedule()`.\n */\nclass ScheduleBuilder {\n    /** @hidden */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    retryConfig(config) {\n        this.options.schedule.retryConfig = config;\n        return this;\n    }\n    timeZone(timeZone) {\n        this.options.schedule.timeZone = timeZone;\n        return this;\n    }\n    /**\n     * Event handler for scheduled functions. Triggered whenever the associated\n     * scheduler job sends a Pub/Sub message.\n     *\n     * @param handler - Handler that fires whenever the associated\n     *   scheduler job sends a Pub/Sub message.\n     * @returns A function that you can export and deploy.\n     */\n    onRun(handler) {\n        const cloudFunction = (0, cloud_functions_1.makeCloudFunction)({\n            contextOnlyHandler: handler,\n            provider: exports.provider,\n            service: exports.service,\n            triggerResource: this.triggerResource,\n            eventType: \"topic.publish\",\n            options: this.options,\n            labels: { \"deployment-scheduled\": \"true\" },\n        });\n        return cloudFunction;\n    }\n}\nexports.ScheduleBuilder = ScheduleBuilder;\n/**\n * Interface representing a Google Cloud Pub/Sub message.\n *\n * @param data - Payload of a Pub/Sub message.\n */\nclass Message {\n    constructor(data) {\n        [this.data, this.attributes, this._json] = [data.data, data.attributes || {}, data.json];\n    }\n    /**\n     * The JSON data payload of this message object, if any.\n     */\n    get json() {\n        if (typeof this._json === \"undefined\") {\n            this._json = JSON.parse(Buffer.from(this.data, \"base64\").toString(\"utf8\"));\n        }\n        return this._json;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            data: this.data,\n            attributes: this.attributes,\n        };\n    }\n}\nexports.Message = Message;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7468, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/remoteConfig.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2018 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateBuilder = exports._onUpdateWithOptions = exports.onUpdate = exports.service = exports.provider = void 0;\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.firebase.remoteconfig\";\n/** @internal */\nexports.service = \"firebaseremoteconfig.googleapis.com\";\n/**\n * Registers a function that triggers on Firebase Remote Config template\n * update events.\n *\n * @param handler A function that takes the updated Remote Config\n *   template version metadata as an argument.\n *\n * @returns A function that you can export and deploy.\n */\nfunction onUpdate(handler) {\n    return _onUpdateWithOptions(handler, {});\n}\nexports.onUpdate = onUpdate;\n/** @internal */\nfunction _onUpdateWithOptions(handler, options) {\n    const triggerResource = () => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        return `projects/${process.env.GCLOUD_PROJECT}`;\n    };\n    return new UpdateBuilder(triggerResource, options).onUpdate(handler);\n}\nexports._onUpdateWithOptions = _onUpdateWithOptions;\n/** Builder used to create Cloud Functions for Remote Config. */\nclass UpdateBuilder {\n    /** @internal */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /**\n     * Handle all updates (including rollbacks) that affect a Remote Config\n     * project.\n     * @param handler A function that takes the updated Remote Config template\n     * version metadata as an argument.\n     */\n    onUpdate(handler) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            service: exports.service,\n            triggerResource: this.triggerResource,\n            eventType: \"update\",\n            options: this.options,\n        });\n    }\n}\nexports.UpdateBuilder = UpdateBuilder;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,6EAA6E;AAC7E,sDAAsD;AACtD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,aAAa,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,QAAQ,GAAG,QAAQ,OAAO,GAAG,QAAQ,QAAQ,GAAG,KAAK;AACpH,MAAM;AACN,cAAc,GACd,QAAQ,QAAQ,GAAG;AACnB,cAAc,GACd,QAAQ,OAAO,GAAG;AAClB;;;;;;;;CAQC,GACD,SAAS,SAAS,OAAO;IACrB,OAAO,qBAAqB,SAAS,CAAC;AAC1C;AACA,QAAQ,QAAQ,GAAG;AACnB,cAAc,GACd,SAAS,qBAAqB,OAAO,EAAE,OAAO;IAC1C,MAAM,kBAAkB;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC7B,MAAM,IAAI,MAAM;QACpB;QACA,OAAO,CAAC,SAAS,EAAE,QAAQ,GAAG,CAAC,cAAc,EAAE;IACnD;IACA,OAAO,IAAI,cAAc,iBAAiB,SAAS,QAAQ,CAAC;AAChE;AACA,QAAQ,oBAAoB,GAAG;AAC/B,8DAA8D,GAC9D,MAAM;IACF,cAAc,GACd,YAAY,eAAe,EAAE,OAAO,CAAE;QAClC,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,OAAO,GAAG;IACnB;IACA;;;;;KAKC,GACD,SAAS,OAAO,EAAE;QACd,OAAO,CAAC,GAAG,kBAAkB,iBAAiB,EAAE;YAC5C;YACA,UAAU,QAAQ,QAAQ;YAC1B,SAAS,QAAQ,OAAO;YACxB,iBAAiB,IAAI,CAAC,eAAe;YACrC,WAAW;YACX,SAAS,IAAI,CAAC,OAAO;QACzB;IACJ;AACJ;AACA,QAAQ,aAAa,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7546, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/storage.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectBuilder = exports.BucketBuilder = exports._objectWithOptions = exports._bucketWithOptions = exports.object = exports.bucket = exports.service = exports.provider = void 0;\nconst config_1 = require(\"../../common/config\");\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.provider = \"google.storage\";\n/** @internal */\nexports.service = \"storage.googleapis.com\";\n/**\n * Registers a Cloud Function scoped to a specific storage bucket.\n *\n * @param bucket Name of the bucket to which this Cloud Function is\n *   scoped.\n *\n * @returns Storage bucket builder interface.\n */\nfunction bucket(bucket) {\n    return _bucketWithOptions({}, bucket);\n}\nexports.bucket = bucket;\n/**\n * Registers a Cloud Function scoped to the default storage bucket for the\n * project.\n *\n * @returns Storage object builder interface.\n */\nfunction object() {\n    return _objectWithOptions({});\n}\nexports.object = object;\n/** @internal */\nfunction _bucketWithOptions(options, bucket) {\n    const resourceGetter = () => {\n        bucket = bucket || (0, config_1.firebaseConfig)().storageBucket;\n        if (!bucket) {\n            throw new Error(\"Missing bucket name. If you are unit testing, please provide a bucket name\" +\n                \" through `functions.storage.bucket(bucketName)`, or set process.env.FIREBASE_CONFIG.\");\n        }\n        if (!/^[a-z\\d][a-z\\d\\\\._-]{1,230}[a-z\\d]$/.test(bucket)) {\n            throw new Error(`Invalid bucket name ${bucket}`);\n        }\n        return `projects/_/buckets/${bucket}`;\n    };\n    return new BucketBuilder(resourceGetter, options);\n}\nexports._bucketWithOptions = _bucketWithOptions;\n/** @internal */\nfunction _objectWithOptions(options) {\n    return _bucketWithOptions(options).object();\n}\nexports._objectWithOptions = _objectWithOptions;\n/**\n * The Google Cloud Storage bucket builder interface.\n *\n * Access via `functions.storage.bucket()`.\n */\nclass BucketBuilder {\n    /** @internal */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /**\n     * Event handler which fires every time a Google Cloud Storage change occurs.\n     *\n     * @returns Storage object builder interface scoped to the specified storage\n     *   bucket.\n     */\n    object() {\n        return new ObjectBuilder(this.triggerResource, this.options);\n    }\n}\nexports.BucketBuilder = BucketBuilder;\n/**\n * The Google Cloud Storage object builder interface.\n *\n * Access via `functions.storage.object()`.\n */\nclass ObjectBuilder {\n    /** @internal */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /**\n     * Event handler sent only when a bucket has enabled object versioning.\n     * This event indicates that the live version of an object has become an\n     * archived version, either because it was archived or because it was\n     * overwritten by the upload of an object of the same name.\n     *\n     * @param handler Event handler which is run every time a Google Cloud Storage\n     *   archival occurs.\n     *\n     * @returns A function which you can export and deploy.\n     */\n    onArchive(handler) {\n        return this.onOperation(handler, \"object.archive\");\n    }\n    /**\n     * Event handler which fires every time a Google Cloud Storage deletion occurs.\n     *\n     * Sent when an object has been permanently deleted. This includes objects\n     * that are overwritten or are deleted as part of the bucket's lifecycle\n     * configuration. For buckets with object versioning enabled, this is not\n     * sent when an object is archived, even if archival occurs\n     * via the `storage.objects.delete` method.\n     *\n     * @param handler Event handler which is run every time a Google Cloud Storage\n     *   deletion occurs.\n     *\n     * @returns A function which you can export and deploy.\n     */\n    onDelete(handler) {\n        return this.onOperation(handler, \"object.delete\");\n    }\n    /**\n     * Event handler which fires every time a Google Cloud Storage object\n     * creation occurs.\n     *\n     * Sent when a new object (or a new generation of an existing object)\n     * is successfully created in the bucket. This includes copying or rewriting\n     * an existing object. A failed upload does not trigger this event.\n     *\n     * @param handler Event handler which is run every time a Google Cloud Storage\n     *   object creation occurs.\n     *\n     * @returns A function which you can export and deploy.\n     */\n    onFinalize(handler) {\n        return this.onOperation(handler, \"object.finalize\");\n    }\n    /**\n     * Event handler which fires every time the metadata of an existing object\n     * changes.\n     *\n     * @param handler Event handler which is run every time a Google Cloud Storage\n     *   metadata update occurs.\n     *\n     * @returns A function which you can export and deploy.\n     */\n    onMetadataUpdate(handler) {\n        return this.onOperation(handler, \"object.metadataUpdate\");\n    }\n    /** @hidden */\n    onOperation(handler, eventType) {\n        return (0, cloud_functions_1.makeCloudFunction)({\n            handler,\n            provider: exports.provider,\n            service: exports.service,\n            eventType,\n            triggerResource: this.triggerResource,\n            options: this.options,\n        });\n    }\n}\nexports.ObjectBuilder = ObjectBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7714, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/common/providers/tasks.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDispatchHandler = void 0;\nconst logger = require(\"../../logger\");\nconst https = require(\"./https\");\n/** @internal */\nfunction onDispatchHandler(handler) {\n    return async (req, res) => {\n        var _a;\n        try {\n            if (!https.isValidRequest(req)) {\n                logger.error(\"Invalid request, unable to process.\");\n                throw new https.HttpsError(\"invalid-argument\", \"Bad Request\");\n            }\n            const headers = {};\n            for (const [key, value] of Object.entries(req.headers)) {\n                if (!Array.isArray(value)) {\n                    headers[key] = value;\n                }\n            }\n            const context = {\n                queueName: req.header(\"X-CloudTasks-QueueName\"),\n                id: req.header(\"X-CloudTasks-TaskName\"),\n                retryCount: req.header(\"X-CloudTasks-TaskRetryCount\")\n                    ? Number(req.header(\"X-CloudTasks-TaskRetryCount\"))\n                    : undefined,\n                executionCount: req.header(\"X-CloudTasks-TaskExecutionCount\")\n                    ? Number(req.header(\"X-CloudTasks-TaskExecutionCount\"))\n                    : undefined,\n                scheduledTime: req.header(\"X-CloudTasks-TaskETA\"),\n                previousResponse: req.header(\"X-CloudTasks-TaskPreviousResponse\")\n                    ? Number(req.header(\"X-CloudTasks-TaskPreviousResponse\"))\n                    : undefined,\n                retryReason: req.header(\"X-CloudTasks-TaskRetryReason\"),\n                headers,\n            };\n            if (!process.env.FUNCTIONS_EMULATOR) {\n                const authHeader = req.header(\"Authorization\") || \"\";\n                const token = (_a = authHeader.match(/^Bearer (.*)$/)) === null || _a === void 0 ? void 0 : _a[1];\n                // Note: this should never happen since task queue functions are guarded by IAM.\n                if (!token) {\n                    throw new https.HttpsError(\"unauthenticated\", \"Unauthenticated\");\n                }\n                // We skip authenticating the token since tq functions are guarded by IAM.\n                const authToken = https.unsafeDecodeIdToken(token);\n                context.auth = {\n                    uid: authToken.uid,\n                    token: authToken,\n                };\n            }\n            const data = https.decode(req.body.data);\n            if (handler.length === 2) {\n                await handler(data, context);\n            }\n            else {\n                const arg = {\n                    ...context,\n                    data,\n                };\n                // For some reason the type system isn't picking up that the handler\n                // is a one argument function.\n                await handler(arg);\n            }\n            res.status(204).end();\n        }\n        catch (err) {\n            let httpErr = err;\n            if (!(err instanceof https.HttpsError)) {\n                // This doesn't count as an 'explicit' error.\n                logger.error(\"Unhandled error\", err);\n                httpErr = new https.HttpsError(\"internal\", \"INTERNAL\");\n            }\n            const { status } = httpErr.httpErrorCode;\n            const body = { error: httpErr.toJSON() };\n            res.status(status).send(body);\n        }\n    };\n}\nexports.onDispatchHandler = onDispatchHandler;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,iBAAiB,GAAG,KAAK;AACjC,MAAM;AACN,MAAM;AACN,cAAc,GACd,SAAS,kBAAkB,OAAO;IAC9B,OAAO,OAAO,KAAK;QACf,IAAI;QACJ,IAAI;YACA,IAAI,CAAC,MAAM,cAAc,CAAC,MAAM;gBAC5B,OAAO,KAAK,CAAC;gBACb,MAAM,IAAI,MAAM,UAAU,CAAC,oBAAoB;YACnD;YACA,MAAM,UAAU,CAAC;YACjB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,IAAI,OAAO,EAAG;gBACpD,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;oBACvB,OAAO,CAAC,IAAI,GAAG;gBACnB;YACJ;YACA,MAAM,UAAU;gBACZ,WAAW,IAAI,MAAM,CAAC;gBACtB,IAAI,IAAI,MAAM,CAAC;gBACf,YAAY,IAAI,MAAM,CAAC,iCACjB,OAAO,IAAI,MAAM,CAAC,kCAClB;gBACN,gBAAgB,IAAI,MAAM,CAAC,qCACrB,OAAO,IAAI,MAAM,CAAC,sCAClB;gBACN,eAAe,IAAI,MAAM,CAAC;gBAC1B,kBAAkB,IAAI,MAAM,CAAC,uCACvB,OAAO,IAAI,MAAM,CAAC,wCAClB;gBACN,aAAa,IAAI,MAAM,CAAC;gBACxB;YACJ;YACA,IAAI,CAAC,QAAQ,GAAG,CAAC,kBAAkB,EAAE;gBACjC,MAAM,aAAa,IAAI,MAAM,CAAC,oBAAoB;gBAClD,MAAM,QAAQ,CAAC,KAAK,WAAW,KAAK,CAAC,gBAAgB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,EAAE,CAAC,EAAE;gBACjG,gFAAgF;gBAChF,IAAI,CAAC,OAAO;oBACR,MAAM,IAAI,MAAM,UAAU,CAAC,mBAAmB;gBAClD;gBACA,0EAA0E;gBAC1E,MAAM,YAAY,MAAM,mBAAmB,CAAC;gBAC5C,QAAQ,IAAI,GAAG;oBACX,KAAK,UAAU,GAAG;oBAClB,OAAO;gBACX;YACJ;YACA,MAAM,OAAO,MAAM,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI;YACvC,IAAI,QAAQ,MAAM,KAAK,GAAG;gBACtB,MAAM,QAAQ,MAAM;YACxB,OACK;gBACD,MAAM,MAAM;oBACR,GAAG,OAAO;oBACV;gBACJ;gBACA,oEAAoE;gBACpE,8BAA8B;gBAC9B,MAAM,QAAQ;YAClB;YACA,IAAI,MAAM,CAAC,KAAK,GAAG;QACvB,EACA,OAAO,KAAK;YACR,IAAI,UAAU;YACd,IAAI,CAAC,CAAC,eAAe,MAAM,UAAU,GAAG;gBACpC,6CAA6C;gBAC7C,OAAO,KAAK,CAAC,mBAAmB;gBAChC,UAAU,IAAI,MAAM,UAAU,CAAC,YAAY;YAC/C;YACA,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,aAAa;YACxC,MAAM,OAAO;gBAAE,OAAO,QAAQ,MAAM;YAAG;YACvC,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC;QAC5B;IACJ;AACJ;AACA,QAAQ,iBAAiB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7814, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/tasks.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.taskQueue = exports.TaskQueueBuilder = void 0;\nconst encoding_1 = require(\"../../common/encoding\");\nconst tasks_1 = require(\"../../common/providers/tasks\");\nconst manifest_1 = require(\"../../runtime/manifest\");\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/**\n * Builder for creating a `TaskQueueFunction`.\n */\nclass TaskQueueBuilder {\n    /** @internal */\n    constructor(tqOpts, depOpts) {\n        this.tqOpts = tqOpts;\n        this.depOpts = depOpts;\n    }\n    /**\n     * Creates a handler for tasks sent to a Google Cloud Tasks queue.\n     * @param handler - A callback to handle task requests.\n     * @returns A function you can export and deploy.\n     */\n    onDispatch(handler) {\n        var _a, _b;\n        // onEnqueueHandler sniffs the function length of the passed-in callback\n        // and the user could have only tried to listen to data. Wrap their handler\n        // in another handler to avoid accidentally triggering the v2 API\n        const fixedLen = (data, context) => handler(data, context);\n        const func = (0, tasks_1.onDispatchHandler)(fixedLen);\n        func.__trigger = {\n            ...(0, cloud_functions_1.optionsToTrigger)(this.depOpts || {}),\n            taskQueueTrigger: {},\n        };\n        (0, encoding_1.copyIfPresent)(func.__trigger.taskQueueTrigger, this.tqOpts, \"retryConfig\");\n        (0, encoding_1.copyIfPresent)(func.__trigger.taskQueueTrigger, this.tqOpts, \"rateLimits\");\n        (0, encoding_1.convertIfPresent)(func.__trigger.taskQueueTrigger, this.tqOpts, \"invoker\", \"invoker\", encoding_1.convertInvoker);\n        func.__endpoint = {\n            platform: \"gcfv1\",\n            ...(0, manifest_1.initV1Endpoint)(this.depOpts),\n            ...(0, cloud_functions_1.optionsToEndpoint)(this.depOpts),\n            taskQueueTrigger: (0, manifest_1.initTaskQueueTrigger)(this.depOpts),\n        };\n        (0, encoding_1.copyIfPresent)(func.__endpoint.taskQueueTrigger.retryConfig, ((_a = this.tqOpts) === null || _a === void 0 ? void 0 : _a.retryConfig) || {}, \"maxAttempts\", \"maxBackoffSeconds\", \"maxDoublings\", \"maxRetrySeconds\", \"minBackoffSeconds\");\n        (0, encoding_1.copyIfPresent)(func.__endpoint.taskQueueTrigger.rateLimits, ((_b = this.tqOpts) === null || _b === void 0 ? void 0 : _b.rateLimits) || {}, \"maxConcurrentDispatches\", \"maxDispatchesPerSecond\");\n        (0, encoding_1.convertIfPresent)(func.__endpoint.taskQueueTrigger, this.tqOpts, \"invoker\", \"invoker\", encoding_1.convertInvoker);\n        func.__requiredAPIs = [\n            {\n                api: \"cloudtasks.googleapis.com\",\n                reason: \"Needed for task queue functions\",\n            },\n        ];\n        func.run = handler;\n        return func;\n    }\n}\nexports.TaskQueueBuilder = TaskQueueBuilder;\n/**\n * Declares a function that can handle tasks enqueued using the Firebase Admin SDK.\n * @param options - Configuration for the Task Queue that feeds into this function.\n *        Omitting options will configure a Task Queue with default settings.\n */\nfunction taskQueue(options) {\n    return new TaskQueueBuilder(options);\n}\nexports.taskQueue = taskQueue;\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,QAAQ,gBAAgB,GAAG,KAAK;AACpD,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;;CAEC,GACD,MAAM;IACF,cAAc,GACd,YAAY,MAAM,EAAE,OAAO,CAAE;QACzB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;IACA;;;;KAIC,GACD,WAAW,OAAO,EAAE;QAChB,IAAI,IAAI;QACR,wEAAwE;QACxE,2EAA2E;QAC3E,iEAAiE;QACjE,MAAM,WAAW,CAAC,MAAM,UAAY,QAAQ,MAAM;QAClD,MAAM,OAAO,CAAC,GAAG,QAAQ,iBAAiB,EAAE;QAC5C,KAAK,SAAS,GAAG;YACb,GAAG,CAAC,GAAG,kBAAkB,gBAAgB,EAAE,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;YAC9D,kBAAkB,CAAC;QACvB;QACA,CAAC,GAAG,WAAW,aAAa,EAAE,KAAK,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE;QAC5E,CAAC,GAAG,WAAW,aAAa,EAAE,KAAK,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE;QAC5E,CAAC,GAAG,WAAW,gBAAgB,EAAE,KAAK,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,WAAW,WAAW,cAAc;QAC9H,KAAK,UAAU,GAAG;YACd,UAAU;YACV,GAAG,CAAC,GAAG,WAAW,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC;YAC/C,GAAG,CAAC,GAAG,kBAAkB,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC;YACzD,kBAAkB,CAAC,GAAG,WAAW,oBAAoB,EAAE,IAAI,CAAC,OAAO;QACvE;QACA,CAAC,GAAG,WAAW,aAAa,EAAE,KAAK,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,WAAW,KAAK,CAAC,GAAG,eAAe,qBAAqB,gBAAgB,mBAAmB;QACnO,CAAC,GAAG,WAAW,aAAa,EAAE,KAAK,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,UAAU,KAAK,CAAC,GAAG,2BAA2B;QACrL,CAAC,GAAG,WAAW,gBAAgB,EAAE,KAAK,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,WAAW,WAAW,cAAc;QAC/H,KAAK,cAAc,GAAG;YAClB;gBACI,KAAK;gBACL,QAAQ;YACZ;SACH;QACD,KAAK,GAAG,GAAG;QACX,OAAO;IACX;AACJ;AACA,QAAQ,gBAAgB,GAAG;AAC3B;;;;CAIC,GACD,SAAS,UAAU,OAAO;IACtB,OAAO,IAAI,iBAAiB;AAChC;AACA,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7902, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/providers/testLab.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2019 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResultStorage = exports.ClientInfo = exports.TestMatrix = exports.TestMatrixBuilder = exports._testMatrixWithOpts = exports.testMatrix = exports.TEST_MATRIX_COMPLETE_EVENT_TYPE = exports.SERVICE = exports.PROVIDER = void 0;\nconst cloud_functions_1 = require(\"../cloud-functions\");\n/** @internal */\nexports.PROVIDER = \"google.testing\";\n/** @internal */\nexports.SERVICE = \"testing.googleapis.com\";\n/** @internal */\nexports.TEST_MATRIX_COMPLETE_EVENT_TYPE = \"testMatrix.complete\";\n/** Handle events related to Test Lab test matrices. */\nfunction testMatrix() {\n    return _testMatrixWithOpts({});\n}\nexports.testMatrix = testMatrix;\n/** @internal */\nfunction _testMatrixWithOpts(opts) {\n    return new TestMatrixBuilder(() => {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(\"process.env.GCLOUD_PROJECT is not set.\");\n        }\n        return \"projects/\" + process.env.GCLOUD_PROJECT + \"/testMatrices/{matrix}\";\n    }, opts);\n}\nexports._testMatrixWithOpts = _testMatrixWithOpts;\n/** Builder used to create Cloud Functions for Test Lab test matrices events. */\nclass TestMatrixBuilder {\n    /** @internal */\n    constructor(triggerResource, options) {\n        this.triggerResource = triggerResource;\n        this.options = options;\n    }\n    /** Handle a TestMatrix that reached a final test state. */\n    onComplete(handler) {\n        const dataConstructor = (raw) => {\n            return new TestMatrix(raw.data);\n        };\n        return (0, cloud_functions_1.makeCloudFunction)({\n            provider: exports.PROVIDER,\n            eventType: exports.TEST_MATRIX_COMPLETE_EVENT_TYPE,\n            triggerResource: this.triggerResource,\n            service: exports.SERVICE,\n            dataConstructor,\n            handler,\n            options: this.options,\n        });\n    }\n}\nexports.TestMatrixBuilder = TestMatrixBuilder;\n/** TestMatrix captures details about a test run. */\nclass TestMatrix {\n    /** @internal */\n    constructor(data) {\n        this.testMatrixId = data.testMatrixId;\n        this.createTime = data.timestamp;\n        this.state = data.state;\n        this.outcomeSummary = data.outcomeSummary;\n        this.invalidMatrixDetails = data.invalidMatrixDetails;\n        this.resultStorage = new ResultStorage(data.resultStorage);\n        this.clientInfo = new ClientInfo(data.clientInfo);\n    }\n}\nexports.TestMatrix = TestMatrix;\n/** Information about the client which invoked the test. */\nclass ClientInfo {\n    /** @internal */\n    constructor(data) {\n        this.name = (data === null || data === void 0 ? void 0 : data.name) || \"\";\n        this.details = {};\n        for (const detail of (data === null || data === void 0 ? void 0 : data.clientInfoDetails) || []) {\n            this.details[detail.key] = detail.value || \"\";\n        }\n    }\n}\nexports.ClientInfo = ClientInfo;\n/** Locations where the test results are stored. */\nclass ResultStorage {\n    /** @internal */\n    constructor(data) {\n        var _a, _b, _c;\n        this.gcsPath = (_a = data === null || data === void 0 ? void 0 : data.googleCloudStorage) === null || _a === void 0 ? void 0 : _a.gcsPath;\n        this.toolResultsHistoryId = (_b = data === null || data === void 0 ? void 0 : data.toolResultsHistory) === null || _b === void 0 ? void 0 : _b.historyId;\n        this.toolResultsExecutionId = (_c = data === null || data === void 0 ? void 0 : data.toolResultsExecution) === null || _c === void 0 ? void 0 : _c.executionId;\n        this.resultsUrl = data === null || data === void 0 ? void 0 : data.resultsUrl;\n    }\n}\nexports.ResultStorage = ResultStorage;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8003, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/config.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.resetCache = exports.singleton = exports.firebaseConfig = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nvar config_1 = require(\"../common/config\");\nObject.defineProperty(exports, \"firebaseConfig\", { enumerable: true, get: function () { return config_1.firebaseConfig; } });\n/** @internal */\nfunction resetCache() {\n    exports.singleton = undefined;\n}\nexports.resetCache = resetCache;\n/**\n * Store and retrieve project configuration data such as third-party API\n * keys or other settings. You can set configuration values using the\n * Firebase CLI as described in\n * https://firebase.google.com/docs/functions/config-env.\n *\n * @deprecated Using functions.config() is discouraged. See https://firebase.google.com/docs/functions/config-env.\n */\nfunction config() {\n    // K_CONFIGURATION is only set in GCFv2\n    if (process.env.K_CONFIGURATION) {\n        throw new Error(\"functions.config() is no longer available in Cloud Functions for \" +\n            \"Firebase v2. Please see the latest documentation for information \" +\n            \"on how to transition to using environment variables\");\n    }\n    if (typeof exports.singleton === \"undefined\") {\n        init();\n    }\n    return exports.singleton;\n}\nexports.config = config;\nfunction init() {\n    try {\n        const parsed = JSON.parse(process.env.CLOUD_RUNTIME_CONFIG);\n        delete parsed.firebase;\n        exports.singleton = parsed;\n        return;\n    }\n    catch (e) {\n        // Do nothing\n    }\n    try {\n        const configPath = process.env.CLOUD_RUNTIME_CONFIG || path.join(process.cwd(), \".runtimeconfig.json\");\n        const contents = fs.readFileSync(configPath);\n        const parsed = JSON.parse(contents.toString(\"utf8\"));\n        delete parsed.firebase;\n        exports.singleton = parsed;\n        return;\n    }\n    catch (e) {\n        // Do nothing\n    }\n    exports.singleton = {};\n}\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,UAAU,GAAG,QAAQ,SAAS,GAAG,QAAQ,cAAc,GAAG,KAAK;AACxF,MAAM;AACN,MAAM;AACN,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,kBAAkB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,SAAS,cAAc;IAAE;AAAE;AAC1H,cAAc,GACd,SAAS;IACL,QAAQ,SAAS,GAAG;AACxB;AACA,QAAQ,UAAU,GAAG;AACrB;;;;;;;CAOC,GACD,SAAS;IACL,uCAAuC;IACvC,IAAI,QAAQ,GAAG,CAAC,eAAe,EAAE;QAC7B,MAAM,IAAI,MAAM,sEACZ,sEACA;IACR;IACA,IAAI,OAAO,QAAQ,SAAS,KAAK,aAAa;QAC1C;IACJ;IACA,OAAO,QAAQ,SAAS;AAC5B;AACA,QAAQ,MAAM,GAAG;AACjB,SAAS;IACL,IAAI;QACA,MAAM,SAAS,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,oBAAoB;QAC1D,OAAO,OAAO,QAAQ;QACtB,QAAQ,SAAS,GAAG;QACpB;IACJ,EACA,OAAO,GAAG;IACN,aAAa;IACjB;IACA,IAAI;QACA,MAAM,aAAa,QAAQ,GAAG,CAAC,oBAAoB,IAAI,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI;QAChF,MAAM,WAAW,GAAG,YAAY,CAAC;QACjC,MAAM,SAAS,KAAK,KAAK,CAAC,SAAS,QAAQ,CAAC;QAC5C,OAAO,OAAO,QAAQ;QACtB,QAAQ,SAAS,GAAG;QACpB;IACJ,EACA,OAAO,GAAG;IACN,aAAa;IACjB;IACA,QAAQ,SAAS,GAAG,CAAC;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8086, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/function-builder.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FunctionBuilder = exports.runWith = exports.region = void 0;\nconst options_1 = require(\"../common/options\");\nconst types_1 = require(\"../params/types\");\nconst function_configuration_1 = require(\"./function-configuration\");\nconst analytics = require(\"./providers/analytics\");\nconst auth = require(\"./providers/auth\");\nconst database = require(\"./providers/database\");\nconst firestore = require(\"./providers/firestore\");\nconst https = require(\"./providers/https\");\nconst pubsub = require(\"./providers/pubsub\");\nconst remoteConfig = require(\"./providers/remoteConfig\");\nconst storage = require(\"./providers/storage\");\nconst tasks = require(\"./providers/tasks\");\nconst testLab = require(\"./providers/testLab\");\n/**\n * Assert that the runtime options passed in are valid.\n * @param runtimeOptions object containing memory and timeout information.\n * @throws { Error } Memory and TimeoutSeconds values must be valid.\n */\nfunction assertRuntimeOptionsValid(runtimeOptions) {\n    const mem = runtimeOptions.memory;\n    if (mem && typeof mem !== \"object\" && !function_configuration_1.VALID_MEMORY_OPTIONS.includes(mem)) {\n        throw new Error(`The only valid memory allocation values are: ${function_configuration_1.VALID_MEMORY_OPTIONS.join(\", \")}`);\n    }\n    if (typeof runtimeOptions.timeoutSeconds === \"number\" &&\n        (runtimeOptions.timeoutSeconds > function_configuration_1.MAX_TIMEOUT_SECONDS || runtimeOptions.timeoutSeconds < 0)) {\n        throw new Error(`TimeoutSeconds must be between 0 and ${function_configuration_1.MAX_TIMEOUT_SECONDS}`);\n    }\n    if (runtimeOptions.ingressSettings &&\n        !(runtimeOptions.ingressSettings instanceof options_1.ResetValue) &&\n        !function_configuration_1.INGRESS_SETTINGS_OPTIONS.includes(runtimeOptions.ingressSettings)) {\n        throw new Error(`The only valid ingressSettings values are: ${function_configuration_1.INGRESS_SETTINGS_OPTIONS.join(\",\")}`);\n    }\n    if (runtimeOptions.vpcConnectorEgressSettings &&\n        !(runtimeOptions.vpcConnectorEgressSettings instanceof options_1.ResetValue) &&\n        !function_configuration_1.VPC_EGRESS_SETTINGS_OPTIONS.includes(runtimeOptions.vpcConnectorEgressSettings)) {\n        throw new Error(`The only valid vpcConnectorEgressSettings values are: ${function_configuration_1.VPC_EGRESS_SETTINGS_OPTIONS.join(\",\")}`);\n    }\n    validateFailurePolicy(runtimeOptions.failurePolicy);\n    const serviceAccount = runtimeOptions.serviceAccount;\n    if (serviceAccount &&\n        !(serviceAccount === \"default\" ||\n            serviceAccount instanceof options_1.ResetValue ||\n            serviceAccount instanceof types_1.Expression ||\n            serviceAccount.includes(\"@\"))) {\n        throw new Error(`serviceAccount must be set to 'default', a string expression, a service account email, or '{serviceAccountName}@'`);\n    }\n    if (runtimeOptions.labels) {\n        // Labels must follow the rules listed in\n        // https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements\n        if (Object.keys(runtimeOptions.labels).length > function_configuration_1.MAX_NUMBER_USER_LABELS) {\n            throw new Error(`A function must not have more than ${function_configuration_1.MAX_NUMBER_USER_LABELS} user-defined labels.`);\n        }\n        // We reserve the 'deployment' and 'firebase' namespaces for future feature development.\n        const reservedKeys = Object.keys(runtimeOptions.labels).filter((key) => key.startsWith(\"deployment\") || key.startsWith(\"firebase\"));\n        if (reservedKeys.length) {\n            throw new Error(`Invalid labels: ${reservedKeys.join(\", \")}. Labels may not start with reserved names 'deployment' or 'firebase'`);\n        }\n        const invalidLengthKeys = Object.keys(runtimeOptions.labels).filter((key) => key.length < 1 || key.length > 63);\n        if (invalidLengthKeys.length > 0) {\n            throw new Error(`Invalid labels: ${invalidLengthKeys.join(\", \")}. Label keys must be between 1 and 63 characters in length.`);\n        }\n        const invalidLengthValues = Object.values(runtimeOptions.labels).filter((value) => value.length > 63);\n        if (invalidLengthValues.length > 0) {\n            throw new Error(`Invalid labels: ${invalidLengthValues.join(\", \")}. Label values must be less than 64 charcters.`);\n        }\n        // Keys can contain lowercase letters, foreign characters, numbers, _ or -. They must start with a letter.\n        const validKeyPattern = /^[\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}$/u;\n        const invalidKeys = Object.keys(runtimeOptions.labels).filter((key) => !validKeyPattern.test(key));\n        if (invalidKeys.length > 0) {\n            throw new Error(`Invalid labels: ${invalidKeys.join(\", \")}. Label keys can only contain lowercase letters, international characters, numbers, _ or -, and must start with a letter.`);\n        }\n        // Values can contain lowercase letters, foreign characters, numbers, _ or -.\n        const validValuePattern = /^[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}$/u;\n        const invalidValues = Object.values(runtimeOptions.labels).filter((value) => !validValuePattern.test(value));\n        if (invalidValues.length > 0) {\n            throw new Error(`Invalid labels: ${invalidValues.join(\", \")}. Label values can only contain lowercase letters, international characters, numbers, _ or -.`);\n        }\n    }\n    if (typeof runtimeOptions.invoker === \"string\" && runtimeOptions.invoker.length === 0) {\n        throw new Error(\"Invalid service account for function invoker, must be a non-empty string\");\n    }\n    if (runtimeOptions.invoker !== undefined && Array.isArray(runtimeOptions.invoker)) {\n        if (runtimeOptions.invoker.length === 0) {\n            throw new Error(\"Invalid invoker array, must contain at least 1 service account entry\");\n        }\n        for (const serviceAccount of runtimeOptions.invoker) {\n            if (serviceAccount.length === 0) {\n                throw new Error(\"Invalid invoker array, a service account must be a non-empty string\");\n            }\n            if (serviceAccount === \"public\") {\n                throw new Error(\"Invalid invoker array, a service account cannot be set to the 'public' identifier\");\n            }\n            if (serviceAccount === \"private\") {\n                throw new Error(\"Invalid invoker array, a service account cannot be set to the 'private' identifier\");\n            }\n        }\n    }\n    if (runtimeOptions.secrets !== undefined) {\n        const invalidSecrets = runtimeOptions.secrets.filter((s) => !/^[A-Za-z\\d\\-_]+$/.test(s instanceof types_1.SecretParam ? s.name : s));\n        if (invalidSecrets.length > 0) {\n            throw new Error(`Invalid secrets: ${invalidSecrets.join(\",\")}. ` +\n                \"Secret must be configured using the resource id (e.g. API_KEY)\");\n        }\n    }\n    if (\"allowInvalidAppCheckToken\" in runtimeOptions) {\n        throw new Error('runWith option \"allowInvalidAppCheckToken\" has been inverted and ' +\n            'renamed \"enforceAppCheck\"');\n    }\n    return true;\n}\nfunction validateFailurePolicy(policy) {\n    if (typeof policy === \"boolean\" || typeof policy === \"undefined\") {\n        return;\n    }\n    if (typeof policy !== \"object\") {\n        throw new Error(`failurePolicy must be a boolean or an object.`);\n    }\n    const retry = policy.retry;\n    if (typeof retry !== \"object\" || Object.keys(retry).length) {\n        throw new Error(\"failurePolicy.retry must be an empty object.\");\n    }\n}\n/**\n * Assert regions specified are valid.\n * @param regions list of regions.\n * @throws { Error } Regions must be in list of supported regions.\n */\nfunction assertRegionsAreValid(regions) {\n    if (!regions.length) {\n        throw new Error(\"You must specify at least one region\");\n    }\n    return true;\n}\n/**\n * Configure the regions that the function is deployed to.\n * @param regions One of more region strings.\n * @example\n * functions.region('us-east1')\n * @example\n * functions.region('us-east1', 'us-central1')\n */\nfunction region(...regions) {\n    if (assertRegionsAreValid(regions)) {\n        return new FunctionBuilder({ regions });\n    }\n}\nexports.region = region;\n/**\n * Configure runtime options for the function.\n * @param runtimeOptions Object with optional fields:\n * 1. `memory`: amount of memory to allocate to the function, possible values\n *    are: '128MB', '256MB', '512MB', '1GB', '2GB', '4GB', and '8GB'.\n * 2. `timeoutSeconds`: timeout for the function in seconds, possible values are\n *    0 to 540.\n * 3. `failurePolicy`: failure policy of the function, with boolean `true` being\n *    equivalent to providing an empty retry object.\n * 4. `vpcConnector`: id of a VPC connector in same project and region.\n * 5. `vpcConnectorEgressSettings`: when a vpcConnector is set, control which\n *    egress traffic is sent through the vpcConnector.\n * 6. `serviceAccount`: Specific service account for the function.\n * 7. `ingressSettings`: ingress settings for the function, which control where a HTTPS\n *    function can be called from.\n *\n * Value must not be null.\n */\nfunction runWith(runtimeOptions) {\n    if (assertRuntimeOptionsValid(runtimeOptions)) {\n        return new FunctionBuilder(runtimeOptions);\n    }\n}\nexports.runWith = runWith;\nclass FunctionBuilder {\n    constructor(options) {\n        this.options = options;\n    }\n    /**\n     * Configure the regions that the function is deployed to.\n     * @param regions One or more region strings.\n     * @example\n     * functions.region('us-east1')\n     * @example\n     * functions.region('us-east1', 'us-central1')\n     */\n    region(...regions) {\n        if (assertRegionsAreValid(regions)) {\n            this.options.regions = regions;\n            return this;\n        }\n    }\n    /**\n     * Configure runtime options for the function.\n     * @param runtimeOptions Object with optional fields:\n     * 1. `memory`: amount of memory to allocate to the function, possible values\n     *    are: '128MB', '256MB', '512MB', '1GB', '2GB', '4GB', and '8GB'.\n     * 2. `timeoutSeconds`: timeout for the function in seconds, possible values are\n     *    0 to 540.\n     * 3. `failurePolicy`: failure policy of the function, with boolean `true` being\n     *    equivalent to providing an empty retry object.\n     * 4. `vpcConnector`: id of a VPC connector in the same project and region\n     * 5. `vpcConnectorEgressSettings`: when a `vpcConnector` is set, control which\n     *    egress traffic is sent through the `vpcConnector`.\n     *\n     * Value must not be null.\n     */\n    runWith(runtimeOptions) {\n        if (assertRuntimeOptionsValid(runtimeOptions)) {\n            this.options = {\n                ...this.options,\n                ...runtimeOptions,\n            };\n            return this;\n        }\n    }\n    get https() {\n        if (this.options.failurePolicy !== undefined) {\n            console.warn(\"RuntimeOptions.failurePolicy is not supported in https functions.\");\n        }\n        return {\n            /**\n             * Handle HTTP requests.\n             * @param handler A function that takes a request and response object,\n             * same signature as an Express app.\n             */\n            onRequest: (handler) => https._onRequestWithOptions(handler, this.options),\n            /**\n             * Declares a callable method for clients to call using a Firebase SDK.\n             * @param handler A method that takes a data and context and returns a value.\n             */\n            onCall: (handler) => https._onCallWithOptions(handler, this.options),\n        };\n    }\n    get tasks() {\n        return {\n            /**\n             * Declares a task queue function for clients to call using a Firebase Admin SDK.\n             * @param options Configurations for the task queue function.\n             */\n            /** @hidden */\n            taskQueue: (options) => {\n                return new tasks.TaskQueueBuilder(options, this.options);\n            },\n        };\n    }\n    get database() {\n        return {\n            /**\n             * Selects a database instance that will trigger the function. If omitted,\n             * will pick the default database for your project.\n             * @param instance The Realtime Database instance to use.\n             */\n            instance: (instance) => database._instanceWithOptions(instance, this.options),\n            /**\n             * Select Firebase Realtime Database Reference to listen to.\n             *\n             * This method behaves very similarly to the method of the same name in\n             * the client and Admin Firebase SDKs. Any change to the Database that\n             * affects the data at or below the provided `path` will fire an event in\n             * Cloud Functions.\n             *\n             * There are three important differences between listening to a Realtime\n             * Database event in Cloud Functions and using the Realtime Database in\n             * the client and Admin SDKs:\n             * 1. Cloud Functions allows wildcards in the `path` name. Any `path`\n             *    component in curly brackets (`{}`) is a wildcard that matches all\n             *    strings. The value that matched a certain invocation of a Cloud\n             *    Function is returned as part of the `context.params` object. For\n             *    example, `ref(\"messages/{messageId}\")` matches changes at\n             *    `/messages/message1` or `/messages/message2`, resulting in\n             *    `context.params.messageId` being set to `\"message1\"` or\n             *    `\"message2\"`, respectively.\n             * 2. Cloud Functions do not fire an event for data that already existed\n             *    before the Cloud Function was deployed.\n             * 3. Cloud Function events have access to more information, including\n             *    information about the user who triggered the Cloud Function.\n             * @param ref Path of the database to listen to.\n             */\n            ref: (path) => database._refWithOptions(path, this.options),\n        };\n    }\n    get firestore() {\n        return {\n            /**\n             * Select the Firestore document to listen to for events.\n             * @param path Full database path to listen to. This includes the name of\n             * the collection that the document is a part of. For example, if the\n             * collection is named \"users\" and the document is named \"Ada\", then the\n             * path is \"/users/Ada\".\n             */\n            document: (path) => firestore._documentWithOptions(path, this.options),\n            /** @hidden */\n            namespace: (namespace) => firestore._namespaceWithOptions(namespace, this.options),\n            /** @hidden */\n            database: (database) => firestore._databaseWithOptions(database, this.options),\n        };\n    }\n    get analytics() {\n        return {\n            /**\n             * Select analytics events to listen to for events.\n             * @param analyticsEventType Name of the analytics event type.\n             */\n            event: (analyticsEventType) => analytics._eventWithOptions(analyticsEventType, this.options),\n        };\n    }\n    get remoteConfig() {\n        return {\n            /**\n             * Handle all updates (including rollbacks) that affect a Remote Config\n             * project.\n             * @param handler A function that takes the updated Remote Config template\n             * version metadata as an argument.\n             */\n            onUpdate: (handler) => remoteConfig._onUpdateWithOptions(handler, this.options),\n        };\n    }\n    get storage() {\n        return {\n            /**\n             * The optional bucket function allows you to choose which buckets' events\n             * to handle. This step can be bypassed by calling object() directly,\n             * which will use the default Cloud Storage for Firebase bucket.\n             * @param bucket Name of the Google Cloud Storage bucket to listen to.\n             */\n            bucket: (bucket) => storage._bucketWithOptions(this.options, bucket),\n            /**\n             * Handle events related to Cloud Storage objects.\n             */\n            object: () => storage._objectWithOptions(this.options),\n        };\n    }\n    get pubsub() {\n        return {\n            /**\n             * Select Cloud Pub/Sub topic to listen to.\n             * @param topic Name of Pub/Sub topic, must belong to the same project as\n             * the function.\n             */\n            topic: (topic) => pubsub._topicWithOptions(topic, this.options),\n            schedule: (schedule) => pubsub._scheduleWithOptions(schedule, this.options),\n        };\n    }\n    get auth() {\n        return {\n            /**\n             * Handle events related to Firebase authentication users.\n             */\n            user: (userOptions) => auth._userWithOptions(this.options, userOptions),\n        };\n    }\n    get testLab() {\n        return {\n            /**\n             * Handle events related to Test Lab test matrices.\n             */\n            testMatrix: () => testLab._testMatrixWithOpts(this.options),\n        };\n    }\n}\nexports.FunctionBuilder = FunctionBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8445, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/node_modules/firebase-functions/lib/v1/index.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onInit = exports.params = exports.app = exports.logger = exports.testLab = exports.tasks = exports.storage = exports.remoteConfig = exports.pubsub = exports.https = exports.firestore = exports.database = exports.auth = exports.analytics = void 0;\n// Providers:\nconst logger = require(\"../logger\");\nexports.logger = logger;\nconst analytics = require(\"./providers/analytics\");\nexports.analytics = analytics;\nconst auth = require(\"./providers/auth\");\nexports.auth = auth;\nconst database = require(\"./providers/database\");\nexports.database = database;\nconst firestore = require(\"./providers/firestore\");\nexports.firestore = firestore;\nconst https = require(\"./providers/https\");\nexports.https = https;\nconst pubsub = require(\"./providers/pubsub\");\nexports.pubsub = pubsub;\nconst remoteConfig = require(\"./providers/remoteConfig\");\nexports.remoteConfig = remoteConfig;\nconst storage = require(\"./providers/storage\");\nexports.storage = storage;\nconst tasks = require(\"./providers/tasks\");\nexports.tasks = tasks;\nconst testLab = require(\"./providers/testLab\");\nexports.testLab = testLab;\nconst app_1 = require(\"../common/app\");\nexports.app = { setEmulatedAdminApp: app_1.setApp };\n// Exported root types:\n__exportStar(require(\"./cloud-functions\"), exports);\n__exportStar(require(\"./config\"), exports);\n__exportStar(require(\"./function-builder\"), exports);\n__exportStar(require(\"./function-configuration\"), exports);\n// NOTE: Equivalent to `export * as params from \"../params\"` but api-extractor doesn't support that syntax.\nconst params = require(\"../params\");\nexports.params = params;\nvar onInit_1 = require(\"../common/onInit\");\nObject.defineProperty(exports, \"onInit\", { enumerable: true, get: function () { return onInit_1.onInit; } });\n"],"names":[],"mappings":"AAAA;AACA,wBAAwB;AACxB,EAAE;AACF,8BAA8B;AAC9B,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,+EAA+E;AAC/E,4EAA4E;AAC5E,wEAAwE;AACxE,2DAA2D;AAC3D,EAAE;AACF,iFAAiF;AACjF,kDAAkD;AAClD,EAAE;AACF,6EAA6E;AAC7E,2EAA2E;AAC3E,8EAA8E;AAC9E,yEAAyE;AACzE,gFAAgF;AAChF,gFAAgF;AAChF,YAAY;AACZ,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG,QAAQ,GAAG,GAAG,QAAQ,MAAM,GAAG,QAAQ,OAAO,GAAG,QAAQ,KAAK,GAAG,QAAQ,OAAO,GAAG,QAAQ,YAAY,GAAG,QAAQ,MAAM,GAAG,QAAQ,KAAK,GAAG,QAAQ,SAAS,GAAG,QAAQ,QAAQ,GAAG,QAAQ,IAAI,GAAG,QAAQ,SAAS,GAAG,KAAK;AAC5P,aAAa;AACb,MAAM;AACN,QAAQ,MAAM,GAAG;AACjB,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,IAAI,GAAG;AACf,MAAM;AACN,QAAQ,QAAQ,GAAG;AACnB,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,KAAK,GAAG;AAChB,MAAM;AACN,QAAQ,MAAM,GAAG;AACjB,MAAM;AACN,QAAQ,YAAY,GAAG;AACvB,MAAM;AACN,QAAQ,OAAO,GAAG;AAClB,MAAM;AACN,QAAQ,KAAK,GAAG;AAChB,MAAM;AACN,QAAQ,OAAO,GAAG;AAClB,MAAM;AACN,QAAQ,GAAG,GAAG;IAAE,qBAAqB,MAAM,MAAM;AAAC;AAClD,uBAAuB;AACvB,oIAA2C;AAC3C,2HAAkC;AAClC,qIAA4C;AAC5C,2IAAkD;AAClD,2GAA2G;AAC3G,MAAM;AACN,QAAQ,MAAM,GAAG;AACjB,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,UAAU;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,SAAS,MAAM;IAAE;AAAE","ignoreList":[0],"debugId":null}}]
}