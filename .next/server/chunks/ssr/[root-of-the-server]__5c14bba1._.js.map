{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/genkit.ts"],"sourcesContent":["// src/ai/genkit.ts\r\nimport { genkit } from 'genkit';\r\nimport { googleAI } from '@genkit-ai/googleai';\r\n// REMOVIDO: O plugin genkitEval não é necessário para a geração padrão e é a causa provável do erro.\r\n// import { genkitEval } from '@genkit-ai/evaluator';\r\n\r\nconsole.log('[Oraculo IA] Configurando o ambiente Genkit (Simplificado)...');\r\n\r\n// Exporta a instância configurada para ser usada em outros módulos.\r\nexport const ai = genkit({\r\n  plugins: [\r\n    // Apenas o plugin essencial para se comunicar com a API do Google.\r\n    googleAI(),\r\n    // REMOVIDO: genkitEval()\r\n  ],\r\n  traceStore: {\r\n    provider: 'dev',\r\n  },\r\n  logLevel: 'debug',\r\n  enableTracingAndMetrics: true,\r\n});\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;AAAA;AACA;AAAA;;;AACA,qGAAqG;AACrG,qDAAqD;AAErD,QAAQ,GAAG,CAAC;AAGL,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,mEAAmE;QACnE,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAER;IACD,YAAY;QACV,UAAU;IACZ;IACA,UAAU;IACV,yBAAyB;AAC3B","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/flows/generate-saving-suggestions.ts"],"sourcesContent":["'use server';\r\n\r\nconsole.log('GEMINI_API_KEY (server):', process.env.GEMINI_API_KEY ? 'definida' : 'NÃO DEFINIDA');\r\n\r\nimport { ai } from '@/ai/genkit';\r\nimport { z } from 'zod';\r\nimport { gemini15Flash } from '@genkit-ai/googleai';\r\n\r\nconst GenerateSavingSuggestionsInputSchema = z.object({\r\n  financialSituation: z\r\n    .string()\r\n    .describe(\r\n      'Descrição da situação financeira atual do usuário (renda, despesas, etc.).'\r\n    ),\r\n  savingGoals: z\r\n    .string()\r\n    .describe('Os objetivos de economia do usuário (ex: comprar uma casa).'),\r\n});\r\nexport type GenerateSavingSuggestionsInput = z.infer<\r\n  typeof GenerateSavingSuggestionsInputSchema\r\n>;\r\n\r\nconst GenerateSavingSuggestionsOutputSchema = z.object({\r\n  suggestions: z.array(\r\n    z.object({\r\n      title: z.string().describe('O título da sugestão de economia.'),\r\n      description: z.string().describe('Uma descrição detalhada da sugestão.'),\r\n      example: z.string().describe('Um exemplo prático de como implementar a sugestão.'),\r\n    })\r\n  ).describe('Uma lista de sugestões de economia personalizadas.'),\r\n});\r\nexport type GenerateSavingSuggestionsOutput = z.infer<\r\n  typeof GenerateSavingSuggestionsOutputSchema\r\n>;\r\n\r\nexport async function generateSavingSuggestions(\r\n  input: GenerateSavingSuggestionsInput\r\n): Promise<GenerateSavingSuggestionsOutput> {\r\n\r\n  const llmResponse = await ai.generate({\r\n    model: gemini15Flash,\r\n    prompt: `\r\n      Você é um consultor financeiro. Sua tarefa é fornecer sugestões de economia\r\n      personalizadas com base na situação financeira e metas do usuário.\r\n      Forneça exemplos claros para cada sugestão.\r\n      Responda sempre em Portugês do Brasil.\r\n\r\n      **Situação Financeira:** \r\n      ${input.financialSituation}\r\n\r\n      **Metas de Economia:** \r\n      ${input.savingGoals}\r\n\r\n      Aqui estão algumas sugestões de economia para você:\r\n    `,\r\n    output: {\r\n        schema: GenerateSavingSuggestionsOutputSchema,\r\n    },\r\n    config: {\r\n      temperature: 0.7,\r\n    },\r\n  });\r\n\r\n  return llmResponse.output!;\r\n}"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AAAA;;;;AAJA,QAAQ,GAAG,CAAC,4BAA4B,QAAQ,GAAG,CAAC,cAAc,GAAG,aAAa;;;;AAMlF,MAAM,uCAAuC,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,oBAAoB,kKAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CACP;IAEJ,aAAa,kKAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,wCAAwC,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,aAAa,kKAAA,CAAA,IAAC,CAAC,KAAK,CAClB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,OAAO,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,aAAa,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACjC,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,IACA,QAAQ,CAAC;AACb;AAKO,eAAe,0BACpB,KAAqC;IAGrC,MAAM,cAAc,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QACpC,OAAO,2JAAA,CAAA,gBAAa;QACpB,QAAQ,CAAC;;;;;;;MAOP,EAAE,MAAM,kBAAkB,CAAC;;;MAG3B,EAAE,MAAM,WAAW,CAAC;;;IAGtB,CAAC;QACD,QAAQ;YACJ,QAAQ;QACZ;QACA,QAAQ;YACN,aAAa;QACf;IACF;IAEA,OAAO,YAAY,MAAM;AAC3B;;;IA7BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/flows/financial-question-answering.ts"],"sourcesContent":["import { ai } from '@/ai/genkit';\r\nimport { z } from 'zod';\r\nimport { gemini15Flash } from '@genkit-ai/googleai';\r\n\r\nconst messageSchema = z.object({\r\n  role: z.enum(['user', 'model']),\r\n  content: z.string(),\r\n});\r\n\r\nconst financialQuestionSchema = z.object({\r\n  question: z.string(),\r\n  history: z.array(messageSchema).optional(),\r\n  userEmail: z.string().optional(),\r\n});\r\n\r\nexport type FinancialQuestionOutput = {\r\n  answer: string;\r\n};\r\n\r\n/**\r\n * Interage com a IA para responder a perguntas financeiras.\r\n */\r\nexport async function answerFinancialQuestion(\r\n  input: z.infer<typeof financialQuestionSchema>\r\n): Promise<FinancialQuestionOutput> {\r\n  const genkitHistory =\r\n    input.history?.map((msg) => ({\r\n      role: msg.role,\r\n      parts: [{ text: msg.content }],\r\n    })) || [];\r\n\r\n  const llmResponse = await ai.generate({\r\n    model: gemini15Flash,\r\n    history: genkitHistory,\r\n    prompt: `\r\n      Você é Oráculo, um especialista em finanças pessoais.\r\n      Sua tarefa é responder a perguntas sobre as finanças do usuário.\r\n      O usuário está logado com o e-mail: ${input.userEmail}.\r\n\r\n      **REGRAS:**\r\n      1.  Responda sempre em Português do Brasil.\r\n      2.  Seja claro e objetivo.\r\n      3.  Se a pergunta não for sobre finanças, recuse educadamente.\r\n\r\n      **Pergunta do Usuário:**\r\n      ${input.question}\r\n    `,\r\n    config: {\r\n      temperature: 0.5,\r\n    },\r\n  });\r\n\r\n  // LOGA a resposta crua do LLM para investigação detalhada\r\n  console.log('DEBUG - Resposta bruta da IA:', JSON.stringify(llmResponse, null, 2));\r\n\r\n  // Tenta obter a resposta em várias formas conhecidas (output, text, choices, etc.)\r\n  let answer =\r\n    llmResponse.output ??\r\n    llmResponse.text ??\r\n    (llmResponse.choices && Array.isArray(llmResponse.choices) && llmResponse.choices[0]?.message?.content) ??\r\n    null;\r\n\r\n  if (!answer) {\r\n    console.warn(\"Resposta da IA vazia ou nula, verifique estrutura de llmResponse\");\r\n    answer = \"[⚠️ Resposta da IA não disponível]\";\r\n  }\r\n\r\n  // LOGA o que será retornado para o frontend\r\n  console.log('DEBUG - Resposta entregue ao frontend:', answer);\r\n\r\n  return { answer };\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEA,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AASO,eAAe,wBACpB,KAA8C;IAE9C,MAAM,gBACJ,MAAM,OAAO,EAAE,IAAI,CAAC,MAAQ,CAAC;YAC3B,MAAM,IAAI,IAAI;YACd,OAAO;gBAAC;oBAAE,MAAM,IAAI,OAAO;gBAAC;aAAE;QAChC,CAAC,MAAM,EAAE;IAEX,MAAM,cAAc,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QACpC,OAAO,2JAAA,CAAA,gBAAa;QACpB,SAAS;QACT,QAAQ,CAAC;;;0CAG6B,EAAE,MAAM,SAAS,CAAC;;;;;;;;MAQtD,EAAE,MAAM,QAAQ,CAAC;IACnB,CAAC;QACD,QAAQ;YACN,aAAa;QACf;IACF;IAEA,0DAA0D;IAC1D,QAAQ,GAAG,CAAC,iCAAiC,KAAK,SAAS,CAAC,aAAa,MAAM;IAE/E,mFAAmF;IACnF,IAAI,SACF,YAAY,MAAM,IAClB,YAAY,IAAI,IAChB,CAAC,YAAY,OAAO,IAAI,MAAM,OAAO,CAAC,YAAY,OAAO,KAAK,YAAY,OAAO,CAAC,EAAE,EAAE,SAAS,OAAO,KACtG;IAEF,IAAI,CAAC,QAAQ;QACX,QAAQ,IAAI,CAAC;QACb,SAAS;IACX;IAEA,4CAA4C;IAC5C,QAAQ,GAAG,CAAC,0CAA0C;IAEtD,OAAO;QAAE;IAAO;AAClB","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/actions.ts"],"sourcesContent":["// src/app/actions.ts\r\n'use server';\r\n\r\nimport { answerFinancialQuestion } from '@/ai/flows/financial-question-answering';\r\nimport { z } from 'zod';\r\n\r\nconst messageSchema = z.object({\r\n  role: z.enum(['user', 'model']),\r\n  content: z.string(),\r\n});\r\n\r\n// CORREÇÃO: Adicionado 'userEmail' ao schema para corresponder aos dados enviados pelo cliente.\r\nconst financialQuestionSchema = z.object({\r\n  question: z.string().min(1, 'A pergunta não pode estar vazia.'),\r\n  history: z.array(messageSchema).optional(),\r\n  userEmail: z.string().optional(),\r\n});\r\n\r\n/**\r\n * Server Action para lidar com perguntas financeiras do usuário.\r\n */\r\nexport async function handleFinancialQuestion(input: z.infer<typeof financialQuestionSchema>) {\r\n  // Adicionando um log para depurar a entrada.\r\n  console.log(\"Input recebido na Server Action:\", input);\r\n\r\n  const validatedInput = financialQuestionSchema.safeParse(input);\r\n\r\n  if (!validatedInput.success) {\r\n    console.error('Erro de validação do Zod:', validatedInput.error.flatten().fieldErrors);\r\n    throw new Error('Entrada inválida para a pergunta financeira.');\r\n  }\r\n\r\n  // A partir daqui, usamos `validatedInput.data` que contém os dados limpos.\r\n  const result = await answerFinancialQuestion(validatedInput.data);\r\n  return result;\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;AAGrB;AACA;;;;;;AAEA,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,gGAAgG;AAChG,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAKO,eAAe,wBAAwB,KAA8C;IAC1F,6CAA6C;IAC7C,QAAQ,GAAG,CAAC,oCAAoC;IAEhD,MAAM,iBAAiB,wBAAwB,SAAS,CAAC;IAEzD,IAAI,CAAC,eAAe,OAAO,EAAE;QAC3B,QAAQ,KAAK,CAAC,6BAA6B,eAAe,KAAK,CAAC,OAAO,GAAG,WAAW;QACrF,MAAM,IAAI,MAAM;IAClB;IAEA,2EAA2E;IAC3E,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,0BAAuB,AAAD,EAAE,eAAe,IAAI;IAChE,OAAO;AACT;;;IAdsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateSavingSuggestions as '407905b8f5423d7c17aafd79e0aaaf8a93ea827532'} from 'ACTIONS_MODULE0'\nexport {handleFinancialQuestion as '40b68f8836293585b1da84d4dc4e753810a53daab2'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}