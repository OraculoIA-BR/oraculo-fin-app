{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import { genkit } from 'genkit';\nimport { googleAI } from '@genkit-ai/googleai';\n\n// Não importe nada do OpenTelemetry aqui!\n\nconsole.log('[Oraculo IA] Configurando o ambiente Genkit (Configuração Padrão).');\nconsole.log('[Oraculo IA] O plugin tentará encontrar a GOOGLE_API_KEY no ambiente.');\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(),\n  ],\n  traceStore: {\n    provider: 'dev', // Só para depuração local!\n  },\n  logLevel: 'debug', // Logs detalhados para desenvolvimento\n});"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEA,0CAA0C;AAE1C,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC;AAEL,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,YAAY;QACV,UAAU;IACZ;IACA,UAAU;AACZ","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/financial-question-answering.ts"],"sourcesContent":["import { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { gemini15Flash } from '@genkit-ai/googleai';\n\nconst messageSchema = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\n\nconst financialQuestionSchema = z.object({\n  question: z.string(),\n  history: z.array(messageSchema).optional(),\n  userEmail: z.string().optional(),\n});\n\nexport type FinancialQuestionOutput = {\n  answer: string;\n};\n\nexport async function answerFinancialQuestion(\n  input: z.infer<typeof financialQuestionSchema>\n): Promise<FinancialQuestionOutput> {\n  try {\n    const genkitHistory =\n      input.history?.map((msg) => ({\n        role: msg.role,\n        parts: [{ text: msg.content }],\n      })) || [];\n\n    const llmResponse = await ai.generate({\n      model: gemini15Flash,\n      history: genkitHistory,\n      prompt: `\n        Você é Oráculo, um especialista em finanças pessoais.\n        Sua tarefa é responder a perguntas sobre as finanças do usuário.\n        O usuário está logado com o e-mail: ${input.userEmail}.\n\n        **REGRAS:**\n        1.  Responda sempre em Português do Brasil.\n        2.  Seja claro e objetivo.\n        3.  Se a pergunta não for sobre finanças, recuse educadamente.\n\n        **Pergunta do Usuário:**\n        ${input.question}\n      `,\n      config: {\n        temperature: 0.5,\n      },\n    });\n\n    const answer = llmResponse.text();\n\n    if (!answer) {\n      console.warn(\"Resposta da IA retornou vazia.\");\n      return { answer: \"[⚠️ A IA não forneceu uma resposta. Tente reformular a pergunta.]\" };\n    }\n\n    console.log('DEBUG - Resposta entregue ao frontend:', answer);\n    return { answer };\n\n  } catch (error) {\n    console.error(\"ERRO CRÍTICO NO FLUXO DE IA:\", error);\n    return { \n      answer: \"Desculpe, ocorreu um erro de comunicação com o serviço de IA. Verifique as configurações de API ou a sua cota de uso e tente novamente.\" \n    };\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEA,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAMO,eAAe,wBACpB,KAA8C;IAE9C,IAAI;QACF,MAAM,gBACJ,MAAM,OAAO,EAAE,IAAI,CAAC,MAAQ,CAAC;gBAC3B,MAAM,IAAI,IAAI;gBACd,OAAO;oBAAC;wBAAE,MAAM,IAAI,OAAO;oBAAC;iBAAE;YAChC,CAAC,MAAM,EAAE;QAEX,MAAM,cAAc,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;YACpC,OAAO,2JAAA,CAAA,gBAAa;YACpB,SAAS;YACT,QAAQ,CAAC;;;4CAG6B,EAAE,MAAM,SAAS,CAAC;;;;;;;;QAQtD,EAAE,MAAM,QAAQ,CAAC;MACnB,CAAC;YACD,QAAQ;gBACN,aAAa;YACf;QACF;QAEA,MAAM,SAAS,YAAY,IAAI;QAE/B,IAAI,CAAC,QAAQ;YACX,QAAQ,IAAI,CAAC;YACb,OAAO;gBAAE,QAAQ;YAAoE;QACvF;QAEA,QAAQ,GAAG,CAAC,0CAA0C;QACtD,OAAO;YAAE;QAAO;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YACL,QAAQ;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// src/app/actions.ts\n'use server';\n\nimport { answerFinancialQuestion, type FinancialQuestionOutput } from '@/ai/flows/financial-question-answering';\nimport { z } from 'zod';\n\nconst messageSchema = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\n\nconst financialQuestionSchema = z.object({\n  question: z.string().min(1, 'A pergunta não pode estar vazia.'),\n  history: z.array(messageSchema).optional(),\n  userEmail: z.string().optional(),\n});\n\n/**\n * Server Action blindada para depuração.\n * Este é o ponto de entrada do backend. Vamos registrar tudo aqui.\n */\nexport async function handleFinancialQuestion(input: z.infer<typeof financialQuestionSchema>): Promise<FinancialQuestionOutput> {\n  console.log('--------------------------------------------------');\n  console.log('[SERVER ACTION] Execução iniciada.');\n  console.log('[SERVER ACTION] Input recebido do frontend:', JSON.stringify(input, null, 2));\n\n  try {\n    const validatedInput = financialQuestionSchema.safeParse(input);\n\n    if (!validatedInput.success) {\n      console.error('[SERVER ACTION] ERRO: Falha na validação do Zod.');\n      console.error(validatedInput.error.flatten().fieldErrors);\n      throw new Error('Entrada inválida para a pergunta financeira.');\n    }\n    \n    console.log('[SERVER ACTION] Validação do input bem-sucedida.');\n    console.log('[SERVER ACTION] Chamando o fluxo de IA \"answerFinancialQuestion\"...');\n\n    // Chama o fluxo de IA. Este é o ponto onde a falha provavelmente ocorre.\n    const result = await answerFinancialQuestion(validatedInput.data);\n\n    if (!result || typeof result.answer !== 'string') {\n        console.error('[SERVER ACTION] ERRO: O fluxo de IA retornou um valor inesperado ou inválido.', result);\n        return { answer: '[⚠️ Ocorreu um erro interno na IA. O resultado retornado era inválido.]' };\n    }\n\n    console.log('[SERVER ACTION] Fluxo de IA executado com sucesso.');\n    console.log('[SERVER ACTION] Resultado a ser enviado para o frontend:', JSON.stringify(result, null, 2));\n    console.log('--------------------------------------------------');\n\n    return result;\n\n  } catch (error) {\n    console.error('[SERVER ACTION] ERRO CATASTRÓFICO: Uma exceção foi capturada na Server Action.');\n    console.error('Isso geralmente acontece se o fluxo de IA falhar de forma crítica.');\n    console.error('Erro original:', error);\n    console.log('--------------------------------------------------');\n\n    // GARANTE que nunca retornaremos 'undefined'.\n    return { \n      answer: \"[⚠️ Desculpe, o serviço de IA encontrou um erro crítico. Verifique os logs do servidor.]\" \n    };\n  }\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;AAGrB;AACA;;;;;;AAEA,MAAM,gBAAgB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,0BAA0B,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,SAAS,kKAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;IACxC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAChC;AAMO,eAAe,wBAAwB,KAA8C;IAC1F,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,+CAA+C,KAAK,SAAS,CAAC,OAAO,MAAM;IAEvF,IAAI;QACF,MAAM,iBAAiB,wBAAwB,SAAS,CAAC;QAEzD,IAAI,CAAC,eAAe,OAAO,EAAE;YAC3B,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC,eAAe,KAAK,CAAC,OAAO,GAAG,WAAW;YACxD,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QAEZ,yEAAyE;QACzE,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,0BAAuB,AAAD,EAAE,eAAe,IAAI;QAEhE,IAAI,CAAC,UAAU,OAAO,OAAO,MAAM,KAAK,UAAU;YAC9C,QAAQ,KAAK,CAAC,iFAAiF;YAC/F,OAAO;gBAAE,QAAQ;YAA0E;QAC/F;QAEA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,4DAA4D,KAAK,SAAS,CAAC,QAAQ,MAAM;QACrG,QAAQ,GAAG,CAAC;QAEZ,OAAO;IAET,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,QAAQ,GAAG,CAAC;QAEZ,8CAA8C;QAC9C,OAAO;YACL,QAAQ;QACV;IACF;AACF;;;IA1CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {handleFinancialQuestion as '40b68f8836293585b1da84d4dc4e753810a53daab2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}