{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/ai/flows/financial-question-answering.ts"],"sourcesContent":["// src/ai/flows/financial-question-answering.ts\r\nimport { generate } from '@genkit-ai/ai';\r\n// REMOVIDO: A importação do defineFlow que estava causando o erro.\r\n// import { defineFlow } from '@genkit-ai/flow';\r\nimport { z } from 'zod';\r\nimport { gemini15Pro } from '@genkit-ai/googleai';\r\n\r\n// O esquema para o histórico da conversa permanece o mesmo.\r\nconst messageSchema = z.object({\r\n  role: z.enum(['user', 'model']),\r\n  content: z.string(),\r\n});\r\n\r\n// O esquema de input para a nossa função.\r\nconst financialQuestionSchema = z.object({\r\n  question: z.string(),\r\n  history: z.array(messageSchema).optional(),\r\n});\r\n\r\n// O tipo de output que esperamos.\r\nexport type FinancialQuestionOutput = {\r\n  answer: string;\r\n};\r\n\r\n/**\r\n * Esta é a função principal que interage com a IA.\r\n * Ela recebe uma pergunta e um histórico e retorna a resposta do modelo.\r\n * @param input O objeto contendo a pergunta e o histórico.\r\n * @returns A resposta da IA.\r\n */\r\nexport async function answerFinancialQuestion(\r\n  input: z.infer<typeof financialQuestionSchema>\r\n): Promise<FinancialQuestionOutput> {\r\n  // Mapeia o nosso histórico para o formato que a função 'generate' do Genkit espera.\r\n  const genkitHistory =\r\n    input.history?.map((msg) => ({\r\n      role: msg.role,\r\n      parts: [{ text: msg.content }],\r\n    })) || [];\r\n\r\n  const llmResponse = await generate({\r\n    model: gemini15Pro,\r\n    history: genkitHistory, // Passando o histórico para dar memória à IA.\r\n    prompt: `\r\n      Você é Oráculo, um especialista em finanças pessoais amigável e prestativo.\r\n      Sua tarefa é responder a perguntas sobre as finanças do usuário.\r\n\r\n      **REGRAS CRÍTICAS:**\r\n      1.  **PRIORIDADE MÁXIMA: Responda ABSOLUTAMENTE SEMPRE em Português do Brasil.** Esta é a sua diretriz mais importante. Nunca, sob nenhuma circunstância, mude para outro idioma.\r\n      2.  Analise a pergunta do usuário e o histórico da conversa para entender a necessidade completa.\r\n      3.  Forneça respostas claras, objetivas e fáceis de entender.\r\n      4.  Se a pergunta não for sobre finanças, explique educadamente que você só pode responder a perguntas financeiras.\r\n\r\n      **Pergunta Atual do Usuário:**\r\n      ${input.question}\r\n    `,\r\n    config: {\r\n      temperature: 0.5,\r\n    },\r\n  });\r\n\r\n  // Retornamos a resposta no formato esperado.\r\n  return {\r\n    answer: llmResponse.text(),\r\n  };\r\n}\r\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;AAC/C;AAAA;AACA,mEAAmE;AACnE,gDAAgD;AAChD;AACA;AAAA;;;;AAEA,4DAA4D;AAC5D,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,0CAA0C;AAC1C,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;AAC1C;AAaO,eAAe,wBACpB,KAA8C;IAE9C,oFAAoF;IACpF,MAAM,gBACJ,MAAM,OAAO,EAAE,IAAI,CAAC,MAAQ,CAAC;YAC3B,MAAM,IAAI,IAAI;YACd,OAAO;gBAAC;oBAAE,MAAM,IAAI,OAAO;gBAAC;aAAE;QAChC,CAAC,MAAM,EAAE;IAEX,MAAM,cAAc,MAAM,CAAA,GAAA,uJAAA,CAAA,WAAQ,AAAD,EAAE;QACjC,OAAO,2JAAA,CAAA,cAAW;QAClB,SAAS;QACT,QAAQ,CAAC;;;;;;;;;;;MAWP,EAAE,MAAM,QAAQ,CAAC;IACnB,CAAC;QACD,QAAQ;YACN,aAAa;QACf;IACF;IAEA,6CAA6C;IAC7C,OAAO;QACL,QAAQ,YAAY,IAAI;IAC1B;AACF","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { answerFinancialQuestion } from '@/ai/flows/financial-question-answering';\r\nimport { z } from 'zod';\r\n\r\n// Esquema para o histórico da conversa, precisa ser idêntico ao do fluxo\r\nconst messageSchema = z.object({\r\n  role: z.enum(['user', 'model']),\r\n  content: z.string(),\r\n});\r\n\r\n// O esquema de input para a nossa Server Action\r\nconst financialQuestionSchema = z.object({\r\n  question: z.string(),\r\n  history: z.array(messageSchema).optional(),\r\n});\r\n\r\n/**\r\n * Esta é uma Server Action que pode ser chamada de forma segura\r\n * a partir de componentes de cliente para interagir com o fluxo de IA.\r\n * @param input O objeto contendo a pergunta do usuário e o histórico da conversa.\r\n * @returns A resposta da IA.\r\n */\r\nexport async function handleFinancialQuestion(input: z.infer<typeof financialQuestionSchema>) {\r\n  // Validamos a entrada para garantir que ela está no formato correto\r\n  const validatedInput = financialQuestionSchema.safeParse(input);\r\n\r\n  if (!validatedInput.success) {\r\n    throw new Error('Entrada inválida para a pergunta financeira.');\r\n  }\r\n\r\n  // Chamamos o nosso fluxo de IA com os dados validados\r\n  const result = await answerFinancialQuestion(validatedInput.data);\r\n  return result;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEA,yEAAyE;AACzE,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,gDAAgD;AAChD,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;AAC1C;AAQO,eAAe,wBAAwB,KAA8C;IAC1F,oEAAoE;IACpE,MAAM,iBAAiB,wBAAwB,SAAS,CAAC;IAEzD,IAAI,CAAC,eAAe,OAAO,EAAE;QAC3B,MAAM,IAAI,MAAM;IAClB;IAEA,sDAAsD;IACtD,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,0BAAuB,AAAD,EAAE,eAAe,IAAI;IAChE,OAAO;AACT;;;IAXsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {handleFinancialQuestion as '40b68f8836293585b1da84d4dc4e753810a53daab2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/victo/OneDrive/Desktop/oraculo-fin-app/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}